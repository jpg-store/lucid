Object.hasOwn||Object.defineProperty(Object,"hasOwn",{value:function(a,e){if(a==null)throw new TypeError("Cannot convert undefined or null to object");return Object.prototype.hasOwnProperty.call(Object(a),e)},configurable:!0,enumerable:!1,writable:!0});import*as i from"../esm/src/core/libs/cardano_multiplatform_lib/cardano_multiplatform_lib.generated.js";import*as D from"../esm/src/core/libs/cardano_message_signing/cardano_message_signing.generated.js";var Be={name:"@jpg-store/lucid-cardano",version:"0.11.0",license:"MIT",description:"This is a fork of the original Lucid repo compiled into CommonJS. For more information check https://github.com/spacebudz/lucid",repository:"https://github.com/jpg-store/lucid",module:"./dist/esm/mod.js",main:"./dist/esm/mod.js",types:"./dist/types/mod.d.ts",engines:{node:">=14"},dependencies:{"node-fetch":"^3.2.3","@peculiar/webcrypto":"^1.4.0",ws:"^8.10.0"},type:"module",exports:{".":{import:"./dist/esm/mod.js",types:"./dist/types/mod.d.ts"}}};async function _t(a,e){try{await a.instantiate({url:new URL(e,`https://deno.land/x/lucid@${Be.version}/src/core/libs/`)})}catch{}}await Promise.all([_t(i,"cardano_multiplatform_lib/cardano_multiplatform_lib_bg.wasm"),_t(D,"cardano_message_signing/cardano_message_signing_bg.wasm")]);var _=class{static free(...e){e.forEach(t=>{t?.free()})}};function kt(a){let e=[];try{let t=i.Costmdls.new(),s=i.CostModel.new();e.push(s),Object.values(a.PlutusV1).forEach((c,u)=>{let l=i.BigNum.from_str(c.toString());e.push(l);let d=i.Int.new(l);e.push(d),s.set(u,d)});let r=i.Language.new_plutus_v1();e.push(r),t.insert(r,s);let n=i.CostModel.new_plutus_v2();e.push(n),Object.values(a.PlutusV2||[]).forEach((c,u)=>{let l=i.BigNum.from_str(c.toString());e.push(l);let d=i.Int.new(l);e.push(d),n.set(u,d)});let o=i.Language.new_plutus_v2();return e.push(o),t.insert(o,n),t}finally{_.free(...e)}}var Je={minFeeA:44,minFeeB:155381,maxTxSize:16384,maxValSize:5e3,keyDeposit:2000000n,poolDeposit:500000000n,priceMem:.0577,priceStep:721e-7,maxTxExMem:14000000n,maxTxExSteps:10000000000n,coinsPerUtxoByte:4310n,collateralPercentage:150,maxCollateralInputs:3,costModels:{PlutusV1:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEd25519Signature-cpu-arguments-intercept":9462713,"verifyEd25519Signature-cpu-arguments-slope":1021,"verifyEd25519Signature-memory-arguments":10},PlutusV2:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"serialiseData-cpu-arguments-intercept":1159724,"serialiseData-cpu-arguments-slope":392670,"serialiseData-memory-arguments-intercept":0,"serialiseData-memory-arguments-slope":2,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEcdsaSecp256k1Signature-cpu-arguments":35892428,"verifyEcdsaSecp256k1Signature-memory-arguments":10,"verifyEd25519Signature-cpu-arguments-intercept":57996947,"verifyEd25519Signature-cpu-arguments-slope":18975,"verifyEd25519Signature-memory-arguments":10,"verifySchnorrSecp256k1Signature-cpu-arguments-intercept":38887044,"verifySchnorrSecp256k1Signature-cpu-arguments-slope":32947,"verifySchnorrSecp256k1Signature-memory-arguments":10}}};var vt=new TextEncoder().encode("0123456789abcdef");function os(a){return new Error("encoding/hex: invalid byte: "+new TextDecoder().decode(new Uint8Array([a])))}function as(){return new Error("encoding/hex: odd length hex string")}function dt(a){if(48<=a&&a<=57)return a-48;if(97<=a&&a<=102)return a-97+10;if(65<=a&&a<=70)return a-65+10;throw os(a)}function is(a){return a*2}function cs(a){let e=new Uint8Array(is(a.length));for(let t=0;t<e.length;t++){let s=a[t];e[t*2]=vt[s>>4],e[t*2+1]=vt[s&15]}return e}function St(a){return new TextDecoder().decode(cs(a))}function ht(a){let e=new Uint8Array(us(a.length));for(let t=0;t<e.length;t++){let s=dt(a[t*2]),r=dt(a[t*2+1]);e[t]=s<<4|r}if(a.length%2==1)throw dt(a[e.length*2]),as();return e}function us(a){return a>>>1}function It(a){return ht(new TextEncoder().encode(a))}var A=function(a,e,t,s,r){if(s==="m")throw new TypeError("Private method is not writable");if(s==="a"&&!r)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?a!==e||!r:!e.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return s==="a"?r.call(a,t):r?r.value=t:e.set(a,t),t},w=function(a,e,t,s){if(t==="a"&&!s)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?a!==e||!s:!e.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?s:t==="a"?s.call(a):s?s.value:e.get(a)},me,ve,ee,Te,$e,ne,oe,ae,ie,ce,ue,le,de,Se,Pe,fe,Ye,ge,ls,ds,hs,ps,k="0123456789abcdef".split(""),ms=[-2147483648,8388608,32768,128],Q=[24,16,8,0],Xe=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],q=[],Ae=class{constructor(e=!1,t=!1){me.set(this,void 0),ve.set(this,void 0),ee.set(this,void 0),Te.set(this,void 0),$e.set(this,void 0),ne.set(this,void 0),oe.set(this,void 0),ae.set(this,void 0),ie.set(this,void 0),ce.set(this,void 0),ue.set(this,void 0),le.set(this,void 0),de.set(this,void 0),Se.set(this,void 0),Pe.set(this,void 0),fe.set(this,void 0),Ye.set(this,0),ge.set(this,void 0),this.init(e,t)}init(e,t){t?(q[0]=q[16]=q[1]=q[2]=q[3]=q[4]=q[5]=q[6]=q[7]=q[8]=q[9]=q[10]=q[11]=q[12]=q[13]=q[14]=q[15]=0,A(this,ve,q,"f")):A(this,ve,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f"),e?(A(this,ne,3238371032,"f"),A(this,oe,914150663,"f"),A(this,ae,812702999,"f"),A(this,ie,4144912697,"f"),A(this,ce,4290775857,"f"),A(this,ue,1750603025,"f"),A(this,le,1694076839,"f"),A(this,de,3204075428,"f")):(A(this,ne,1779033703,"f"),A(this,oe,3144134277,"f"),A(this,ae,1013904242,"f"),A(this,ie,2773480762,"f"),A(this,ce,1359893119,"f"),A(this,ue,2600822924,"f"),A(this,le,528734635,"f"),A(this,de,1541459225,"f")),A(this,me,A(this,ge,A(this,ee,A(this,Pe,0,"f"),"f"),"f"),"f"),A(this,Te,A(this,Se,!1,"f"),"f"),A(this,$e,!0,"f"),A(this,fe,e,"f")}update(e){if(w(this,Te,"f"))return this;let t;e instanceof ArrayBuffer?t=new Uint8Array(e):t=e;let s=0,r=t.length,n=w(this,ve,"f");for(;s<r;){let o;if(w(this,Se,"f")&&(A(this,Se,!1,"f"),n[0]=w(this,me,"f"),n[16]=n[1]=n[2]=n[3]=n[4]=n[5]=n[6]=n[7]=n[8]=n[9]=n[10]=n[11]=n[12]=n[13]=n[14]=n[15]=0),typeof t!="string")for(o=w(this,ge,"f");s<r&&o<64;++s)n[o>>2]|=t[s]<<Q[o++&3];else for(o=w(this,ge,"f");s<r&&o<64;++s){let c=t.charCodeAt(s);c<128?n[o>>2]|=c<<Q[o++&3]:c<2048?(n[o>>2]|=(192|c>>6)<<Q[o++&3],n[o>>2]|=(128|c&63)<<Q[o++&3]):c<55296||c>=57344?(n[o>>2]|=(224|c>>12)<<Q[o++&3],n[o>>2]|=(128|c>>6&63)<<Q[o++&3],n[o>>2]|=(128|c&63)<<Q[o++&3]):(c=65536+((c&1023)<<10|t.charCodeAt(++s)&1023),n[o>>2]|=(240|c>>18)<<Q[o++&3],n[o>>2]|=(128|c>>12&63)<<Q[o++&3],n[o>>2]|=(128|c>>6&63)<<Q[o++&3],n[o>>2]|=(128|c&63)<<Q[o++&3])}A(this,Ye,o,"f"),A(this,ee,w(this,ee,"f")+(o-w(this,ge,"f")),"f"),o>=64?(A(this,me,n[16],"f"),A(this,ge,o-64,"f"),this.hash(),A(this,Se,!0,"f")):A(this,ge,o,"f")}return w(this,ee,"f")>4294967295&&(A(this,Pe,w(this,Pe,"f")+(w(this,ee,"f")/4294967296<<0),"f"),A(this,ee,w(this,ee,"f")%4294967296,"f")),this}finalize(){if(w(this,Te,"f"))return;A(this,Te,!0,"f");let e=w(this,ve,"f"),t=w(this,Ye,"f");e[16]=w(this,me,"f"),e[t>>2]|=ms[t&3],A(this,me,e[16],"f"),t>=56&&(w(this,Se,"f")||this.hash(),e[0]=w(this,me,"f"),e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=w(this,Pe,"f")<<3|w(this,ee,"f")>>>29,e[15]=w(this,ee,"f")<<3,this.hash()}hash(){let e=w(this,ne,"f"),t=w(this,oe,"f"),s=w(this,ae,"f"),r=w(this,ie,"f"),n=w(this,ce,"f"),o=w(this,ue,"f"),c=w(this,le,"f"),u=w(this,de,"f"),l=w(this,ve,"f"),d,h,f,m,S,v,y,B,I,N;for(let T=16;T<64;++T)m=l[T-15],d=(m>>>7|m<<25)^(m>>>18|m<<14)^m>>>3,m=l[T-2],h=(m>>>17|m<<15)^(m>>>19|m<<13)^m>>>10,l[T]=l[T-16]+d+l[T-7]+h<<0;N=t&s;for(let T=0;T<64;T+=4)w(this,$e,"f")?(w(this,fe,"f")?(y=300032,m=l[0]-1413257819,u=m-150054599<<0,r=m+24177077<<0):(y=704751109,m=l[0]-210244248,u=m-1521486534<<0,r=m+143694565<<0),A(this,$e,!1,"f")):(d=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),h=(n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7),y=e&t,f=y^e&s^N,v=n&o^~n&c,m=u+h+v+Xe[T]+l[T],S=d+f,u=r+m<<0,r=m+S<<0),d=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),h=(u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7),B=r&e,f=B^r&t^y,v=u&n^~u&o,m=c+h+v+Xe[T+1]+l[T+1],S=d+f,c=s+m<<0,s=m+S<<0,d=(s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10),h=(c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7),I=s&r,f=I^s&e^B,v=c&u^~c&n,m=o+h+v+Xe[T+2]+l[T+2],S=d+f,o=t+m<<0,t=m+S<<0,d=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),h=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),N=t&s,f=N^t&r^I,v=o&c^~o&u,m=n+h+v+Xe[T+3]+l[T+3],S=d+f,n=e+m<<0,e=m+S<<0;A(this,ne,w(this,ne,"f")+e<<0,"f"),A(this,oe,w(this,oe,"f")+t<<0,"f"),A(this,ae,w(this,ae,"f")+s<<0,"f"),A(this,ie,w(this,ie,"f")+r<<0,"f"),A(this,ce,w(this,ce,"f")+n<<0,"f"),A(this,ue,w(this,ue,"f")+o<<0,"f"),A(this,le,w(this,le,"f")+c<<0,"f"),A(this,de,w(this,de,"f")+u<<0,"f")}hex(){this.finalize();let e=w(this,ne,"f"),t=w(this,oe,"f"),s=w(this,ae,"f"),r=w(this,ie,"f"),n=w(this,ce,"f"),o=w(this,ue,"f"),c=w(this,le,"f"),u=w(this,de,"f"),l=k[e>>28&15]+k[e>>24&15]+k[e>>20&15]+k[e>>16&15]+k[e>>12&15]+k[e>>8&15]+k[e>>4&15]+k[e&15]+k[t>>28&15]+k[t>>24&15]+k[t>>20&15]+k[t>>16&15]+k[t>>12&15]+k[t>>8&15]+k[t>>4&15]+k[t&15]+k[s>>28&15]+k[s>>24&15]+k[s>>20&15]+k[s>>16&15]+k[s>>12&15]+k[s>>8&15]+k[s>>4&15]+k[s&15]+k[r>>28&15]+k[r>>24&15]+k[r>>20&15]+k[r>>16&15]+k[r>>12&15]+k[r>>8&15]+k[r>>4&15]+k[r&15]+k[n>>28&15]+k[n>>24&15]+k[n>>20&15]+k[n>>16&15]+k[n>>12&15]+k[n>>8&15]+k[n>>4&15]+k[n&15]+k[o>>28&15]+k[o>>24&15]+k[o>>20&15]+k[o>>16&15]+k[o>>12&15]+k[o>>8&15]+k[o>>4&15]+k[o&15]+k[c>>28&15]+k[c>>24&15]+k[c>>20&15]+k[c>>16&15]+k[c>>12&15]+k[c>>8&15]+k[c>>4&15]+k[c&15];return w(this,fe,"f")||(l+=k[u>>28&15]+k[u>>24&15]+k[u>>20&15]+k[u>>16&15]+k[u>>12&15]+k[u>>8&15]+k[u>>4&15]+k[u&15]),l}toString(){return this.hex()}digest(){this.finalize();let e=w(this,ne,"f"),t=w(this,oe,"f"),s=w(this,ae,"f"),r=w(this,ie,"f"),n=w(this,ce,"f"),o=w(this,ue,"f"),c=w(this,le,"f"),u=w(this,de,"f"),l=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,s>>24&255,s>>16&255,s>>8&255,s&255,r>>24&255,r>>16&255,r>>8&255,r&255,n>>24&255,n>>16&255,n>>8&255,n&255,o>>24&255,o>>16&255,o>>8&255,o&255,c>>24&255,c>>16&255,c>>8&255,c&255];return w(this,fe,"f")||l.push(u>>24&255,u>>16&255,u>>8&255,u&255),l}array(){return this.digest()}arrayBuffer(){this.finalize();let e=new ArrayBuffer(w(this,fe,"f")?28:32),t=new DataView(e);return t.setUint32(0,w(this,ne,"f")),t.setUint32(4,w(this,oe,"f")),t.setUint32(8,w(this,ae,"f")),t.setUint32(12,w(this,ie,"f")),t.setUint32(16,w(this,ce,"f")),t.setUint32(20,w(this,ue,"f")),t.setUint32(24,w(this,le,"f")),w(this,fe,"f")||t.setUint32(28,w(this,de,"f")),e}};me=new WeakMap,ve=new WeakMap,ee=new WeakMap,Te=new WeakMap,$e=new WeakMap,ne=new WeakMap,oe=new WeakMap,ae=new WeakMap,ie=new WeakMap,ce=new WeakMap,ue=new WeakMap,le=new WeakMap,de=new WeakMap,Se=new WeakMap,Pe=new WeakMap,fe=new WeakMap,Ye=new WeakMap,ge=new WeakMap;ls=new WeakMap,ds=new WeakMap,hs=new WeakMap,ps=new WeakMap;var Ct="Invalid mnemonic",Ie="Invalid entropy",fs="Invalid mnemonic checksum",Et=`A wordlist is required but a default could not be found.
Please pass a 2048 word array explicitly.`;function Bt(a,e){if(e=e||Ut,!e)throw new Error(Et);let t=xs(a).split(" ");if(t.length%3!==0)throw new Error(Ct);let s=t.map(d=>{let h=e.indexOf(d);if(h===-1)throw new Error(Ct);return At(h.toString(2),"0",11)}).join(""),r=Math.floor(s.length/33)*32,n=s.slice(0,r),o=s.slice(r),c=n.match(/(.{1,8})/g).map(Ot);if(c.length<16)throw new Error(Ie);if(c.length>32)throw new Error(Ie);if(c.length%4!==0)throw new Error(Ie);let u=new Uint8Array(c);if(Pt(u)!==o)throw new Error(fs);return b(u)}function gs(a){let s=new Uint8Array(a);if(a>4294967295)throw new RangeError("requested too many random bytes");if(a>0)if(a>65536)for(let r=0;r<a;r+=65536)crypto.getRandomValues(s.slice(r,r+65536));else crypto.getRandomValues(s);return s}function Tt(a,e,t){if(a=a||128,a%32!==0)throw new TypeError(Ie);return e=e||gs,ys(e(a/8),t)}function ys(a,e){if(e=e||Ut,!e)throw new Error(Et);if(a.length<16)throw new TypeError(Ie);if(a.length>32)throw new TypeError(Ie);if(a.length%4!==0)throw new TypeError(Ie);let t=Ht(Array.from(a)),s=Pt(a),o=(t+s).match(/(.{1,11})/g).map(c=>{let u=Ot(c);return e[u]});return e[0]==="\u3042\u3044\u3053\u304F\u3057\u3093"?o.join("\u3000"):o.join(" ")}function Pt(a){let t=a.length*8/32,s=new Ae().update(a).digest();return Ht(Array.from(s)).slice(0,t)}function At(a,e,t){for(;a.length<t;)a=e+a;return a}function Ht(a){return a.map(e=>At(e.toString(2),"0",8)).join("")}function xs(a){return(a||"").normalize("NFKD")}function Ot(a){return parseInt(a,2)}var Ut=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var pt=[0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243];typeof Int32Array<"u"&&(pt=new Int32Array(pt));function Nt(a,e=0){let t=~~e;for(let s=0;s<a.length;s++)t=pt[(t^a[s])&255]&255;return t}var He={Mainnet:{zeroTime:1596059091e3,zeroSlot:4492800,slotLength:1e3},Preview:{zeroTime:1666656e6,zeroSlot:0,slotLength:1e3},Preprod:{zeroTime:16557696e5,zeroSlot:86400,slotLength:1e3},Custom:{zeroTime:0,zeroSlot:0,slotLength:0}};function jt(a,e){let t=(a-e.zeroSlot)*e.slotLength;return e.zeroTime+t}function Dt(a,e){let t=a-e.zeroTime;return Math.floor(t/e.slotLength)+e.zeroSlot}var H=Symbol.for("TypeBox.Kind"),Ce=Symbol.for("TypeBox.Hint"),L=Symbol.for("TypeBox.Modifier"),ws=0,mt=class{ReadonlyOptional(e){return{[L]:"ReadonlyOptional",...e}}Readonly(e){return{[L]:"Readonly",...e}}Optional(e){return{[L]:"Optional",...e}}Any(e={}){return this.Create({...e,[H]:"Any"})}Array(e,t={}){return this.Create({...t,[H]:"Array",type:"array",items:e})}Boolean(e={}){return this.Create({...e,[H]:"Boolean",type:"boolean"})}ConstructorParameters(e,t={}){return this.Tuple([...e.parameters],{...t})}Constructor(e,t,s={}){if(e[H]==="Tuple"){let r=e.items===void 0?[]:e.items;return this.Create({...s,[H]:"Constructor",type:"object",instanceOf:"Constructor",parameters:r,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...s,[H]:"Constructor",type:"object",instanceOf:"Constructor",parameters:e,returns:t});throw new Error("TypeBuilder.Constructor: Invalid parameters")}}Date(e={}){return this.Create({...e,[H]:"Date",type:"object",instanceOf:"Date"})}Enum(e,t={}){let r=Object.keys(e).filter(n=>isNaN(n)).map(n=>e[n]).map(n=>typeof n=="string"?{[H]:"Literal",type:"string",const:n}:{[H]:"Literal",type:"number",const:n});return this.Create({...t,[H]:"Union",[Ce]:"Enum",anyOf:r})}Function(e,t,s={}){if(e[H]==="Tuple"){let r=e.items===void 0?[]:e.items;return this.Create({...s,[H]:"Function",type:"object",instanceOf:"Function",parameters:r,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...s,[H]:"Function",type:"object",instanceOf:"Function",parameters:e,returns:t});throw new Error("TypeBuilder.Function: Invalid parameters")}}InstanceType(e,t={}){return{...t,...this.Clone(e.returns)}}Integer(e={}){return this.Create({...e,[H]:"Integer",type:"integer"})}Intersect(e,t={}){let s=c=>c[L]&&c[L]==="Optional"||c[L]==="ReadonlyOptional",[r,n]=[new Set,new Set];for(let c of e)for(let[u,l]of Object.entries(c.properties))s(l)&&n.add(u);for(let c of e)for(let u of Object.keys(c.properties))n.has(u)||r.add(u);let o={};for(let c of e)for(let[u,l]of Object.entries(c.properties))o[u]=o[u]===void 0?l:{[H]:"Union",anyOf:[o[u],{...l}]};return r.size>0?this.Create({...t,[H]:"Object",type:"object",properties:o,required:[...r]}):this.Create({...t,[H]:"Object",type:"object",properties:o})}KeyOf(e,t={}){let s=Object.keys(e.properties).map(r=>this.Create({...t,[H]:"Literal",type:"string",const:r}));return this.Create({...t,[H]:"Union",[Ce]:"KeyOf",anyOf:s})}Literal(e,t={}){return this.Create({...t,[H]:"Literal",const:e,type:typeof e})}Never(e={}){return this.Create({...e,[H]:"Never",allOf:[{type:"boolean",const:!1},{type:"boolean",const:!0}]})}Null(e={}){return this.Create({...e,[H]:"Null",type:"null"})}Number(e={}){return this.Create({...e,[H]:"Number",type:"number"})}Object(e,t={}){let s=Object.keys(e),r=s.filter(o=>{let u=e[o][L];return u&&(u==="Optional"||u==="ReadonlyOptional")}),n=s.filter(o=>!r.includes(o));return n.length>0?this.Create({...t,[H]:"Object",type:"object",properties:e,required:n}):this.Create({...t,[H]:"Object",type:"object",properties:e})}Omit(e,t,s={}){let r=t[H]==="Union"?t.anyOf.map(o=>o.const):t,n={...this.Clone(e),...s,[Ce]:"Omit"};n.required&&(n.required=n.required.filter(o=>!r.includes(o)),n.required.length===0&&delete n.required);for(let o of Object.keys(n.properties))r.includes(o)&&delete n.properties[o];return this.Create(n)}Parameters(e,t={}){return W.Tuple(e.parameters,{...t})}Partial(e,t={}){let s={...this.Clone(e),...t,[Ce]:"Partial"};delete s.required;for(let r of Object.keys(s.properties)){let n=s.properties[r];switch(n[L]){case"ReadonlyOptional":n[L]="ReadonlyOptional";break;case"Readonly":n[L]="ReadonlyOptional";break;case"Optional":n[L]="Optional";break;default:n[L]="Optional";break}}return this.Create(s)}Pick(e,t,s={}){let r=t[H]==="Union"?t.anyOf.map(o=>o.const):t,n={...this.Clone(e),...s,[Ce]:"Pick"};n.required&&(n.required=n.required.filter(o=>r.includes(o)),n.required.length===0&&delete n.required);for(let o of Object.keys(n.properties))r.includes(o)||delete n.properties[o];return this.Create(n)}Promise(e,t={}){return this.Create({...t,[H]:"Promise",type:"object",instanceOf:"Promise",item:e})}Record(e,t,s={}){if(e[H]==="Union")return this.Object(e.anyOf.reduce((n,o)=>({...n,[o.const]:t}),{}),{...s,[Ce]:"Record"});let r=["Integer","Number"].includes(e[H])?"^(0|[1-9][0-9]*)$":e[H]==="String"&&e.pattern?e.pattern:"^.*$";return this.Create({...s,[H]:"Record",type:"object",patternProperties:{[r]:t},additionalProperties:!1})}Recursive(e,t={}){t.$id===void 0&&(t.$id=`T${ws++}`);let s=e({[H]:"Self",$ref:`${t.$id}`});return s.$id=t.$id,this.Create({...t,...s})}Ref(e,t={}){if(e.$id===void 0)throw Error("TypeBuilder.Ref: Referenced schema must specify an $id");return this.Create({...t,[H]:"Ref",$ref:e.$id})}RegEx(e,t={}){return this.Create({...t,[H]:"String",type:"string",pattern:e.source})}Required(e,t={}){let s={...this.Clone(e),...t,[Ce]:"Required"};s.required=Object.keys(s.properties);for(let r of Object.keys(s.properties)){let n=s.properties[r];switch(n[L]){case"ReadonlyOptional":n[L]="Readonly";break;case"Readonly":n[L]="Readonly";break;case"Optional":delete n[L];break;default:delete n[L];break}}return this.Create(s)}ReturnType(e,t={}){return{...t,...this.Clone(e.returns)}}Strict(e){return JSON.parse(JSON.stringify(e))}String(e={}){return this.Create({...e,[H]:"String",type:"string"})}Tuple(e,t={}){let r=e.length,n=e.length,o=e.length>0?{...t,[H]:"Tuple",type:"array",items:e,additionalItems:!1,minItems:r,maxItems:n}:{...t,[H]:"Tuple",type:"array",minItems:r,maxItems:n};return this.Create(o)}Undefined(e={}){return this.Create({...e,[H]:"Undefined",type:"null",typeOf:"Undefined"})}Union(e,t={}){return e.length===0?W.Never({...t}):this.Create({...t,[H]:"Union",anyOf:e})}Uint8Array(e={}){return this.Create({...e,[H]:"Uint8Array",type:"object",instanceOf:"Uint8Array"})}Unknown(e={}){return this.Create({...e,[H]:"Unknown"})}Unsafe(e={}){return this.Create({...e,[H]:e[H]||"Unsafe"})}Void(e={}){return this.Create({...e,[H]:"Void",type:"null",typeOf:"Void"})}Create(e){return e}Clone(e){let t=r=>typeof r=="object"&&r!==null&&!Array.isArray(r),s=r=>typeof r=="object"&&r!==null&&Array.isArray(r);return t(e)?Object.keys(e).reduce((r,n)=>({...r,[n]:this.Clone(e[n])}),Object.getOwnPropertySymbols(e).reduce((r,n)=>({...r,[n]:this.Clone(e[n])}),{})):s(e)?e.map(r=>this.Clone(r)):e}},W=new mt;var z=class{constructor(e,t){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fields",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.index=e,this.fields=t}},pe={Integer:function(a){let e=W.Unsafe({dataType:"integer"});return a&&Object.entries(a).forEach(([t,s])=>{e[t]=s}),e},Bytes:function(a){let e=W.Unsafe({dataType:"bytes"});return a&&Object.entries(a).forEach(([t,s])=>{e[t]=s}),e},Boolean:function(){return W.Unsafe({anyOf:[{title:"False",dataType:"constructor",index:0,fields:[]},{title:"True",dataType:"constructor",index:1,fields:[]}]})},Any:function(){return W.Unsafe({description:"Any Data."})},Array:function(a,e){let t=W.Array(a);return qe(t,{dataType:"list",items:a}),e&&Object.entries(e).forEach(([s,r])=>{t[s]=r}),t},Map:function(a,e,t){let s=W.Unsafe({dataType:"map",keys:a,values:e});return t&&Object.entries(t).forEach(([r,n])=>{s[r]=n}),s},Object:function(a,e){let t=W.Object(a);return qe(t,{anyOf:[{dataType:"constructor",index:0,fields:Object.entries(a).map(([s,r])=>({...r,title:s}))}]}),t.anyOf[0].hasConstr=typeof e?.hasConstr>"u"||e.hasConstr,t},Enum:function(a){let e=W.Union(a);return qe(e,{anyOf:a.map((t,s)=>t.anyOf[0].fields.length===0?{...t.anyOf[0],index:s}:{dataType:"constructor",title:(()=>{let r=t.anyOf[0].fields[0].title;if(r.charAt(0)!==r.charAt(0).toUpperCase())throw new Error(`Enum '${r}' needs to start with an uppercase letter.`);return t.anyOf[0].fields[0].title})(),index:s,fields:t.anyOf[0].fields[0].items||t.anyOf[0].fields[0].anyOf[0].fields})}),e},Tuple:function(a,e){let t=W.Tuple(a);return qe(t,{dataType:"list",items:a}),e&&Object.entries(e).forEach(([s,r])=>{t[s]=r}),t},Literal:function(a){if(a.charAt(0)!==a.charAt(0).toUpperCase())throw new Error(`Enum '${a}' needs to start with an uppercase letter.`);let e=W.Literal(a);return qe(e,{anyOf:[{dataType:"constructor",title:a,index:0,fields:[]}]}),e},Nullable:function(a){return W.Unsafe({anyOf:[{title:"Some",description:"An optional value.",dataType:"constructor",index:0,fields:[a]},{title:"None",description:"Nothing.",dataType:"constructor",index:1,fields:[]}]})},to:bs,from:_s,fromJson:ks,toJson:vs,void:function(){return"d87980"},castFrom:Y,castTo:te};function bs(a,e){function t(o){let c=[];try{if(typeof o=="bigint"){let u=i.BigInt.from_str(o.toString());return c.push(u),i.PlutusData.new_integer(u)}else{if(typeof o=="string")return i.PlutusData.new_bytes(g(o));if(o instanceof z){let{index:u,fields:l}=o,d=i.PlutusList.new();c.push(d),l.forEach(m=>{let S=t(m);d.add(S),c.push(S)});let h=i.BigNum.from_str(u.toString());c.push(h);let f=i.ConstrPlutusData.new(h,d);return c.push(f),i.PlutusData.new_constr_plutus_data(f)}else if(o instanceof Array){let u=i.PlutusList.new();return c.push(u),o.forEach(l=>{let d=t(l);u.add(d),c.push(d)}),i.PlutusData.new_list(u)}else if(o instanceof Map){let u=i.PlutusMap.new();c.push(u);for(let[l,d]of o.entries()){let h=t(l);c.push(h);let f=t(d);c.push(f),u.insert(h,f)}return i.PlutusData.new_map(u)}}throw new Error("Unsupported type")}catch(u){throw new Error("Could not serialize the data: "+u)}finally{_.free(...c)}}let s=e?te(a,e):a,r=t(s),n=b(r.to_bytes());return r.free(),n}function _s(a,e){function t(n){let o=[];try{if(n.kind()===0){let c=n.as_constr_plutus_data();o.push(c);let u=c.data();o.push(u);let l=[];for(let h=0;h<u.len();h++){let f=u.get(h);o.push(f),l.push(t(f))}let d=c.alternative();return o.push(d),new z(parseInt(d.to_str()),l)}else if(n.kind()===1){let c=n.as_map();o.push(c);let u=new Map,l=c.keys();o.push(l);for(let d=0;d<l.len();d++){let h=l.get(d);o.push(h);let f=c.get(h);o.push(f),u.set(t(h),t(f))}return u}else if(n.kind()===2){let c=n.as_list();o.push(c);let u=[];for(let l=0;l<c.len();l++){let d=c.get(l);o.push(d),u.push(t(d))}return u}else if(n.kind()===3){let c=n.as_integer();return o.push(c),BigInt(c.to_str())}else if(n.kind()===4)return b(n.as_bytes());throw new Error("Unsupported type")}finally{_.free(...o)}}let s=i.PlutusData.from_bytes(g(a)),r=t(s);return s.free(),e?Y(r,e):r}function ks(a){function e(t){if(typeof t=="string")return t.startsWith("0x")?b(g(t.slice(2))):Ft(t);if(typeof t=="number")return BigInt(t);if(typeof t=="bigint")return t;if(t instanceof Array)return t.map(s=>e(s));if(t instanceof Object){let s=new Map;return Object.entries(t).forEach(([r,n])=>{s.set(e(r),e(n))}),s}throw new Error("Unsupported type")}return e(a)}function vs(a){function e(t){if(typeof t=="bigint"||typeof t=="number"||typeof t=="string"&&!isNaN(parseInt(t))&&t.slice(-1)==="n"){let s=typeof t=="string"?BigInt(t.slice(0,-1)):t;return parseInt(s.toString())}if(typeof t=="string")try{return new TextDecoder(void 0,{fatal:!0}).decode(g(t))}catch{return"0x"+b(g(t))}if(t instanceof Array)return t.map(s=>e(s));if(t instanceof Map){let s={};return t.forEach((r,n)=>{let o=e(n);if(typeof o!="string"&&typeof o!="number")throw new Error("Unsupported type (Note: Only bytes or integers can be keys of a JSON object)");s[o]=e(r)}),s}throw new Error("Unsupported type (Note: Constructor cannot be converted to JSON)")}return e(a)}function Y(a,e){let t=e;if(!t)throw new Error("Could not type cast data.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof a!="bigint")throw new Error("Could not type cast to integer.");return Rt(a,t),a}case"bytes":{if(typeof a!="string")throw new Error("Could not type cast to bytes.");return Mt(a,t),a}case"constructor":{if(Lt(t)){if(!(a instanceof z)||a.index!==0||a.fields.length!==0)throw new Error("Could not type cast to void.");return}else if(a instanceof z&&a.index===t.index&&(t.hasConstr||t.hasConstr===void 0)){let r={};if(t.fields.length!==a.fields.length)throw new Error("Could not type cast to object. Fields do not match.");return t.fields.forEach((n,o)=>{let c=n.title||"wrapper";if(/[A-Z]/.test(c[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");r[c]=Y(a.fields[o],n)}),r}else if(a instanceof Array&&!t.hasConstr&&t.hasConstr!==void 0){let r={};if(t.fields.length!==a.length)throw new Error("Could not ype cast to object. Fields do not match.");return t.fields.forEach((n,o)=>{let c=n.title||"wrapper";if(/[A-Z]/.test(c[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");r[c]=Y(a[o],n)}),r}throw new Error("Could not type cast to object.")}case"enum":{if(t.anyOf.length===1)return Y(a,t.anyOf[0]);if(!(a instanceof z))throw new Error("Could not type cast to enum.");let r=t.anyOf.find(n=>n.index===a.index);if(!r||r.fields.length!==a.fields.length)throw new Error("Could not type cast to enum.");if(Kt(t)){if(a.fields.length!==0)throw new Error("Could not type cast to boolean.");switch(a.index){case 0:return!1;case 1:return!0}throw new Error("Could not type cast to boolean.")}else if(zt(t)){switch(a.index){case 0:{if(a.fields.length!==1)throw new Error("Could not type cast to nullable object.");return Y(a.fields[0],t.anyOf[0].fields[0])}case 1:{if(a.fields.length!==0)throw new Error("Could not type cast to nullable object.");return null}}throw new Error("Could not type cast to nullable object.")}switch(r.dataType){case"constructor":if(r.fields.length===0){if(/[A-Z]/.test(r.title[0]))return r.title;throw new Error("Could not type cast to enum.")}else{if(!/[A-Z]/.test(r.title))throw new Error("Could not type cast to enum. Enums need to start with an uppercase letter.");if(r.fields.length!==a.fields.length)throw new Error("Could not type cast to enum.");let n=r.fields[0].title?Object.fromEntries(r.fields.map((o,c)=>[o.title,Y(a.fields[c],o)])):r.fields.map((o,c)=>Y(a.fields[c],o));return{[r.title]:n}}}throw new Error("Could not type cast to enum.")}case"list":if(t.items instanceof Array){if(a instanceof z&&a.index===0&&t.hasConstr)return a.fields.map((r,n)=>Y(r,t.items[n]));if(a instanceof Array&&!t.hasConstr)return a.map((r,n)=>Y(r,t.items[n]));throw new Error("Could not type cast to tuple.")}else{if(!(a instanceof Array))throw new Error("Could not type cast to array.");return $t(a,t),a.map(r=>Y(r,t.items))}case"map":{if(!(a instanceof Map))throw new Error("Could not type cast to map.");qt(a,t);let r=new Map;for(let[n,o]of a.entries())r.set(Y(n,t.keys),Y(o,t.values));return r}case void 0:return a}throw new Error("Could not type cast data.")}function te(a,e){let t=e;if(!t)throw new Error("Could not type cast struct.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof a!="bigint")throw new Error("Could not type cast to integer.");return Rt(a,t),a}case"bytes":{if(typeof a!="string")throw new Error("Could not type cast to bytes.");return Mt(a,t),a}case"constructor":{if(Lt(t)){if(a!==void 0)throw new Error("Could not type cast to void.");return new z(0,[])}else if(typeof a!="object"||a===null||t.fields.length!==Object.keys(a).length)throw new Error("Could not type cast to constructor.");let r=t.fields.map(n=>te(a[n.title||"wrapper"],n));return t.hasConstr||t.hasConstr===void 0?new z(t.index,r):r}case"enum":{if(t.anyOf.length===1)return te(a,t.anyOf[0]);if(Kt(t)){if(typeof a!="boolean")throw new Error("Could not type cast to boolean.");return new z(a?1:0,[])}else if(zt(t)){if(a===null)return new z(1,[]);{let r=t.anyOf[0].fields;if(r.length!==1)throw new Error("Could not type cast to nullable object.");return new z(0,[te(a,r[0])])}}switch(typeof a){case"string":{if(!/[A-Z]/.test(a[0]))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let r=t.anyOf.findIndex(n=>n.dataType==="constructor"&&n.fields.length===0&&n.title===a);if(r===-1)throw new Error("Could not type cast to enum.");return new z(r,[])}case"object":{if(a===null)throw new Error("Could not type cast to enum.");let r=Object.keys(a)[0];if(!/[A-Z]/.test(r))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let n=t.anyOf.find(c=>c.dataType==="constructor"&&c.title===r);if(!n)throw new Error("Could not type cast to enum.");let o=a[r];return new z(n.index,o instanceof Array?o.map((c,u)=>te(c,n.fields[u])):n.fields.map(c=>{let[u,l]=Object.entries(o).find(([d])=>d===c.title);return te(l,c)}))}}throw new Error("Could not type cast to enum.")}case"list":{if(!(a instanceof Array))throw new Error("Could not type cast to array/tuple.");if(t.items instanceof Array){let r=a.map((n,o)=>te(n,t.items[o]));return t.hasConstr?new z(0,r):r}else return $t(a,t),a.map(r=>te(r,t.items))}case"map":{if(!(a instanceof Map))throw new Error("Could not type cast to map.");qt(a,t);let r=new Map;for(let[n,o]of a.entries())r.set(te(n,t.keys),te(o,t.values));return r}case void 0:return a}throw new Error("Could not type cast struct.")}function Rt(a,e){if(e.minimum&&a<BigInt(e.minimum))throw new Error(`Integer ${a} is below the minimum ${e.minimum}.`);if(e.maximum&&a>BigInt(e.maximum))throw new Error(`Integer ${a} is above the maxiumum ${e.maximum}.`);if(e.exclusiveMinimum&&a<=BigInt(e.exclusiveMinimum))throw new Error(`Integer ${a} is below the exclusive minimum ${e.exclusiveMinimum}.`);if(e.exclusiveMaximum&&a>=BigInt(e.exclusiveMaximum))throw new Error(`Integer ${a} is above the exclusive maximum ${e.exclusiveMaximum}.`)}function Mt(a,e){if(e.enum&&!e.enum.some(t=>t===a))throw new Error(`None of the keywords match with '${a}'.`);if(e.minLength&&a.length/2<e.minLength)throw new Error(`Bytes need to have a length of at least ${e.minLength} bytes.`);if(e.maxLength&&a.length/2>e.maxLength)throw new Error(`Bytes can have a length of at most ${e.minLength} bytes.`)}function $t(a,e){if(e.minItems&&a.length<e.minItems)throw new Error(`Array needs to contain at least ${e.minItems} items.`);if(e.maxItems&&a.length>e.maxItems)throw new Error(`Array can contain at most ${e.maxItems} items.`);if(e.uniqueItems&&new Set(a).size!==a.length)throw new Error("Array constains duplicates.")}function qt(a,e){if(e.minItems&&a.size<e.minItems)throw new Error(`Map needs to contain at least ${e.minItems} items.`);if(e.maxItems&&a.size>e.maxItems)throw new Error(`Map can contain at most ${e.maxItems} items.`)}function Kt(a){return a.anyOf&&a.anyOf[0]?.title==="False"&&a.anyOf[1]?.title==="True"}function Lt(a){return a.index===0&&a.fields.length===0}function zt(a){return a.anyOf&&a.anyOf[0]?.title==="Some"&&a.anyOf[1]?.title==="None"}function qe(a,e){Object.keys(a).forEach(t=>{delete a[t]}),Object.assign(a,e)}var Ge=class{constructor(e){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e}validatorToAddress(e,t){let s=[],r=Oe(this.lucid.network);try{let n=this.validatorToScriptHash(e);if(t){let o=i.ScriptHash.from_hex(n);s.push(o);let c=i.StakeCredential.from_scripthash(o);s.push(c);let u;if(t.type==="Key"){let h=i.Ed25519KeyHash.from_hex(t.hash);u=i.StakeCredential.from_keyhash(h),h.free()}else{let h=i.ScriptHash.from_hex(t.hash);u=i.StakeCredential.from_scripthash(h),h.free()}s.push(u);let l=i.BaseAddress.new(r,c,u);s.push(l);let d=l.to_address();return s.push(d),d.to_bech32(void 0)}else{let o=i.ScriptHash.from_hex(n);s.push(o);let c=i.StakeCredential.from_scripthash(o);s.push(c);let u=i.EnterpriseAddress.new(r,c);s.push(u);let l=u.to_address();return s.push(l),l.to_bech32(void 0)}}finally{_.free(...s)}}credentialToAddress(e,t){let s=Oe(this.lucid.network),r=[];try{if(t){let n,o;if(e.type==="Key"){let l=i.Ed25519KeyHash.from_hex(e.hash);r.push(l),n=i.StakeCredential.from_keyhash(l)}else{let l=i.ScriptHash.from_hex(e.hash);r.push(l),n=i.StakeCredential.from_scripthash(l)}if(r.push(n),t.type==="Key"){let l=i.Ed25519KeyHash.from_hex(t.hash);r.push(l),o=i.StakeCredential.from_keyhash(l)}else{let l=i.ScriptHash.from_hex(t.hash);r.push(l),o=i.StakeCredential.from_scripthash(l)}r.push(o);let c=i.BaseAddress.new(s,n,o);r.push(c);let u=c.to_address();return r.push(u),u.to_bech32(void 0)}else{let n;if(e.type==="Key"){let u=i.Ed25519KeyHash.from_hex(e.hash);r.push(u),n=i.StakeCredential.from_keyhash(u)}else{let u=i.ScriptHash.from_hex(e.hash);r.push(u),n=i.StakeCredential.from_scripthash(u)}r.push(n);let o=i.EnterpriseAddress.new(s,n);r.push(o);let c=o.to_address();return r.push(c),c.to_bech32(void 0)}}finally{_.free(...r)}}validatorToRewardAddress(e){let t=[],s=this.validatorToScriptHash(e),r=i.ScriptHash.from_hex(s);t.push(r);let n=i.StakeCredential.from_scripthash(r);t.push(n);let o=i.RewardAddress.new(Oe(this.lucid.network),n);t.push(o);let c=o.to_address();t.push(c);let u=c.to_bech32(void 0);return _.free(...t),u}credentialToRewardAddress(e){let t=[],s;if(e.type==="Key"){let c=i.Ed25519KeyHash.from_hex(e.hash);t.push(c),s=i.StakeCredential.from_keyhash(c)}else{let c=i.ScriptHash.from_hex(e.hash);t.push(c),s=i.StakeCredential.from_scripthash(c)}t.push(s);let r=i.RewardAddress.new(Oe(this.lucid.network),s);t.push(r);let n=r.to_address();t.push(n);let o=n.to_bech32(void 0);return _.free(...t),o}validatorToScriptHash(e){let t=[];try{switch(e.type){case"Native":{let s=i.NativeScript.from_bytes(g(e.script));t.push(s);let r=s.hash(i.ScriptHashNamespace.NativeScript);return t.push(r),r.to_hex()}case"PlutusV1":{let s=i.PlutusScript.from_bytes(g(Z(e.script)));t.push(s);let r=s.hash(i.ScriptHashNamespace.PlutusV1);return t.push(r),r.to_hex()}case"PlutusV2":{let s=i.PlutusScript.from_bytes(g(Z(e.script)));t.push(s);let r=s.hash(i.ScriptHashNamespace.PlutusV2);return t.push(r),r.to_hex()}default:throw new Error("No variant matched")}}finally{_.free(...t)}}mintingPolicyToId(e){return this.validatorToScriptHash(e)}datumToHash(e){let t=i.PlutusData.from_bytes(g(e)),s=i.hash_plutus_data(t);t.free();let r=s.to_hex();return s.free(),r}scriptHashToCredential(e){return{type:"Script",hash:e}}keyHashToCredential(e){return{type:"Key",hash:e}}generatePrivateKey(){return Is()}generateSeedPhrase(){return Cs()}unixTimeToSlot(e){return Dt(e,He[this.lucid.network])}slotToUnixTime(e){return jt(e,He[this.lucid.network])}getAddressDetails(e){return J(e)}nativeScriptFromJson(e){return Ps(e)}paymentCredentialOf(e){return ye(e)}stakeCredentialOf(e){return Ss(e)}getMinAdaForOutput(e){let t=i.min_ada_required(e,i.BigNum.from_str(this.lucid.protocolParameters.coinsPerUtxoByte.toString()));return BigInt(t.to_str()).valueOf()}};function Ze(a){try{return i.Address.from_bytes(g(a))}catch{try{return i.Address.from_bech32(a)}catch{throw new Error("Could not deserialize address.")}}}function J(a){let e=[];try{try{let t=Ze(a);e.push(t);let s=i.BaseAddress.from_address(t);e.push(s);let r,n=s.payment_cred();if(e.push(n),n.kind()===0){let l=n.to_keyhash();e.push(l),r={type:"Key",hash:b(l.to_bytes())}}else{let l=n.to_scripthash();e.push(l),r={type:"Script",hash:b(l.to_bytes())}}let o,c=s.stake_cred();if(e.push(c),c.kind()===0){let l=c.to_keyhash();e.push(l),o={type:"Key",hash:b(l.to_bytes())}}else{let l=c.to_scripthash();e.push(l),o={type:"Script",hash:b(l.to_bytes())}}let u=s.to_address();return e.push(u),{type:"Base",networkId:u.network_id(),address:{bech32:u.to_bech32(void 0),hex:b(u.to_bytes())},paymentCredential:r,stakeCredential:o}}catch{}try{let t=Ze(a);e.push(t);let s=i.EnterpriseAddress.from_address(t);e.push(s);let r,n=s.payment_cred();if(e.push(n),n.kind()===0){let c=n.to_keyhash();e.push(c),r={type:"Key",hash:b(c.to_bytes())}}else{let c=n.to_scripthash();e.push(c),r={type:"Script",hash:b(c.to_bytes())}}let o=s.to_address();return e.push(o),{type:"Enterprise",networkId:o.network_id(),address:{bech32:o.to_bech32(void 0),hex:b(o.to_bytes())},paymentCredential:r}}catch{}try{let t=Ze(a);e.push(t);let s=i.PointerAddress.from_address(t);e.push(s);let r,n=s.payment_cred();if(e.push(n),n.kind()===0){let c=n.to_keyhash();e.push(c),r={type:"Key",hash:b(c.to_bytes())}}else{let c=n.to_scripthash();e.push(c),r={type:"Script",hash:b(c.to_bytes())}}let o=s.to_address();return e.push(o),{type:"Pointer",networkId:o.network_id(),address:{bech32:o.to_bech32(void 0),hex:b(o.to_bytes())},paymentCredential:r}}catch{}try{let t=Ze(a);e.push(t);let s=i.RewardAddress.from_address(t);e.push(s);let r,n=s.payment_cred();if(e.push(n),n.kind()===0){let c=n.to_keyhash();e.push(c),r={type:"Key",hash:b(c.to_bytes())}}else{let c=n.to_scripthash();e.push(c),r={type:"Script",hash:b(c.to_bytes())}}let o=s.to_address();return e.push(o),{type:"Reward",networkId:o.network_id(),address:{bech32:o.to_bech32(void 0),hex:b(o.to_bytes())},stakeCredential:r}}catch{}try{let t=(r=>{try{return i.ByronAddress.from_bytes(g(r))}catch{try{return i.ByronAddress.from_base58(r)}catch{throw new Error("Could not deserialize address.")}}})(a);e.push(t);let s=t.to_address();return e.push(s),{type:"Byron",networkId:t.network_id(),address:{bech32:"",hex:b(s.to_bytes())}}}catch{}throw new Error("No address type matched for: "+a)}finally{_.free(...e)}}function ye(a){let{paymentCredential:e}=J(a);if(!e)throw new Error("The specified address does not contain a payment credential.");return e}function Ss(a){let{stakeCredential:e}=J(a);if(!e)throw new Error("The specified address does not contain a stake credential.");return e}function Is(){let a=i.PrivateKey.generate_ed25519(),e=a.to_bech32();return a.free(),e}function Cs(){return Tt(256)}function ft(a){let e=[],t={},s=a.coin();e.push(s),t.lovelace=BigInt(s.to_str());let r=a.multiasset();if(e.push(r),r){let n=r.keys();e.push(n);for(let o=0;o<n.len();o++){let c=n.get(o);e.push(c);let u=r.get(c);e.push(u);let l=u.keys();e.push(l);for(let d=0;d<l.len();d++){let h=l.get(d);e.push(h);let f=u.get(h);e.push(f);let m=b(c.to_bytes())+b(h.name());t[m]=BigInt(f.to_str())}}}return _.free(...e),t}function xe(a){let e=[],t=i.MultiAsset.new();e.push(t);let s=a.lovelace,r=Object.keys(a);Array.from(new Set(r.filter(u=>u!=="lovelace").map(u=>u.slice(0,56)))).forEach(u=>{let l=r.filter(f=>f.slice(0,56)===u),d=i.Assets.new();l.forEach(f=>{let m=i.AssetName.new(g(f.slice(56)));e.push(m);let S=i.BigNum.from_str(a[f].toString());e.push(S),d.insert(m,S)});let h=i.ScriptHash.from_bytes(g(u));e.push(h),t.insert(h,d)});let o=i.BigNum.from_str(s?s.toString():"0");e.push(o);let c=i.Value.new(o);return(r.length>1||!s)&&c.set_multiasset(t),_.free(...e),c}function Es(a){let e=[];try{let t=a.get();switch(e.push(t),t.kind()){case 0:{let r=t.as_native();return e.push(r),{type:"Native",script:b(r.to_bytes())}}case 1:{let r=t.as_plutus_v1();return e.push(r),{type:"PlutusV1",script:b(r.to_bytes())}}case 2:{let r=t.as_plutus_v2();return e.push(r),{type:"PlutusV2",script:b(r.to_bytes())}}default:throw new Error("No variant matched.")}}finally{_.free(...e)}}function Qe(a){let e=[];try{switch(a.type){case"Native":{let t=i.NativeScript.from_bytes(g(a.script));e.push(t);let s=i.Script.new_native(t);return e.push(s),i.ScriptRef.new(s)}case"PlutusV1":{let t=i.PlutusScript.from_bytes(g(Z(a.script)));e.push(t);let s=i.Script.new_plutus_v1(t);return e.push(s),i.ScriptRef.new(s)}case"PlutusV2":{let t=i.PlutusScript.from_bytes(g(Z(a.script)));e.push(t);let s=i.Script.new_plutus_v2(t);return e.push(s),i.ScriptRef.new(s)}default:throw new Error("No variant matched.")}}finally{_.free(...e)}}function we(a){let e=[],t=(()=>{try{return console.log("success"),i.Address.from_bech32(a.address)}catch{let d=i.ByronAddress.from_base58(a.address);return e.push(d),d.to_address()}})();e.push(t);let s=xe(a.assets);e.push(s);let r=i.TransactionOutput.new(t,s);if(e.push(r),a.datumHash){let l=i.DataHash.from_bytes(g(a.datumHash));e.push(l);let d=i.Datum.new_data_hash(l);e.push(d),r.set_datum(d)}if(!a.datumHash&&a.datum){let l=i.PlutusData.from_bytes(g(a.datum));e.push(l);let d=i.Data.new(l);e.push(d);let h=i.Datum.new_data(d);e.push(h),r.set_datum(h)}if(a.scriptRef){let l=Qe(a.scriptRef);e.push(l),r.set_script_ref(l)}let n=i.TransactionHash.from_bytes(g(a.txHash));e.push(n);let o=i.BigNum.from_str(a.outputIndex.toString());e.push(o);let c=i.TransactionInput.new(n,o);e.push(c);let u=i.TransactionUnspentOutput.new(c,r);return _.free(...e),u}function et(a){let e=[],t=a.input();e.push(t);let s=a.output();e.push(s);let r=t.transaction_id();e.push(r);let n=b(r.to_bytes()),o=t.index();e.push(o);let c=parseInt(o.to_str()),u=s.amount();e.push(u);let l=ft(u),d=s.address();e.push(d);let h=d.as_byron();e.push(h);let f=h?h.to_base58():d.to_bech32(void 0),m=s.datum();e.push(m);let S=m?.as_data_hash();e.push(S);let v=S?.to_hex(),y=m?.as_data();e.push(y);let B=y?.get();e.push(B);let I=B&&b(B.to_bytes()),N=s.script_ref();e.push(N);let T=N&&Es(N),$={txHash:n,outputIndex:c,assets:l,address:f,datumHash:v,datum:I,scriptRef:T};return _.free(...e),$}function Oe(a){switch(a){case"Preview":return 0;case"Preprod":return 0;case"Custom":return 0;case"Mainnet":return 1;default:throw new Error("Network not found")}}function g(a){return It(a)}function b(a){return St(a)}function ur(a){return new TextDecoder().decode(ht(new TextEncoder().encode(a)))}function Ft(a){return b(new TextEncoder().encode(a))}function lr(a){let e=i.PrivateKey.from_bech32(a),t=e.to_public(),s=t.to_bech32();return _.free(e,t),s}function Vt(a){return Nt(g(a)).toString(16).padStart(2,"0")}function Bs(a){if(a<0||a>65535)throw new Error(`Label ${a} out of range: min label 1 - max label 65535.`);let e=a.toString(16).padStart(4,"0");return"0"+e+Vt(e)+"0"}function Ts(a){if(a.length!==8||!(a[0]==="0"&&a[7]==="0"))return null;let e=a.slice(1,5),t=parseInt(e,16);return a.slice(5,7)===Vt(e)?t:null}function Wt(a,e,t){let s=Number.isInteger(t)?Bs(t):"",r=e||"";if((r+s).length>64)throw new Error("Asset name size exceeds 32 bytes.");if(a.length!==56)throw new Error(`Policy id invalid: ${a}.`);return a+s+r}function Ke(a){let e=a.slice(0,56),t=a.slice(56)||null,s=Ts(a.slice(56,64)),r=(()=>(Number.isInteger(s)?a.slice(64):a.slice(56))||null)();return{policyId:e,assetName:t,name:r,label:s}}function Ps(a){let e=i.encode_json_str_to_native_script(JSON.stringify(a),"",i.ScriptSchema.Node),t=b(e.to_bytes());return e.free(),{type:"Native",script:t}}function dr(a,e,t){let s=t?pe.castTo(e,t):e,r=i.PlutusScript.from_bytes(g(Z(a))),n=i.PlutusList.from_bytes(g(pe.to(s))),o=i.apply_params_to_plutus_script(n,r),c=b(o.to_bytes());return _.free(n,o),c}var Jt=(a,e)=>{let t=[],s=a.length,r=0;for(;r<s;)t.push(a.slice(r,r+=e));return t};function Z(a){try{return i.PlutusScript.from_bytes(i.PlutusScript.from_bytes(g(a)).bytes()),a}catch{let t=i.PlutusScript.new(g(a)),s=t.to_bytes();return t.free(),b(s)}}function hr(...a){return a.reduce((e,t)=>{for(let s in t)Object.hasOwn(t,s)&&(e[s]=(e[s]||0n)+t[s]);return e},{})}function As(a,e){if(a.length!==e.length)return!1;for(let t=0;t<e.length;t++)if(a[t]!==e[t])return!1;return!0}function Hs(a,e){if(a.length!==e.length)return!1;let t=a.length,s=Math.floor(t/4),r=new Uint32Array(a.buffer,0,s),n=new Uint32Array(e.buffer,0,s);for(let o=s*4;o<t;o++)if(a[o]!==e[o])return!1;for(let o=0;o<r.length;o++)if(r[o]!==n[o])return!1;return!0}function tt(a,e){return a.length<1e3?As(a,e):Hs(a,e)}function Xt(...a){let e=0;for(let r of a)e+=r.length;let t=new Uint8Array(e),s=0;for(let r of a)t.set(r,s),s+=r.length;return t}var rt=class{constructor(e){Object.defineProperty(this,"root",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.root=rt.buildRecursively(e.map(t=>st(t)))}static fromHashes(e){return new this(e)}static buildRecursively(e){if(e.length<=0)return null;if(e.length===1)return{node:e[0],left:null,right:null};let t=Math.floor(e.length/2),[s,r]=[e.slice(0,t),e.slice(t)],n=this.buildRecursively(s),o=this.buildRecursively(r);return n===null||o===null?null:{node:gt(n.node,o.node),left:n,right:o}}rootHash(){if(this.root===null)throw new Error("Merkle tree root hash not found.");return this.root.node}getProof(e){let t=st(e),s=[],r=n=>{if(n&&tt(n.node,t))return!0;if(n?.right&&r(n.left))return s.push({right:n.right.node}),!0;if(n?.left&&r(n.right))return s.push({left:n.left.node}),!0};return r(this.root),s}size(){let e=t=>t===null?0:1+e(t.left)+e(t.right);return e(this.root)}static verify(e,t,s){let r=st(e),n=(o,c)=>{if(c.length<=0)return tt(t,o);let[u,l]=[c[0],c.slice(1)];return u.left?n(gt(u.left,o),l):u.right?n(gt(o,u.right),l):!1};return n(r,s)}toString(){let e=t=>t===null?null:{node:b(t.node),left:e(t.left),right:e(t.right)};return JSON.stringify(e(this.root),null,2)}};function st(a){return new Uint8Array(new Ae().update(a).arrayBuffer())}function gt(a,e){return st(Xt(a,e))}function Ue(a,e){let t=[];try{let s=i.PlutusData.from_bytes(g(a)),r=e?i.PlutusData.from_bytes(g(e)):void 0,n=i.PlutusWitness.new(s,r,void 0);return t.push(s,n),i.ScriptWitness.new_plutus_witness(n)}finally{_.free(...t)}}function nt(a,e){if(e==="Key"){let r=i.Ed25519KeyHash.from_bytes(g(a)),n=i.StakeCredential.from_keyhash(r);return _.free(r),n}let t=i.ScriptHash.from_bytes(g(a)),s=i.StakeCredential.from_scripthash(t);return _.free(t),s}async function yt(a,e){let t=[];try{let s=i.Ed25519KeyHashes.new();t.push(s),a.owners.forEach(I=>{let{stakeCredential:N}=e.utils.getAddressDetails(I);if(N?.type==="Key"){let T=i.Ed25519KeyHash.from_hex(N.hash);s.add(T),t.push(T)}else throw new Error("Only key hashes allowed for pool owners.")});let r=a.metadataUrl?await fetch(a.metadataUrl).then(I=>I.arrayBuffer()):null,n=r?i.PoolMetadataHash.from_bytes(i.hash_blake2b256(new Uint8Array(r))):null,o=i.Relays.new();t.push(n,o),a.relays.forEach(I=>{switch(I.type){case"SingleHostIp":{let N=I.ipV4?i.Ipv4.new(new Uint8Array(I.ipV4.split(".").map(G=>parseInt(G)))):void 0,T=I.ipV6?i.Ipv6.new(g(I.ipV6.replaceAll(":",""))):void 0,$=i.SingleHostAddr.new(I.port,N,T),V=i.Relay.new_single_host_addr($);t.push($,V),o.add(V);break}case"SingleHostDomainName":{let N=i.DNSRecordAorAAAA.new(I.domainName),T=i.SingleHostName.new(I.port,N),$=i.Relay.new_single_host_name(T);t.push(N,T,$),o.add($);break}case"MultiHost":{let N=i.DNSRecordSRV.new(I.domainName),T=i.MultiHostName.new(N),$=i.Relay.new_multi_host_name(T);t.push(N,T,$),o.add($);break}}});let c=i.Ed25519KeyHash.from_bech32(a.poolId),u=i.VRFKeyHash.from_hex(a.vrfKeyHash),l=i.BigNum.from_str(a.pledge.toString()),d=i.BigNum.from_str(a.cost.toString()),h=i.UnitInterval.from_float(a.margin),f=Ne(a.rewardAddress,e),m=i.RewardAddress.from_address(f),S=i.Url.new(a.metadataUrl),v=n?i.PoolMetadata.new(S,n):void 0;t.push(c,u,l,d,h,f,m,S,v);let y=i.PoolParams.new(c,u,l,d,h,m,s,o,v);return i.PoolRegistration.new(y)}finally{_.free(...t)}}function Le(a,{type:e,script:t}){if(e==="Native"){let s=i.NativeScript.from_bytes(g(t));a.txBuilder.add_native_script(s),_.free(s);return}else if(e==="PlutusV1"){let s=i.PlutusScript.from_bytes(g(Z(t)));a.txBuilder.add_plutus_script(s),_.free(s);return}else if(e==="PlutusV2"){let s=i.PlutusScript.from_bytes(g(Z(t)));a.txBuilder.add_plutus_v2_script(s),_.free(s);return}throw new Error("No variant matched.")}function Ne(a,e){let{type:t,networkId:s}=e.utils.getAddressDetails(a),r=Oe(e.network);if(s!==r)throw new Error(`Invalid address: Expected address with network id ${r}, but got ${s}`);if(t==="Byron"){let n=i.ByronAddress.from_base58(a),o=n.to_address();return n.free(),o}return i.Address.from_bech32(a)}function Yt(a){if(a?.hash){let e=i.DataHash.from_hex(a.hash),t=i.Datum.new_data_hash(e);return e.free(),{datum:t}}else if(a?.asHash){let e=i.PlutusData.from_bytes(g(a.asHash)),t=i.hash_plutus_data(e),s=i.Datum.new_data_hash(t);return t.free(),{plutusData:e,datum:s}}else if(a?.inline){let e=i.PlutusData.from_bytes(g(a.inline)),t=i.Data.new(e),s=i.Datum.new_data(t);return _.free(e,t),{datum:s}}else return{}}function xt({bucket:a,address:e,assets:t,outputData:s,lucid:r,txBuilder:n}){let o=Ne(e,r),c=xe(t),u=i.TransactionOutput.new(o,c);if(a.push(u,o,c),s.hash){let d=i.DataHash.from_hex(s.hash),h=i.Datum.new_data_hash(d);a.push(d,h),u.set_datum(h)}else if(s.asHash){let d=i.PlutusData.from_bytes(g(s.asHash)),h=i.hash_plutus_data(d),f=i.Datum.new_data_hash(h);a.push(d,h,f),u.set_datum(f),n.add_plutus_data(d)}else if(s.inline){let d=i.PlutusData.from_bytes(g(s.inline)),h=i.Data.new(d),f=i.Datum.new_data(h);a.push(d,h,f),u.set_datum(f)}let l=s.scriptRef;if(l){let d=Qe(l);a.push(d),u.set_script_ref(Qe(l))}return u}var Zt={enableChangeSplitting:!0,changeCollateral:"5000000",changeMinUtxo:"100000000",changeNativeAssetChunkSize:20};var ot=class{constructor(e,t){Object.defineProperty(this,"txSigned",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txSigned=t}async submit(){return await(this.lucid.wallet||this.lucid.provider).submitTx(b(this.txSigned.to_bytes()))}toString(){return b(this.txSigned.to_bytes())}toHash(){let e=i.hash_transaction(this.txSigned.body()),t=e.to_hex();return e.free(),t}free(){this.txSigned.free()}};var je=class{constructor(e,t){Object.defineProperty(this,"txComplete",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"witnessSetBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fee",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exUnits",{enumerable:!0,configurable:!0,writable:!0,value:null});let s=[];this.lucid=e,this.txComplete=t,this.witnessSetBuilder=i.TransactionWitnessSetBuilder.new(),this.tasks=[];let r=t.body();s.push(r);let n=r.fee();s.push(n);let o=t.witness_set();s.push(o),this.fee=parseInt(n.to_str());let c=o.redeemers();if(s.push(c),c){let u={cpu:0,mem:0};for(let l=0;l<c.len();l++){let d=c.get(l);s.push(d);let h=d.ex_units();s.push(h);let f=h.steps();s.push(f);let m=h.mem();s.push(m),u.cpu+=parseInt(f.to_str()),u.mem+=parseInt(m.to_str())}this.exUnits=u}_.free(...s)}sign(){return this.tasks.push(async()=>{let e=await this.lucid.wallet.signTx(this.txComplete);this.witnessSetBuilder.add_existing(e),e.free()}),this}signWithPrivateKey(e){let t=[],s=i.PrivateKey.from_bech32(e);t.push(s);let r=this.txComplete.body();t.push(r);let n=i.hash_transaction(r);t.push(n);let o=i.make_vkey_witness(n,s);return t.push(o),this.witnessSetBuilder.add_vkey(o),_.free(...t),this}async partialSign(){let e=await this.lucid.wallet.signTx(this.txComplete);this.witnessSetBuilder.add_existing(e);let t=e.to_bytes();return e.free(),b(t)}partialSignWithPrivateKey(e){let t=[],s=i.PrivateKey.from_bech32(e);t.push(s);let r=this.txComplete.body();t.push(r);let n=i.hash_transaction(r);t.push(n);let o=i.make_vkey_witness(n,s);t.push(o),this.witnessSetBuilder.add_vkey(o);let c=i.TransactionWitnessSetBuilder.new();t.push(c),c.add_vkey(o);let u=c.build();t.push(u);let l=u.to_bytes();return _.free(...t),b(l)}assemble(e){return e.forEach(t=>{let s=i.TransactionWitnessSet.from_bytes(g(t));this.witnessSetBuilder.add_existing(s),s.free()}),this}async complete(){for(let c of this.tasks)await c();let e=[],t=this.txComplete.witness_set();e.push(t),this.witnessSetBuilder.add_existing(t);let s=this.txComplete.body();e.push(s);let r=this.witnessSetBuilder.build();e.push(r);let n=this.txComplete.auxiliary_data();e.push(n);let o=i.Transaction.new(s,r,n);return _.free(...e),new ot(this.lucid,o)}toString(){return b(this.txComplete.to_bytes())}toHash(){let e=this.txComplete.body(),t=i.hash_transaction(e),s=t.to_hex();return _.free(e,t),s}free(){this.txComplete.free(),this.witnessSetBuilder.free()}};var at=class{constructor(e){Object.defineProperty(this,"txBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"configuration",{enumerable:!0,configurable:!0,writable:!0,value:Zt}),this.lucid=e,this.txBuilder=i.TransactionBuilder.new(e.getTransactionBuilderConfig()),this.tasks=[]}readFrom(e){return this.tasks.push(async t=>{let s=[];try{for(let r of e){if(r.datumHash){r.datum=pe.to(await t.lucid.datumOf(r));let o=i.PlutusData.from_bytes(g(r.datum));s.push(o),t.txBuilder.add_plutus_data(o)}let n=we(r);s.push(n),t.txBuilder.add_reference_input(n)}}finally{_.free(...s)}}),this}config(e){return this.configuration={...this.configuration,...e},this}collectFrom(e,t){return this.tasks.push(async s=>{let r=[];try{for(let n of e){n.datumHash&&!n.datum&&(n.datum=pe.to(await s.lucid.datumOf(n)));let o=we(n);r.push(o);let c=t?Ue(t,n.datumHash&&n.datum?n.datum:void 0):void 0;s.txBuilder.add_input(o,c)}}finally{_.free(...r)}}),this}mintAssets(e,t){return this.tasks.push(s=>{let r=[];try{let n=Object.keys(e),o=n[0].slice(0,56),c=i.MintAssets.new();r.push(c),n.forEach(d=>{if(d.slice(0,56)!==o)throw new Error("Only one policy id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different policy ids.");let h=i.AssetName.new(g(d.slice(56))),f=i.Int.from_str(e[d].toString());r.push(h),c.insert(h,f)});let u=i.ScriptHash.from_bytes(g(o)),l=t?Ue(t):void 0;r.push(u),s.txBuilder.add_mint(u,c,l)}finally{_.free(...r)}}),this}payToAddress(e,t){return this.tasks.push(s=>{let r=Ne(e,s.lucid),n=xe(t),o=i.TransactionOutput.new(r,n),c=s.lucid.utils.getMinAdaForOutput(o);t.lovelace=t.lovelace>c?t.lovelace:c;let u=xe(t),l=i.TransactionOutput.new(r,u);s.txBuilder.add_output(l),_.free(o,r,n,u,l)}),this}payToAddressWithData(e,t,s){return this.tasks.push(r=>{let n=[];try{if(typeof t=="string"&&(t={asHash:t}),[t.hash,t.asHash,t.inline].filter(d=>d).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let o=xt({bucket:n,txBuilder:r.txBuilder,lucid:r.lucid,address:e,outputData:t,assets:s}),c=this.lucid.utils.getMinAdaForOutput(o),u={...s};u.lovelace=s.lovelace>c?s.lovelace:c;let l=xt({bucket:n,txBuilder:r.txBuilder,lucid:r.lucid,address:e,outputData:t,assets:u});n.push(o,l),r.txBuilder.add_output(l)}finally{_.free(...n)}}),this}payToContract(e,t,s){if(typeof t=="string"&&(t={asHash:t}),!(t.hash||t.asHash||t.inline))throw new Error("No datum set. Script output becomes unspendable without datum.");return this.payToAddressWithData(e,t,s)}delegateTo(e,t,s){return this.tasks.push(r=>{let n=r.lucid.utils.getAddressDetails(e);if(n.type!=="Reward"||!n.stakeCredential)throw new Error("Not a reward address provided.");let o=nt(n.stakeCredential.hash,n.stakeCredential.type),c=i.Ed25519KeyHash.from_bech32(t),u=i.StakeDelegation.new(o,c),l=s?Ue(s):void 0,d=i.Certificate.new_stake_delegation(u);r.txBuilder.add_certificate(d,l),_.free(c,u,o,d)}),this}registerStake(e){return this.tasks.push(t=>{let s=t.lucid.utils.getAddressDetails(e);if(s.type!=="Reward"||!s.stakeCredential)throw new Error("Not a reward address provided.");let r=nt(s.stakeCredential.hash,s.stakeCredential.type),n=i.StakeRegistration.new(r),o=i.Certificate.new_stake_registration(n);t.txBuilder.add_certificate(o,void 0),_.free(r,n,o)}),this}deregisterStake(e,t){return this.tasks.push(s=>{let r=s.lucid.utils.getAddressDetails(e);if(r.type!=="Reward"||!r.stakeCredential)throw new Error("Not a reward address provided.");let n=nt(r.stakeCredential.hash,r.stakeCredential.type),o=i.StakeDeregistration.new(n),c=i.Certificate.new_stake_deregistration(o),u=t?Ue(t):void 0;s.txBuilder.add_certificate(c,u),_.free(n,o,c)}),this}registerPool(e){return this.tasks.push(async t=>{let s=await yt(e,t.lucid),r=i.Certificate.new_pool_registration(s);t.txBuilder.add_certificate(r,void 0),_.free(r,s)}),this}updatePool(e){return this.tasks.push(async t=>{let s=await yt(e,t.lucid);s.set_is_update(!0);let r=i.Certificate.new_pool_registration(s);_.free(s,r),t.txBuilder.add_certificate(r,void 0)}),this}retirePool(e,t){return this.tasks.push(s=>{let r=i.Ed25519KeyHash.from_bech32(e),n=i.PoolRetirement.new(r,t),o=i.Certificate.new_pool_retirement(n);s.txBuilder.add_certificate(o,void 0),_.free(r,n,o)}),this}withdraw(e,t,s){return this.tasks.push(r=>{let n=Ne(e,r.lucid),o=i.RewardAddress.from_address(n),c=i.BigNum.from_str(t.toString()),u=s?Ue(s):void 0;r.txBuilder.add_withdrawal(o,c,u),_.free(n,o,c,u)}),this}addSigner(e){let t=this.lucid.utils.getAddressDetails(e);if(!t.paymentCredential&&!t.stakeCredential)throw new Error("Not a valid address.");let s=t.type==="Reward"?t.stakeCredential:t.paymentCredential;if(s.type==="Script")throw new Error("Only key hashes are allowed as signers.");return this.addSignerKey(s.hash)}addSignerKey(e){return this.tasks.push(t=>{let s=i.Ed25519KeyHash.from_bytes(g(e));t.txBuilder.add_required_signer(s),_.free(s)}),this}validFrom(e){return this.tasks.push(t=>{let s=t.lucid.utils.unixTimeToSlot(e),r=i.BigNum.from_str(s.toString());t.txBuilder.set_validity_start_interval(r),_.free(r)}),this}validTo(e){return this.tasks.push(t=>{let s=t.lucid.utils.unixTimeToSlot(e),r=i.BigNum.from_str(s.toString());t.txBuilder.set_ttl(r),_.free(r)}),this}attachMetadata(e,t){return this.tasks.push(s=>{let r=i.BigNum.from_str(e.toString());s.txBuilder.add_json_metadatum(r,JSON.stringify(t)),_.free(r)}),this}attachMetadataWithConversion(e,t){return this.tasks.push(s=>{let r=i.BigNum.from_str(e.toString());s.txBuilder.add_json_metadatum_with_schema(r,JSON.stringify(t),i.MetadataJsonSchema.BasicConversions),_.free(r)}),this}addNetworkId(e){return this.tasks.push(t=>{let s=i.NetworkId.from_bytes(g(e.toString(16).padStart(2,"0")));t.txBuilder.set_network_id(s),_.free(s)}),this}attachSpendingValidator(e){return this.tasks.push(t=>{Le(t,e)}),this}attachMintingPolicy(e){return this.tasks.push(t=>{Le(t,e)}),this}attachCertificateValidator(e){return this.tasks.push(t=>{Le(t,e)}),this}attachWithdrawalValidator(e){return this.tasks.push(t=>{Le(t,e)}),this}applyIf(e,t){return e&&this.tasks.push(s=>t(s)),this}apply(e){return this.tasks.push(t=>e(t)),this}compose(e){return e&&(this.tasks=this.tasks.concat(e.tasks)),this}free(){this.txBuilder.free()}async complete(e){let t=[],{enableChangeSplitting:s}=this.configuration;try{if([e?.change?.outputData?.hash,e?.change?.outputData?.asHash,e?.change?.outputData?.inline].filter(h=>h).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let r=this.tasks.shift();for(;r;)await r(this),r=this.tasks.shift();let n=await this.lucid.wallet.getUtxosCore(),o=this.lucid.wallet.getCollateralCore(),c=Ne(e?.change?.address||await this.lucid.wallet.address(),this.lucid);(e?.coinSelection||e?.coinSelection===void 0)&&this.txBuilder.add_inputs_from_impl(n,c,"200,1000,1500,800,800,5000");let{datum:u,plutusData:l}=Yt(e?.change?.outputData);l&&this.txBuilder.add_plutus_data(l),t.push(u,l),s&&await this.splitChange(),this.txBuilder.balance(c,u);let d=await this.txBuilder.construct(o||n,c,e?.nativeUplc===void 0?!0:e?.nativeUplc);return new je(this.lucid,d)}finally{_.free(...t)}}async toString(){let e=this.tasks.shift();for(;e;)await e(this),e=this.tasks.shift();return b(this.txBuilder.to_bytes())}async splitChange(){let e=[],{coinsPerUtxoByte:t}=this.lucid.protocolParameters||Je,{changeNativeAssetChunkSize:s,changeMinUtxo:r}=this.configuration,n=this.txBuilder.get_explicit_input(),o=this.txBuilder.get_explicit_output();e.push(n,o);let c=n.checked_sub(o),u=c.coin(),l=ft(c);e.push(u);let d=Object.keys(l).filter(R=>R!=="lovelace").sort((R,K)=>R.localeCompare(K));l=d.reduce((R,K)=>Object.assign(R,{[K]:l[K]}),{});let h=Math.ceil(d.length/s),f=i.Address.from_bech32(await this.lucid.wallet.address());e.push(f);let m=this.txBuilder.outputs();e.push(m);for(let R=0;R<m.len();R++){let K=m.get(R);e.push(K);let re=K.address();(!f||re.to_bech32(void 0).length>f.to_bech32(void 0).length)&&(f=K.address())}let S=xe(l),v=i.TransactionOutput.new(f,S),y=i.BigNum.from_str(t.toString()),B=i.min_ada_required(v,y);e.push(S,v,y,B);let I=i.BigNum.from_str(h.toString()),N=B.checked_mul(I);e.push(I,N);let T=N.compare(u)<0,$=c.multiasset();if(e.push($),$&&T){let R=Jt(d,20),K=R.length;for(let[re,be]of R.entries()){if(re===K-1)continue;let _e=xe(be.reduce((Ve,Me)=>Object.assign(Ve,{[Me]:l[Me]}),{}));e.push(_e);let De=i.Address.from_bech32(await this.lucid.wallet.address()),Re=i.TransactionOutput.new(De,_e),ke=i.BigNum.from_str(t.toString()),Ee=i.min_ada_required(Re,ke);_e.set_coin(Ee),u=u.checked_sub(Ee);let lt=i.TransactionOutput.new(De,_e);e.push(u,Re),this.txBuilder.add_output(lt)}}let V=i.BigNum.from_str("2"),G=i.BigNum.from_str(r),he=u.checked_div(V);for(e.push(V,G,he);he.compare(G)>=0;){let R=u.checked_div(V);u=u.checked_sub(R),he=u.checked_div(V);let K=i.Address.from_bech32(await this.lucid.wallet.address()),re=i.Value.new(R),be=i.TransactionOutput.new(K,re);e.push(R,u,he,K,re,be),this.txBuilder.add_output(be)}}};function Gt(a,e={addressType:"Base",accountIndex:0,network:"Mainnet"}){function t(m){if(typeof m!="number")throw new Error("Type number required here!");return 2147483648+m}let s=Bt(a),n=i.Bip32PrivateKey.from_bip39_entropy(g(s),e.password?new TextEncoder().encode(e.password):new Uint8Array).derive(t(1852)).derive(t(1815)).derive(t(e.accountIndex)),o=n.derive(0).derive(0).to_raw_key(),c=n.derive(2).derive(0).to_raw_key(),u=o.to_public().hash(),l=c.to_public().hash(),d=e.network==="Mainnet"?1:0,h=e.addressType==="Base"?i.BaseAddress.new(d,i.StakeCredential.from_keyhash(u),i.StakeCredential.from_keyhash(l)).to_address().to_bech32(void 0):i.EnterpriseAddress.new(d,i.StakeCredential.from_keyhash(u)).to_address().to_bech32(void 0),f=e.addressType==="Base"?i.RewardAddress.new(d,i.StakeCredential.from_keyhash(l)).to_address().to_bech32(void 0):null;return{address:h,rewardAddress:f,paymentKey:o.to_bech32(),stakeKey:e.addressType==="Base"?c.to_bech32():null}}function Qt(a,e,t){let s=[],r=a.body().inputs();for(let m=0;m<r.len();m++){let S=r.get(m),v=b(S.transaction_id().to_bytes()),y=parseInt(S.index().to_str()),B=t.find(I=>I.txHash===v&&I.outputIndex===y);if(B){let{paymentCredential:I}=J(B.address);s.push(I?.hash)}}let n=a.body();function o(m){let S=m.certs();if(S)for(let v=0;v<S.len();v++){let y=S.get(v);if(y.kind()===0)y.as_stake_registration()?.stake_credential()?.kind();else if(y.kind()===1){let B=y.as_stake_deregistration()?.stake_credential();if(B?.kind()===0){let I=b(B.to_keyhash().to_bytes());s.push(I)}}else if(y.kind()===2){let B=y.as_stake_delegation()?.stake_credential();if(B?.kind()===0){let I=b(B.to_keyhash().to_bytes());s.push(I)}}else if(y.kind()===3){let B=y.as_pool_registration()?.pool_params(),I=B?.pool_owners();if(!I)break;for(let T=0;T<I.len();T++){let $=b(I.get(T).to_bytes());s.push($)}let N=B.operator().to_hex();s.push(N)}else if(y.kind()===4){let B=y.as_pool_retirement().pool_keyhash().to_hex();s.push(B)}else if(y.kind()===6){let B=y.as_move_instantaneous_rewards_cert()?.move_instantaneous_reward().as_to_stake_creds()?.keys();if(!B)break;for(let I=0;I<B.len();I++){let N=B.get(I);if(N.kind()===0){let T=b(N.to_keyhash().to_bytes());s.push(T)}}}}}n.certs()&&o(n);let c=n.withdrawals();function u(m){let S=m.keys();for(let v=0;v<S.len();v++){let y=S.get(v).payment_cred();y.kind()===0&&s.push(y.to_keyhash().to_hex())}}c&&u(c);let l=a.witness_set().native_scripts();function d(m){for(let S=0;S<m.len();S++){let v=m.get(S);if(v.kind()===0){let y=b(v.as_script_pubkey().addr_keyhash().to_bytes());s.push(y)}if(v.kind()===1){d(v.as_script_all().native_scripts());return}if(v.kind()===2){d(v.as_script_any().native_scripts());return}if(v.kind()===3){d(v.as_script_n_of_k().native_scripts());return}}}l&&d(l);let h=n.required_signers();if(h)for(let m=0;m<h.len();m++)s.push(b(h.get(m).to_bytes()));let f=n.collateral();if(f)for(let m=0;m<f.len();m++){let S=f.get(m),v=b(S.transaction_id().to_bytes()),y=parseInt(S.index().to_str()),B=t.find(I=>I.txHash===v&&I.outputIndex===y);if(B){let{paymentCredential:I}=J(B.address);s.push(I?.hash)}}return s.filter(m=>e.includes(m))}function ze(a,e,t){let s=D.HeaderMap.new();s.set_algorithm_id(D.Label.from_algorithm_id(D.AlgorithmId.EdDSA)),s.set_header(D.Label.new_text("address"),D.CBORValue.new_bytes(g(a)));let r=D.ProtectedHeaderMap.new(s),n=D.HeaderMap.new(),o=D.Headers.new(r,n),c=D.COSESign1Builder.new(o,g(e),!1),u=c.make_data_to_sign().to_bytes(),l=i.PrivateKey.from_bech32(t),d=l.sign(u).to_bytes(),h=c.build(d),f=D.COSEKey.new(D.Label.from_key_type(D.KeyType.OKP));return f.set_algorithm_id(D.Label.from_algorithm_id(D.AlgorithmId.EdDSA)),f.set_header(D.Label.new_int(D.Int.new_negative(D.BigNum.from_str("1"))),D.CBORValue.new_int(D.Int.new_i32(6))),f.set_header(D.Label.new_int(D.Int.new_negative(D.BigNum.from_str("2"))),D.CBORValue.new_bytes(l.to_public().as_bytes())),{signature:b(h.to_bytes()),key:b(f.to_bytes())}}function es(a,e,t,s){let r=D.COSESign1.from_bytes(g(s.signature)),n=D.COSEKey.from_bytes(g(s.key)),o=r.headers().protected().deserialized_headers(),c=(()=>{try{return b(o.header(D.Label.new_text("address"))?.as_bytes())}catch{throw new Error("No address found in signature.")}})(),u=(()=>{try{let y=o.algorithm_id()?.as_int();return y?.is_positive()?parseInt(y.as_positive()?.to_str()):parseInt(y?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),l=(()=>{try{let y=n.algorithm_id()?.as_int();return y?.is_positive()?parseInt(y.as_positive()?.to_str()):parseInt(y?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),d=(()=>{try{let y=n.header(D.Label.new_int(D.Int.new_negative(D.BigNum.from_str("1"))))?.as_int();return y?.is_positive()?parseInt(y.as_positive()?.to_str()):parseInt(y?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Curve.")}})(),h=(()=>{try{let y=n.key_type().as_int();return y?.is_positive()?parseInt(y.as_positive()?.to_str()):parseInt(y?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Key Type.")}})(),f=(()=>{try{return i.PublicKey.from_bytes(n.header(D.Label.new_int(D.Int.new_negative(D.BigNum.from_str("2"))))?.as_bytes())}catch{throw new Error("No public key found.")}})(),m=(()=>{try{return b(r.payload())}catch{throw new Error("No payload found.")}})(),S=i.Ed25519Signature.from_bytes(r.signature()),v=r.signed_data(void 0,void 0).to_bytes();return c!==a||e!==f.hash().to_hex()||u!==l&&u!==D.AlgorithmId.EdDSA||d!==6||h!==1||m!==t?!1:f.verify(v,S)}var it=class{constructor(e,t,s){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"payload",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.address=t,this.payload=s}sign(){return this.lucid.wallet.signMessage(this.address,this.payload)}signWithPrivateKey(e){let t=[];try{let{paymentCredential:s,stakeCredential:r,address:{hex:n}}=this.lucid.utils.getAddressDetails(this.address),o=s?.hash||r?.hash,c=i.PrivateKey.from_bech32(e);t.push(c);let u=c.to_public();t.push(u);let l=u.hash();t.push(l);let d=l.to_hex();if(!o||o!==d)throw new Error(`Cannot sign message for address: ${this.address}.`);return ze(n,this.payload,e)}finally{_.free(...t)}}};var ct=class{constructor(e,t=Je){Object.defineProperty(this,"ledger",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"mempool",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"chain",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"blockHeight",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"slot",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"time",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"datumTable",{enumerable:!0,configurable:!0,writable:!0,value:{}});let s="00".repeat(32);this.blockHeight=0,this.slot=0,this.time=Date.now(),this.ledger={},e.forEach(({address:r,assets:n,outputData:o},c)=>{if([o?.hash,o?.asHash,o?.inline].filter(u=>u).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");this.ledger[s+c]={utxo:{txHash:s,outputIndex:c,address:r,assets:n,datumHash:o?.asHash?i.hash_plutus_data(i.PlutusData.from_bytes(g(o.asHash))).to_hex():o?.hash,datum:o?.inline,scriptRef:o?.scriptRef},spent:!1}}),this.protocolParameters=t}now(){return this.time}awaitSlot(e=1){this.slot+=e,this.time+=e*1e3;let t=this.blockHeight;if(this.blockHeight=Math.floor(this.slot/20),this.blockHeight>t){for(let[s,{utxo:r,spent:n}]of Object.entries(this.mempool))this.ledger[s]={utxo:r,spent:n};for(let[s,{spent:r}]of Object.entries(this.ledger))r&&delete this.ledger[s];this.mempool={}}}awaitBlock(e=1){this.blockHeight+=e,this.slot+=e*20,this.time+=e*20*1e3;for(let[t,{utxo:s,spent:r}]of Object.entries(this.mempool))this.ledger[t]={utxo:s,spent:r};for(let[t,{spent:s}]of Object.entries(this.ledger))s&&delete this.ledger[t];this.mempool={}}getUtxos(e){let t=Object.values(this.ledger).flatMap(({utxo:s})=>{if(typeof e=="string")return e===s.address?s:[];{let{paymentCredential:r}=J(s.address);return r?.hash===e.hash?s:[]}});return Promise.resolve(t)}getProtocolParameters(){return Promise.resolve(this.protocolParameters)}getDatum(e){return Promise.resolve(this.datumTable[e])}getUtxosWithUnit(e,t){let s=Object.values(this.ledger).flatMap(({utxo:r})=>{if(typeof e=="string")return e===r.address&&r.assets[t]>0n?r:[];{let{paymentCredential:n}=J(r.address);return n?.hash===e.hash&&r.assets[t]>0n?r:[]}});return Promise.resolve(s)}getUtxosByOutRef(e){return Promise.resolve(e.flatMap(t=>this.ledger[t.txHash+t.outputIndex]?.utxo||[]))}getUtxoByUnit(e){let t=Object.values(this.ledger).flatMap(({utxo:s})=>s.assets[e]>0n?s:[]);if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return Promise.resolve(t[0])}getDelegation(e){return Promise.resolve({poolId:this.chain[e]?.delegation?.poolId||null,rewards:this.chain[e]?.delegation?.rewards||0n})}awaitTx(e){return this.mempool[e+0]&&this.awaitBlock(),Promise.resolve(!0)}distributeRewards(e){for(let[t,{registeredStake:s,delegation:r}]of Object.entries(this.chain))s&&r.poolId&&(this.chain[t]={registeredStake:s,delegation:{poolId:r.poolId,rewards:r.rewards+=e}});this.awaitBlock()}submitTx(e){let t=[],s=i.Transaction.from_bytes(g(e));t.push(s);let r=s.body();t.push(r);let n=s.witness_set();t.push(n);let o=n.plutus_data();t.push(o);let c=i.hash_transaction(r);t.push(c);let u=c.to_hex(),l=r.validity_start_interval();t.push(l);let d=l?parseInt(l.to_str()):null,h=r.ttl();t.push(h);let f=h?parseInt(h.to_str()):null;if(Number.isInteger(d)&&this.slot<d)throw new Error(`Lower bound (${d}) not in slot range (${this.slot}).`);if(Number.isInteger(f)&&this.slot>f)throw new Error(`Upper bound (${f}) not in slot range (${this.slot}).`);let m=(()=>{let p={};for(let x=0;x<(o?.len()||0);x++){let C=o.get(x);t.push(C);let E=i.hash_plutus_data(C);t.push(E);let O=E.to_hex();p[O]=b(C.to_bytes())}return p})(),S=new Set,v=(()=>{let p=[],x=n.vkeys();t.push(x);for(let C=0;C<(x?.len()||0);C++){let E=x.get(C);t.push(E);let O=E.vkey();t.push(O);let P=O.public_key();t.push(P);let U=P.hash();t.push(U);let j=U.to_hex();if(!P.verify(g(u),E.signature()))throw new Error(`Invalid vkey witness. Key hash: ${j}`);p.push(j)}return p})(),y=i.Ed25519KeyHashes.new();t.push(y),v.forEach(p=>{let x=i.Ed25519KeyHash.from_hex(p);t.push(x),y.add(x)});let B=(()=>{let p=[],x=n.native_scripts();t.push(x);for(let C=0;C<(x?.len()||0);C++){let E=x.get(C);t.push(E);let O=E.hash(i.ScriptHashNamespace.NativeScript);t.push(O);let P=O.to_hex(),U=Number.isInteger(d)?i.BigNum.from_str(d.toString()):void 0;t.push(U);let j=Number.isInteger(f)?i.BigNum.from_str(f.toString()):void 0;if(t.push(j),!E.verify(U,j,y))throw new Error(`Invalid native script witness. Script hash: ${P}`);let M=E.get_required_signers();t.push(M);for(let F=0;F<M.len();F++){let X=M.get(F);t.push(X);let We=X.to_hex();S.add(We)}p.push(P)}return p})(),I={},N=[],T=(()=>{let p=[],x=n.plutus_scripts();t.push(x);for(let E=0;E<(x?.len()||0);E++){let O=x.get(E);t.push(O);let P=O.hash(i.ScriptHashNamespace.PlutusV1);t.push(P);let U=P.to_hex();p.push(U)}let C=n.plutus_v2_scripts();t.push(C);for(let E=0;E<(C?.len()||0);E++){let O=C.get(E);t.push(O);let P=O.hash(i.ScriptHashNamespace.PlutusV2);t.push(P);let U=P.to_hex();p.push(U)}return p})(),$=r.inputs();t.push($),$.sort();let V=[];for(let p=0;p<$.len();p++){let x=$.get(p);t.push(x);let C=x.transaction_id();t.push(C);let E=x.index();t.push(E);let O=C.to_hex()+E.to_str(),P=this.ledger[O],{entry:U,type:j}=P?{entry:P,type:"Ledger"}:{entry:this.mempool[O],type:"Mempool"};if(!U||U.spent)throw new Error(`Could not spend UTxO: ${JSON.stringify({txHash:U?.utxo.txHash,outputIndex:U?.utxo.outputIndex})}
It does not exist or was already spent.`);let M=U.utxo.scriptRef;if(M)switch(M.type){case"Native":{let F=i.NativeScript.from_bytes(g(M.script));t.push(F);let X=F.hash(i.ScriptHashNamespace.NativeScript);t.push(X),I[X.to_hex()]=F;break}case"PlutusV1":{let F=i.PlutusScript.from_bytes(g(M.script));t.push(F);let X=F.hash(i.ScriptHashNamespace.PlutusV1);t.push(X),N.push(X.to_hex());break}case"PlutusV2":{let F=i.PlutusScript.from_bytes(g(M.script));t.push(F);let X=F.hash(i.ScriptHashNamespace.PlutusV2);t.push(X),N.push(X.to_hex());break}}U.utxo.datumHash&&S.add(U.utxo.datumHash),V.push({entry:U,type:j})}let G=r.reference_inputs();t.push(G);for(let p=0;p<(G?.len()||0);p++){let x=G.get(p);t.push(x);let C=x.transaction_id();t.push(C);let E=x.index();t.push(E);let O=C.to_hex()+E.to_str(),P=this.ledger[O]||this.mempool[O];if(!P||P.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:P?.utxo.txHash,outputIndex:P?.utxo.outputIndex})}
It does not exist or was already spent.`);let U=P.utxo.scriptRef;if(U)switch(U.type){case"Native":{let j=i.NativeScript.from_bytes(g(U.script));t.push(j);let M=j.hash(i.ScriptHashNamespace.NativeScript);t.push(M),I[M.to_hex()]=j;break}case"PlutusV1":{let j=i.PlutusScript.from_bytes(g(U.script));t.push(j);let M=j.hash(i.ScriptHashNamespace.PlutusV1);t.push(M),N.push(M.to_hex());break}case"PlutusV2":{let j=i.PlutusScript.from_bytes(g(U.script));t.push(j);let M=j.hash(i.ScriptHashNamespace.PlutusV2);t.push(M),N.push(M.to_hex());break}}P.utxo.datumHash&&S.add(P.utxo.datumHash)}let he=(()=>{let p={0:"Spend",1:"Mint",2:"Cert",3:"Reward"},x=[],C=n.redeemers();t.push(C);for(let E=0;E<(C?.len()||0);E++){let O=C.get(E);t.push(O);let P=O.tag();t.push(P);let U=O.index();t.push(U),x.push({tag:p[P.kind()],index:parseInt(U.to_str())})}return x})();function R(p,x,C){switch(p.type){case"Key":{if(!v.includes(p.hash))throw new Error(`Missing vkey witness. Key hash: ${p.hash}`);S.add(p.hash);break}case"Script":{if(B.includes(p.hash)){S.add(p.hash);break}else if(I[p.hash]){let E=Number.isInteger(d)?i.BigNum.from_str(d.toString()):void 0;t.push(E);let O=Number.isInteger(f)?i.BigNum.from_str(f.toString()):void 0;if(t.push(O),!I[p.hash].verify(E,O,y))throw new Error(`Invalid native script witness. Script hash: ${p.hash}`);break}else if((T.includes(p.hash)||N.includes(p.hash))&&he.find(E=>E.tag===x&&E.index===C)){S.add(p.hash);break}throw new Error(`Missing script witness. Script hash: ${p.hash}`)}}}let K=r.collateral();t.push(K);for(let p=0;p<(K?.len()||0);p++){let x=K.get(p);t.push(x);let C=x.transaction_id();t.push(C);let E=x.index();t.push(E);let O=C.to_hex()+E.to_str(),P=this.ledger[O]||this.mempool[O];if(!P||P.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:P?.utxo.txHash,outputIndex:P?.utxo.outputIndex})}
It does not exist or was already spent.`);let{paymentCredential:U}=J(P.utxo.address);if(U?.type==="Script")throw new Error("Collateral inputs can only contain vkeys.");R(U,null,null)}let re=r.required_signers();t.push(re);for(let p=0;p<(re?.len()||0);p++){let x=re.get(p);t.push(x),R({type:"Key",hash:x.to_hex()},null,null)}let be=r.mint();t.push(be);let Fe=be?.keys();t.push(Fe);for(let p=0;p<(Fe?.len()||0);p++){let x=Fe.get(p);t.push(x);let C=x.to_hex();R({type:"Script",hash:C},"Mint",p)}let _e=[],De=r.withdrawals(),Re=De?.keys();for(let p=0;p<(Re?.len()||0);p++){let x=Re.get(p);t.push(x);let C=De.get(x);t.push(C);let E=BigInt(C.to_str()),O=x.to_address();t.push(O);let P=O.to_bech32(void 0),{stakeCredential:U}=J(P);if(R(U,"Reward",p),this.chain[P]?.delegation.rewards!==E)throw new Error("Withdrawal amount doesn't match actual reward balance.");_e.push({rewardAddress:P,withdrawal:E})}let ke=[],Ee=r.certs();t.push(Ee);for(let p=0;p<(Ee?.len()||0);p++){let x=Ee.get(p);switch(t.push(x),x.kind()){case 0:{let C=x.as_stake_registration();t.push(C);let E=i.NetworkInfo.testnet();t.push(E);let O=C.stake_credential();t.push(O);let P=i.RewardAddress.new(E.network_id(),O);t.push(P);let U=P.to_address();t.push(U);let j=U.to_bech32(void 0);if(this.chain[j]?.registeredStake)throw new Error(`Stake key is already registered. Reward address: ${j}`);ke.push({type:"Registration",rewardAddress:j});break}case 1:{let C=x.as_stake_deregistration();t.push(C);let E=i.NetworkInfo.testnet();t.push(E);let O=C.stake_credential();t.push(O);let P=i.RewardAddress.new(E.network_id(),O);t.push(P);let U=P.to_address();t.push(U);let j=U.to_bech32(void 0),{stakeCredential:M}=J(j);if(R(M,"Cert",p),!this.chain[j]?.registeredStake)throw new Error(`Stake key is already deregistered. Reward address: ${j}`);ke.push({type:"Deregistration",rewardAddress:j});break}case 2:{let C=x.as_stake_delegation();t.push(C);let E=i.NetworkInfo.testnet();t.push(E);let O=C.stake_credential();t.push(O);let P=i.RewardAddress.new(E.network_id(),O);t.push(P);let U=P.to_address();t.push(U);let j=U.to_bech32(void 0),M=C.pool_keyhash();t.push(M);let F=M.to_bech32("pool"),{stakeCredential:X}=J(j);if(R(X,"Cert",p),!this.chain[j]?.registeredStake&&!ke.find(We=>We.type==="Registration"&&We.rewardAddress===j))throw new Error(`Stake key is not registered. Reward address: ${j}`);ke.push({type:"Delegation",rewardAddress:j,poolId:F});break}}}V.forEach(({entry:{utxo:p}},x)=>{let{paymentCredential:C}=J(p.address);R(C,"Spend",x)});let lt=(()=>{let p=r.outputs();t.push(p);let x=[];for(let C=0;C<p.len();C++){let E=p.get(C);t.push(E);let O=i.TransactionHash.from_hex(u);t.push(O);let P=i.BigNum.from_str(C.toString());t.push(P);let U=i.TransactionInput.new(O,P);t.push(U);let j=i.TransactionUnspentOutput.new(U,E);t.push(j);let M=et(j);M.datumHash&&S.add(M.datumHash),x.push({utxo:M,spent:!1})}return x})(),[Ve]=v.filter(p=>!S.has(p));if(Ve)throw new Error(`Extraneous vkey witness. Key hash: ${Ve}`);let[Me]=B.filter(p=>!S.has(p));if(Me)throw new Error(`Extraneous native script. Script hash: ${Me}`);let[wt]=T.filter(p=>!S.has(p));if(wt)throw new Error(`Extraneous plutus script. Script hash: ${wt}`);let[bt]=Object.keys(m).filter(p=>!S.has(p));if(bt)throw new Error(`Extraneous plutus data. Datum hash: ${bt}`);V.forEach(({entry:p,type:x})=>{let C=p.utxo.txHash+p.utxo.outputIndex;p.spent=!0,x==="Ledger"?this.ledger[C]=p:x==="Mempool"&&(this.mempool[C]=p)}),_e.forEach(({rewardAddress:p,withdrawal:x})=>{this.chain[p].delegation.rewards-=x}),ke.forEach(({type:p,rewardAddress:x,poolId:C})=>{switch(p){case"Registration":{this.chain[x]?this.chain[x].registeredStake=!0:this.chain[x]={registeredStake:!0,delegation:{poolId:null,rewards:0n}};break}case"Deregistration":{this.chain[x].registeredStake=!1,this.chain[x].delegation.poolId=null;break}case"Delegation":this.chain[x].delegation.poolId=C}}),lt.forEach(({utxo:p,spent:x})=>{this.mempool[p.txHash+p.outputIndex]={utxo:p,spent:x}});for(let[p,x]of Object.entries(m))this.datumTable[p]=x;return Promise.resolve(u)}log(){function e(r){let n=r==="lovelace"?"1":r,o=0;for(let d=0;d<n.length;d++)o+=n.charCodeAt(d);let c=o*123%256,u=o*321%256,l=o*213%256;return"#"+((1<<24)+(c<<16)+(u<<8)+l).toString(16).slice(1)}let t={},s={};for(let{utxo:r}of Object.values(this.ledger))for(let[n,o]of Object.entries(r.assets))s[r.address]?s[r.address]?.[n]?s[r.address][n]+=o:s[r.address][n]=o:s[r.address]={[n]:o},t[n]?t[n]+=o:t[n]=o;console.log(`
%cBlockchain state`,"color:purple"),console.log(`
    Block height:   %c${this.blockHeight}%c
    Slot:           %c${this.slot}%c
    Unix time:      %c${this.time}
  `,"color:yellow","color:white","color:yellow","color:white","color:yellow"),console.log(`
`);for(let[r,n]of Object.entries(s)){console.log(`Address: %c${r}`,"color:blue",`
`);for(let[o,c]of Object.entries(n)){let u=Math.max(Math.floor(60*(Number(c)/Number(t[o]))),1);console.log(`%c${"\u2586".repeat(u)+" ".repeat(60-u)}`,`color: ${e(o)}`,"",`${o}:`,c,"")}console.log(`
${"\u2581".repeat(60)}
`)}}};function ts(a,e,t){let s=[],r=i.TransactionBuilderConfigBuilder.new(),n=i.BigNum.from_str(a.coinsPerUtxoByte.toString());s.push(n);let o=r.coins_per_utxo_byte(n);r.free();let c=i.BigNum.from_str(a.minFeeA.toString());s.push(c);let u=i.BigNum.from_str(a.minFeeB.toString());s.push(u);let l=i.LinearFee.new(c,u);s.push(l),r=o.fee_algo(l),o.free();let d=i.BigNum.from_str(a.keyDeposit.toString());s.push(d),o=r.key_deposit(d),r.free();let h=i.BigNum.from_str(a.poolDeposit.toString());s.push(h),r=o.pool_deposit(h),o.free(),o=r.max_tx_size(a.maxTxSize),r.free(),r=o.max_value_size(a.maxValSize),o.free(),o=r.collateral_percentage(a.collateralPercentage),r.free(),r=o.max_collateral_inputs(a.maxCollateralInputs),o.free();let f=i.BigNum.from_str(a.maxTxExMem.toString());s.push(f);let m=i.BigNum.from_str(a.maxTxExSteps.toString());s.push(m);let S=i.ExUnits.new(f,m);s.push(S),o=r.max_tx_ex_units(S),r.free();let v=i.ExUnitPrices.from_float(a.priceMem,a.priceStep);s.push(v),r=o.ex_unit_prices(v),o.free();let y=i.BigNum.from_str(e.zeroTime.toString());s.push(y);let B=i.BigNum.from_str(e.zeroSlot.toString());s.push(B),o=r.slot_config(y,B,e.slotLength),r.free();let I=i.Blockfrost.new(t?.url??"utils/tx/evaulate",t?.projectId??"");s.push(I),r=o.blockfrost(I),o.free();let N=kt(a.costModels);s.push(N),o=r.costmdls(N);let T=o.build();return o.free(),_.free(...s),T}var ut=class{constructor(){Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"slotConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"provider",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"network",{enumerable:!0,configurable:!0,writable:!0,value:"Mainnet"}),Object.defineProperty(this,"utils",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}static async new({provider:e,network:t,protocolParameters:s}){let r=new this;if(t&&(r.network=t),s&&(r.protocolParameters=s),e&&(r.provider=e,r.provider instanceof ct&&(r.network="Custom",He[r.network]={zeroTime:r.provider.now(),zeroSlot:0,slotLength:1e3})),e&&!r.protocolParameters){let n=await e.getProtocolParameters();r.protocolParameters=n}return r.slotConfig=He[r.network],r.utils=new Ge(r),r}getTransactionBuilderConfig(){if(!this.protocolParameters)throw new Error("Protocol parameters or slot config not set. Set a provider or iniatilize with protocol parameters.");return ts(this.protocolParameters,this.slotConfig,{url:this.provider?.url,projectId:this.provider?.projectId})}async switchProvider(e,t){if(this.network==="Custom")throw new Error("Cannot switch when on custom network.");let s=await ut.new({provider:e,network:t});return this.protocolParameters=s.protocolParameters,this.slotConfig=s.slotConfig,this.provider=e||this.provider,!this.protocolParameters&&e&&(this.protocolParameters=await e.getProtocolParameters()),this.network=t||this.network,this.wallet=s.wallet,this}newTx(){return new at(this)}fromTx(e){return new je(this,i.Transaction.from_bytes(g(e)))}newMessage(e,t){return new it(this,e,t)}verifyMessage(e,t,s){let{paymentCredential:r,stakeCredential:n,address:{hex:o}}=this.utils.getAddressDetails(e),c=r?.hash||n?.hash;if(!c)throw new Error("Not a valid address provided.");return es(o,c,t,s)}currentSlot(){return this.utils.unixTimeToSlot(Date.now())}utxosAt(e){return this.provider.getUtxos(e)}utxosAtWithUnit(e,t){return this.provider.getUtxosWithUnit(e,t)}utxoByUnit(e){return this.provider.getUtxoByUnit(e)}utxosByOutRef(e){return this.provider.getUtxosByOutRef(e)}delegationAt(e){return this.provider.getDelegation(e)}awaitTx(e,t=3e3){return this.provider.awaitTx(e,t)}async datumOf(e,t){if(!e.datum){if(!e.datumHash)throw new Error("This UTxO does not have a datum hash.");e.datum=await this.provider.getDatum(e.datumHash)}return pe.from(e.datum,t)}async metadataOf(e){let{policyId:t,name:s,label:r}=Ke(e);switch(r){case 222:case 333:case 444:{let n=await this.utxoByUnit(Wt(t,s,100)),o=await this.datumOf(n);return pe.toJson(o.fields[0])}default:throw new Error("No variant matched.")}}selectWalletFromPrivateKey(e){let t=i.PrivateKey.from_bech32(e),s=t.to_public();t.free();let r=s.hash();return s.free(),this.wallet={address:()=>{let n=[],o=i.StakeCredential.from_keyhash(r);n.push(o);let c=i.EnterpriseAddress.new(this.network==="Mainnet"?1:0,o);n.push(c);let u=c.to_address();n.push(u);let l=u.to_bech32(void 0);return _.free(...n),Promise.resolve(l)},rewardAddress:()=>Promise.resolve(null),getCollateralCore:()=>{},getUtxos:async()=>await this.utxosAt(ye(await this.wallet.address())),getUtxosCore:async()=>{let n=await this.utxosAt(ye(await this.wallet.address())),o=i.TransactionUnspentOutputs.new();return n.forEach(c=>{let u=we(c);o.add(u),u.free()}),o},getDelegation:()=>Promise.resolve({poolId:null,rewards:0n}),signTx:n=>{let o=[],c=n.body();o.push(c);let u=i.hash_transaction(c);o.push(u);let l=i.make_vkey_witness(u,t);o.push(l);let d=i.TransactionWitnessSetBuilder.new();o.push(d),d.add_vkey(l);let h=d.build();return _.free(...o),Promise.resolve(h)},signMessage:(n,o)=>{let{paymentCredential:c,address:{hex:u}}=this.utils.getAddressDetails(n),l=c?.hash,d=r.to_hex();if(!l||l!==d)throw new Error(`Cannot sign message for address: ${n}.`);return Promise.resolve(ze(u,o,e))},submitTx:async n=>await this.provider.submitTx(n)},this}selectWallet(e){let t=async()=>{let[s]=await e.getUsedAddresses();if(s)return s;let[r]=await e.getUnusedAddresses();return r};return this.wallet={address:async()=>{let s=await t(),r=i.Address.from_bytes(g(s)),n=r.to_bech32(void 0);return r.free(),n},rewardAddress:async()=>{let[s]=await e.getRewardAddresses();if(s){let r=i.Address.from_bytes(g(s)),n=i.RewardAddress.from_address(r);r.free();let o=n.to_address();n.free();let c=o.to_bech32(void 0);return o.free(),c}return null},getCollateralCore:()=>{},getUtxos:async()=>(await e.getUtxos()||[]).map(r=>{let n=i.TransactionUnspentOutput.from_bytes(g(r)),o=et(n);return n.free(),o}),getUtxosCore:async()=>{let s=i.TransactionUnspentOutputs.new();return(await e.getUtxos()||[]).forEach(r=>{let n=i.TransactionUnspentOutput.from_bytes(g(r));s.add(n),n.free()}),s},getDelegation:async()=>{let s=await this.wallet.rewardAddress();return s?await this.delegationAt(s):{poolId:null,rewards:0n}},signTx:async s=>{let r=await e.signTx(b(s.to_bytes()),!0);return i.TransactionWitnessSet.from_bytes(g(r))},signMessage:async(s,r)=>{let n=i.Address.from_bech32(s),o=b(n.to_bytes());return n.free(),await e.signData(o,r)},submitTx:async s=>await e.submitTx(s)},this}selectWalletFrom({address:e,utxos:t,rewardAddress:s,collateral:r}){let n=this.utils.getAddressDetails(e);return this.wallet={address:()=>Promise.resolve(e),rewardAddress:()=>{if(!s&&n.stakeCredential&&n.stakeCredential.type==="Key"){let o=i.Ed25519KeyHash.from_hex(n.stakeCredential.hash),c=i.StakeCredential.from_keyhash(o);o.free();let u=i.RewardAddress.new(this.network==="Mainnet"?1:0,c);c.free();let l=u.to_address();u.free();let d=l.to_bech32(void 0);return l.free(),Promise.resolve(d)}return Promise.resolve(s??null)},getCollateralCore:()=>{if(!r||!r.length)return;let o=i.TransactionUnspentOutputs.new();return r.forEach(c=>o.add(we(c))),o},getUtxos:async()=>t||await this.utxosAt(ye(e)),getUtxosCore:async()=>{let o=i.TransactionUnspentOutputs.new();return(t||await this.utxosAt(ye(e))).forEach(c=>{let u=we(c);o.add(u),u.free()}),o},getDelegation:async()=>{let o=await this.wallet.rewardAddress();return o?await this.delegationAt(o):{poolId:null,rewards:0n}},signTx:()=>Promise.reject("Not implemented"),signMessage:()=>Promise.reject("Not implemented"),submitTx:o=>this.provider.submitTx(o)},this}selectWalletFromSeed(e,t){let s=[],{address:r,rewardAddress:n,paymentKey:o,stakeKey:c}=Gt(e,{addressType:t?.addressType||"Base",accountIndex:t?.accountIndex||0,password:t?.password,network:this.network}),u=i.PrivateKey.from_bech32(o);s.push(u);let l=u.to_public();s.push(l);let d=l.hash();s.push(d);let h=d.to_hex(),m=c?(v=>{let y=i.PrivateKey.from_bech32(v);s.push(y);let B=y.to_public();s.push(B);let I=B.hash();return s.push(I),I.to_hex()})(c):"",S={[h]:o,[m]:c};return this.wallet={address:()=>Promise.resolve(r),rewardAddress:()=>Promise.resolve(n||null),getUtxos:()=>this.utxosAt(ye(r)),getCollateralCore:()=>{},getUtxosCore:async()=>{let v=i.TransactionUnspentOutputs.new();return(await this.utxosAt(ye(r))).forEach(y=>{let B=we(y);v.add(B),B.free()}),v},getDelegation:async()=>{let v=await this.wallet.rewardAddress();return v?await this.delegationAt(v):{poolId:null,rewards:0n}},signTx:async v=>{let y=await this.utxosAt(r),I=Qt(v,[h,m],y),N=i.TransactionWitnessSetBuilder.new();I.forEach($=>{let V=v.body(),G=i.hash_transaction(V);V.free();let he=i.PrivateKey.from_bech32(S[$]),R=i.make_vkey_witness(G,he);G.free(),he.free(),N.add_vkey(R),R.free()});let T=N.build();return N.free(),T},signMessage:(v,y)=>{let{paymentCredential:B,stakeCredential:I,address:{hex:N}}=this.utils.getAddressDetails(v),T=B?.hash||I?.hash,$=S[T];if(!$)throw new Error(`Cannot sign message for address: ${v}.`);return Promise.resolve(ze(N,y,$))},submitTx:async v=>await this.provider.submitTx(v)},_.free(...s),this}};var ss=class{constructor(e,t){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"projectId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=e,this.projectId=t||""}async getProtocolParameters(){let e=await fetch(`${this.url}/epochs/latest/parameters`,{headers:{project_id:this.projectId,lucid:se}}).then(t=>t.json());return{minFeeA:parseInt(e.min_fee_a),minFeeB:parseInt(e.min_fee_b),maxTxSize:parseInt(e.max_tx_size),maxValSize:parseInt(e.max_val_size),keyDeposit:BigInt(e.key_deposit),poolDeposit:BigInt(e.pool_deposit),priceMem:parseFloat(e.price_mem),priceStep:parseFloat(e.price_step),maxTxExMem:BigInt(e.max_tx_ex_mem),maxTxExSteps:BigInt(e.max_tx_ex_steps),coinsPerUtxoByte:BigInt(e.coins_per_utxo_size),collateralPercentage:parseInt(e.collateral_percent),maxCollateralInputs:parseInt(e.max_collateral_inputs),costModels:e.cost_models}}async getUtxos(e){let t=(()=>{if(typeof e=="string")return e;let n=e.type==="Key"?i.Ed25519KeyHash.from_hex(e.hash):i.ScriptHash.from_hex(e.hash),o=n.to_bech32("addr_vkh");return n.free(),o})(),s=[],r=1;for(;;){let n=await fetch(`${this.url}/addresses/${t}/utxos?page=${r}`,{headers:{project_id:this.projectId,lucid:se}}).then(o=>o.json());if(n.error){if(n.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(s=s.concat(n),n.length<=0)break;r++}return this.blockfrostUtxosToUtxos(s)}async getUtxosWithUnit(e,t){let s=(()=>{if(typeof e=="string")return e;let o=e.type==="Key"?i.Ed25519KeyHash.from_hex(e.hash):i.ScriptHash.from_hex(e.hash),c=o.to_bech32("addr_vkh");return o.free(),c})(),r=[],n=1;for(;;){let o=await fetch(`${this.url}/addresses/${s}/utxos/${t}?page=${n}`,{headers:{project_id:this.projectId,lucid:se}}).then(c=>c.json());if(o.error){if(o.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(r=r.concat(o),o.length<=0)break;n++}return this.blockfrostUtxosToUtxos(r)}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:{project_id:this.projectId,lucid:se}}).then(n=>n.json());if(!t||t.error)throw new Error("Unit not found.");if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");let s=t[0].address,r=await this.getUtxosWithUnit(s,e);if(r.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return r[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(r=>r.txHash))];return(await Promise.all(t.map(async r=>{let n=await fetch(`${this.url}/txs/${r}/utxos`,{headers:{project_id:this.projectId,lucid:se}}).then(c=>c.json());if(!n||n.error)return[];let o=n.outputs.map(c=>({...c,tx_hash:r}));return this.blockfrostUtxosToUtxos(o)}))).reduce((r,n)=>r.concat(n),[]).filter(r=>e.some(n=>r.txHash===n.txHash&&r.outputIndex===n.outputIndex))}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:{project_id:this.projectId,lucid:se}}).then(s=>s.json());return!t||t.error?{poolId:null,rewards:0n}:{poolId:t.pool_id||null,rewards:BigInt(t.withdrawable_amount)}}async getDatum(e){let t=await fetch(`${this.url}/scripts/datum/${e}/cbor`,{headers:{project_id:this.projectId,lucid:se}}).then(s=>s.json()).then(s=>s.cbor);if(!t||t.error)throw new Error(`No datum found for datum hash: ${e}`);return t}awaitTx(e,t=3e3){return new Promise(s=>{let r=setInterval(async()=>{let n=await fetch(`${this.url}/txs/${e}`,{headers:{project_id:this.projectId,lucid:se}}).then(o=>o.json());if(n&&!n.error)return clearInterval(r),await new Promise(o=>setTimeout(()=>o(1),1e3)),s(!0)},t)})}async submitTx(e){let t=await fetch(`${this.url}/tx/submit`,{method:"POST",headers:{"Content-Type":"application/cbor",project_id:this.projectId,lucid:se},body:g(e)}).then(s=>s.json());if(!t||t.error)throw t?.status_code===400?new Error(t.message):new Error("Could not submit transaction.");return t}async blockfrostUtxosToUtxos(e){return await Promise.all(e.map(async t=>({txHash:t.tx_hash,outputIndex:t.output_index,assets:Object.fromEntries(t.amount.map(({unit:s,quantity:r})=>[s,BigInt(r)])),address:t.address,datumHash:!t.inline_datum&&t.data_hash||void 0,datum:t.inline_datum||void 0,scriptRef:t.reference_script_hash?await(async()=>{let{type:s}=await fetch(`${this.url}/scripts/${t.reference_script_hash}`,{headers:{project_id:this.projectId,lucid:se}}).then(n=>n.json());if(s==="Native"||s==="native")throw new Error("Native script ref not implemented!");let{cbor:r}=await fetch(`${this.url}/scripts/${t.reference_script_hash}/cbor`,{headers:{project_id:this.projectId,lucid:se}}).then(n=>n.json());return{type:s==="plutusV1"?"PlutusV1":"PlutusV2",script:Z(r)}})():void 0})))}};function On(a){let e=r=>{let n=[];try{if(isNaN(r.int)){if(r.bytes||!isNaN(Number(r.bytes)))return i.PlutusData.new_bytes(g(r.bytes));if(r.map){let o=i.PlutusMap.new();return n.push(o),r.map.forEach(({k:c,v:u})=>{let l=e(c);n.push(l);let d=e(u);n.push(d),o.insert(l,d)}),i.PlutusData.new_map(o)}else if(r.list){let o=i.PlutusList.new();return n.push(o),r.list.forEach(c=>{let u=e(c);n.push(u),o.add(u)}),i.PlutusData.new_list(o)}else if(!isNaN(r.constructor)){let o=i.PlutusList.new();n.push(o),r.fields.forEach(l=>{let d=e(l);n.push(d),o.add(d)});let c=i.BigNum.from_str(r.constructor.toString());n.push(c);let u=i.ConstrPlutusData.new(c,o);return n.push(u),i.PlutusData.new_constr_plutus_data(u)}}else{let o=i.BigInt.from_str(r.int.toString());return n.push(o),i.PlutusData.new_integer(o)}throw new Error("Unsupported type")}finally{_.free(...n)}},t=e(a),s=t.to_bytes();return t.free(),b(s)}var se=Be.version;var rs=class{constructor(e,t){Object.defineProperty(this,"kupoUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ogmiosUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.kupoUrl=e,this.ogmiosUrl=t}async getProtocolParameters(){let e=await this.ogmiosWsp("Query",{query:"currentProtocolParameters"});return new Promise((t,s)=>{e.addEventListener("message",r=>{try{let{result:n}=JSON.parse(r.data),o={};Object.keys(n.costModels).forEach(h=>{let m="Plutus"+h.split(":")[1].toUpperCase();o[m]=n.costModels[h]});let[c,u]=n.prices.memory.split("/"),[l,d]=n.prices.steps.split("/");t({minFeeA:parseInt(n.minFeeCoefficient),minFeeB:parseInt(n.minFeeConstant),maxTxSize:parseInt(n.maxTxSize),maxValSize:parseInt(n.maxValueSize),keyDeposit:BigInt(n.stakeKeyDeposit),poolDeposit:BigInt(n.poolDeposit),priceMem:parseInt(c)/parseInt(u),priceStep:parseInt(l)/parseInt(d),maxTxExMem:BigInt(n.maxExecutionUnitsPerTransaction.memory),maxTxExSteps:BigInt(n.maxExecutionUnitsPerTransaction.steps),coinsPerUtxoByte:BigInt(n.coinsPerUtxoByte),collateralPercentage:parseInt(n.collateralPercentage),maxCollateralInputs:parseInt(n.maxCollateralInputs),costModels:o}),e.close()}catch(n){s(n)}},{once:!0})})}async getUtxos(e){let t=typeof e=="string",s=t?e:e.hash,r=await fetch(`${this.kupoUrl}/matches/${s}${t?"":"/*"}?unspent`).then(n=>n.json());return this.kupmiosUtxosToUtxos(r)}async getUtxosWithUnit(e,t){let s=typeof e=="string",r=s?e:e.hash,{policyId:n,assetName:o}=Ke(t),c=await fetch(`${this.kupoUrl}/matches/${r}${s?"":"/*"}?unspent&policy_id=${n}${o?`&asset_name=${o}`:""}`).then(u=>u.json());return this.kupmiosUtxosToUtxos(c)}async getUtxoByUnit(e){let{policyId:t,assetName:s}=Ke(e),r=await fetch(`${this.kupoUrl}/matches/${t}.${s?`${s}`:"*"}?unspent`).then(o=>o.json()),n=await this.kupmiosUtxosToUtxos(r);if(n.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return n[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(r=>r.txHash))];return(await Promise.all(t.map(async r=>{let n=await fetch(`${this.kupoUrl}/matches/*@${r}?unspent`).then(o=>o.json());return this.kupmiosUtxosToUtxos(n)}))).reduce((r,n)=>r.concat(n),[]).filter(r=>e.some(n=>r.txHash===n.txHash&&r.outputIndex===n.outputIndex))}async getDelegation(e){let t=await this.ogmiosWsp("Query",{query:{delegationsAndRewards:[e]}});return new Promise((s,r)=>{t.addEventListener("message",n=>{try{let{result:o}=JSON.parse(n.data),c=o?Object.values(o)[0]:{};s({poolId:c?.delegate||null,rewards:BigInt(c?.rewards||0)}),t.close()}catch(o){r(o)}},{once:!0})})}async getDatum(e){let t=await fetch(`${this.kupoUrl}/datums/${e}`).then(s=>s.json());if(!t||!t.datum)throw new Error(`No datum found for datum hash: ${e}`);return t.datum}awaitTx(e,t=3e3){return new Promise(s=>{let r=setInterval(async()=>{let n=await fetch(`${this.kupoUrl}/matches/*@${e}?unspent`).then(o=>o.json());if(n&&n.length>0)return clearInterval(r),await new Promise(o=>setTimeout(()=>o(1),1e3)),s(!0)},t)})}async submitTx(e){let t=await this.ogmiosWsp("SubmitTx",{submit:e});return new Promise((s,r)=>{t.addEventListener("message",n=>{try{let{result:o}=JSON.parse(n.data);o.SubmitSuccess?s(o.SubmitSuccess.txId):r(o.SubmitFail),t.close()}catch(o){r(o)}},{once:!0})})}kupmiosUtxosToUtxos(e){return Promise.all(e.map(async t=>({txHash:t.transaction_id,outputIndex:parseInt(t.output_index),address:t.address,assets:(()=>{let s={lovelace:BigInt(t.value.coins)};return Object.keys(t.value.assets).forEach(r=>{s[r.replace(".","")]=BigInt(t.value.assets[r])}),s})(),datumHash:t?.datum_type==="hash"?t.datum_hash:null,datum:t?.datum_type==="inline"?await this.getDatum(t.datum_hash):null,scriptRef:t.script_hash&&await(async()=>{let{script:s,language:r}=await fetch(`${this.kupoUrl}/scripts/${t.script_hash}`).then(n=>n.json());if(r==="native")return{type:"Native",script:s};if(r==="plutus:v1"){let n=i.PlutusScript.new(g(s)),o=n.to_bytes();return n.free(),{type:"PlutusV1",script:b(o)}}else if(r==="plutus:v2"){let n=i.PlutusScript.new(g(s)),o=n.to_bytes();return n.free(),{type:"PlutusV2",script:b(o)}}})()})))}async ogmiosWsp(e,t){let s=new WebSocket(this.ogmiosUrl);return await new Promise(r=>{s.addEventListener("open",()=>r(1),{once:!0})}),s.send(JSON.stringify({type:"jsonwsp/request",version:"1.0",servicename:"ogmios",methodname:e,args:t})),s}};var ns=class{constructor({network:e,apiKey:t,turboSubmit:s=!1}){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"turboSubmit",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=`https://${e}.gomaestro-api.org/v1`,this.apiKey=t,this.turboSubmit=s}async getProtocolParameters(){let t=(await fetch(`${this.url}/protocol-params`,{headers:this.commonHeaders()}).then(n=>n.json())).data,s=n=>{let o=n.indexOf("/");return parseInt(n.slice(0,o))/parseInt(n.slice(o+1))},r=(n,o)=>{let c=Object.keys(n).sort().map(u=>({[o[u]||u]:Object.fromEntries(Object.entries(n[u]).sort(([d,h],[f,m])=>d.localeCompare(f)))}));return Object.assign({},...c)};return{minFeeA:parseInt(t.min_fee_coefficient),minFeeB:parseInt(t.min_fee_constant),maxTxSize:parseInt(t.max_tx_size),maxValSize:parseInt(t.max_value_size),keyDeposit:BigInt(t.stake_key_deposit),poolDeposit:BigInt(t.pool_deposit),priceMem:s(t.prices.memory),priceStep:s(t.prices.steps),maxTxExMem:BigInt(t.max_execution_units_per_transaction.memory),maxTxExSteps:BigInt(t.max_execution_units_per_transaction.steps),coinsPerUtxoByte:BigInt(t.coins_per_utxo_byte),collateralPercentage:parseInt(t.collateral_percentage),maxCollateralInputs:parseInt(t.max_collateral_inputs),costModels:r(t.cost_models,{"plutus:v1":"PlutusV1","plutus:v2":"PlutusV2"})}}async getUtxosInternal(e,t){let s=(()=>{if(typeof e=="string")return"/addresses/"+e;let o=e.type=="Key"?i.Ed25519KeyHash.from_hex(e.hash):i.ScriptHash.from_hex(e.hash),c="/addresses/cred/";return c+=e.type==="Key"?o.to_bech32("addr_vkh"):o.to_bech32("addr_shared_vkh"),o.free(),c})(),r=new URLSearchParams({count:"100",...t&&{asset:t}});return(await this.getAllPagesData(async o=>await fetch(o,{headers:this.commonHeaders()}),`${this.url}${s}/utxos`,r,"Location: getUtxosInternal. Error: Could not fetch UTxOs from Maestro")).map(this.maestroUtxoToUtxo)}getUtxos(e){return this.getUtxosInternal(e)}getUtxosWithUnit(e,t){return this.getUtxosInternal(e,t)}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:this.commonHeaders()}),s=await t.json();if(!t.ok)throw s.message?new Error(s.message):new Error("Location: getUtxoByUnit. Error: Couldn't perform query. Received status code: "+t.status);let r=s.data;if(r.length===0)throw new Error("Location: getUtxoByUnit. Error: Unit not found.");if(r.length>1)throw new Error("Location: getUtxoByUnit. Error: Unit needs to be an NFT or only held by one address.");let n=r[0].address,o=await this.getUtxosWithUnit(n,e);if(o.length>1)throw new Error("Location: getUtxoByUnit. Error: Unit needs to be an NFT or only held by one address.");return o[0]}async getUtxosByOutRef(e){let t=`${this.url}/transactions/outputs`,s=JSON.stringify(e.map(({txHash:n,outputIndex:o})=>`${n}#${o}`));return(await this.getAllPagesData(async n=>await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",...this.commonHeaders()},body:s}),t,new URLSearchParams({}),"Location: getUtxosByOutRef. Error: Could not fetch UTxOs by references from Maestro")).map(this.maestroUtxoToUtxo)}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:this.commonHeaders()});if(!t.ok)return{poolId:null,rewards:0n};let r=(await t.json()).data;return{poolId:r.delegated_pool||null,rewards:BigInt(r.rewards_available)}}async getDatum(e){let t=await fetch(`${this.url}/datum/${e}`,{headers:this.commonHeaders()});if(!t.ok)throw t.status===404?new Error(`No datum found for datum hash: ${e}`):new Error("Location: getDatum. Error: Couldn't successfully perform query. Received status code: "+t.status);return(await t.json()).data.bytes}awaitTx(e,t=3e3){return new Promise(s=>{let r=setInterval(async()=>{let n=await fetch(`${this.url}/transactions/${e}/cbor`,{headers:this.commonHeaders()});if(n.ok)return await n.json(),clearInterval(r),await new Promise(o=>setTimeout(()=>o(1),1e3)),s(!0)},t)})}async submitTx(e){let t=`${this.url}/txmanager`;t+=this.turboSubmit?"/turbosubmit":"";let s=await fetch(t,{method:"POST",headers:{"Content-Type":"application/cbor",Accept:"text/plain",...this.commonHeaders()},body:g(e)}),r=await s.text();if(!s.ok)throw s.status===400?new Error(r):new Error("Could not submit transaction. Received status code: "+s.status);return r}commonHeaders(){return{"api-key":this.apiKey,lucid:Os}}maestroUtxoToUtxo(e){return{txHash:e.tx_hash,outputIndex:e.index,assets:(()=>{let t={};return e.assets.forEach(s=>{t[s.unit]=BigInt(s.amount)}),t})(),address:e.address,datumHash:e.datum?e.datum.type=="inline"?void 0:e.datum.hash:void 0,datum:e.datum?.bytes,scriptRef:e.reference_script?e.reference_script.type=="native"?void 0:{type:e.reference_script.type=="plutusv1"?"PlutusV1":"PlutusV2",script:Z(e.reference_script.bytes)}:void 0}}async getAllPagesData(e,t,s,r){let n=null,o=[];for(;;){n!==null&&s.set("cursor",n);let c=await e(`${t}?`+s),u=await c.json();if(!c.ok)throw new Error(`${r}. Received status code: ${c.status}`);if(n=u.next_cursor,o=o.concat(u.data),n==null)break}return o}},Os=Be.version;export{ss as Blockfrost,i as C,z as Constr,pe as Data,ct as Emulator,_ as Freeables,rs as Kupmios,ut as Lucid,D as M,ns as Maestro,rt as MerkleTree,Je as PROTOCOL_PARAMETERS_DEFAULT,He as SLOT_CONFIG_NETWORK,at as Tx,je as TxComplete,ot as TxSigned,Ge as Utils,hr as addAssets,Ne as addressFromWithNetworkCheck,Z as applyDoubleCborEncoding,dr as applyParamsToScript,xe as assetsToValue,Le as attachScript,Jt as chunk,gt as combineHash,Xt as concat,et as coreToUtxo,kt as createCostModels,xt as createOutput,yt as createPoolRegistration,On as datumJsonToCbor,tt as equals,g as fromHex,Ts as fromLabel,Es as fromScriptRef,Ft as fromText,Ke as fromUnit,Is as generatePrivateKey,Cs as generateSeedPhrase,J as getAddressDetails,Yt as getDatumFromOutputData,Ue as getScriptWitness,nt as getStakeCredential,Ps as nativeScriptFromJson,Oe as networkToId,ye as paymentCredentialOf,st as sha256,jt as slotToBeginUnixTime,Ss as stakeCredentialOf,b as toHex,Bs as toLabel,lr as toPublicKey,Qe as toScriptRef,ur as toText,Wt as toUnit,Dt as unixTimeToEnclosingSlot,we as utxoToCore,ft as valueToAssets};
