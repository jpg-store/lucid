Object.hasOwn||Object.defineProperty(Object,"hasOwn",{value:function(a,e){if(a==null)throw new TypeError("Cannot convert undefined or null to object");return Object.prototype.hasOwnProperty.call(Object(a),e)},configurable:!0,enumerable:!1,writable:!0});import*as o from"../esm/src/core/libs/cardano_multiplatform_lib/cardano_multiplatform_lib.generated.js";import*as P from"../esm/src/core/libs/cardano_message_signing/cardano_message_signing.generated.js";var fe={name:"@jpg-store/lucid-cardano",version:"0.11.2",license:"MIT",description:"This is a fork of the original Lucid repo compiled into CommonJS. For more information check https://github.com/spacebudz/lucid",repository:"https://github.com/jpg-store/lucid",module:"./dist/esm/mod.js",main:"./dist/esm/mod.js",types:"./dist/types/mod.d.ts",engines:{node:">=14"},dependencies:{"node-fetch":"^3.2.3","@peculiar/webcrypto":"^1.4.0",ws:"^8.10.0"},type:"module",exports:{".":{import:"./dist/esm/mod.js",types:"./dist/types/mod.d.ts"}}};async function Qe(a,e){try{await a.instantiate({url:new URL(e,`https://deno.land/x/lucid@${fe.version}/src/core/libs/`)})}catch{}}await Promise.all([Qe(o,"cardano_multiplatform_lib/cardano_multiplatform_lib_bg.wasm"),Qe(P,"cardano_message_signing/cardano_message_signing_bg.wasm")]);function et(a){let e=o.Costmdls.new(),t=o.CostModel.new();Object.values(a.PlutusV1).forEach((s,n)=>{t.set(n,o.Int.new(o.BigNum.from_str(s.toString())))}),e.insert(o.Language.new_plutus_v1(),t);let r=o.CostModel.new_plutus_v2();return Object.values(a.PlutusV2||[]).forEach((s,n)=>{r.set(n,o.Int.new(o.BigNum.from_str(s.toString())))}),e.insert(o.Language.new_plutus_v2(),r),e}var tt={minFeeA:44,minFeeB:155381,maxTxSize:16384,maxValSize:5e3,keyDeposit:2000000n,poolDeposit:500000000n,priceMem:.0577,priceStep:721e-7,maxTxExMem:14000000n,maxTxExSteps:10000000000n,coinsPerUtxoByte:4310n,collateralPercentage:150,maxCollateralInputs:3,costModels:{PlutusV1:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEd25519Signature-cpu-arguments-intercept":9462713,"verifyEd25519Signature-cpu-arguments-slope":1021,"verifyEd25519Signature-memory-arguments":10},PlutusV2:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"serialiseData-cpu-arguments-intercept":1159724,"serialiseData-cpu-arguments-slope":392670,"serialiseData-memory-arguments-intercept":0,"serialiseData-memory-arguments-slope":2,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEcdsaSecp256k1Signature-cpu-arguments":35892428,"verifyEcdsaSecp256k1Signature-memory-arguments":10,"verifyEd25519Signature-cpu-arguments-intercept":57996947,"verifyEd25519Signature-cpu-arguments-slope":18975,"verifyEd25519Signature-memory-arguments":10,"verifySchnorrSecp256k1Signature-cpu-arguments-intercept":38887044,"verifySchnorrSecp256k1Signature-cpu-arguments-slope":32947,"verifySchnorrSecp256k1Signature-memory-arguments":10}}};var rt=new TextEncoder().encode("0123456789abcdef");function Dt(a){return new Error("encoding/hex: invalid byte: "+new TextDecoder().decode(new Uint8Array([a])))}function Mt(){return new Error("encoding/hex: odd length hex string")}function ze(a){if(48<=a&&a<=57)return a-48;if(97<=a&&a<=102)return a-97+10;if(65<=a&&a<=70)return a-65+10;throw Dt(a)}function Rt(a){return a*2}function $t(a){let e=new Uint8Array(Rt(a.length));for(let t=0;t<e.length;t++){let r=a[t];e[t*2]=rt[r>>4],e[t*2+1]=rt[r&15]}return e}function st(a){return new TextDecoder().decode($t(a))}function Ve(a){let e=new Uint8Array(qt(a.length));for(let t=0;t<e.length;t++){let r=ze(a[t*2]),s=ze(a[t*2+1]);e[t]=r<<4|s}if(a.length%2==1)throw ze(a[e.length*2]),Mt();return e}function qt(a){return a>>>1}function nt(a){return Ve(new TextEncoder().encode(a))}var v=function(a,e,t,r,s){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!s)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?a!==e||!s:!e.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?s.call(a,t):s?s.value=t:e.set(a,t),t},g=function(a,e,t,r){if(t==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?a!==e||!r:!e.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?r:t==="a"?r.call(a):r?r.value:e.get(a)},se,ce,L,ge,Ce,W,F,J,X,Y,Z,G,Q,le,ye,ne,Oe,ae,Kt,Lt,zt,Vt,x="0123456789abcdef".split(""),Wt=[-2147483648,8388608,32768,128],K=[24,16,8,0],Pe=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],U=[],xe=class{constructor(e=!1,t=!1){se.set(this,void 0),ce.set(this,void 0),L.set(this,void 0),ge.set(this,void 0),Ce.set(this,void 0),W.set(this,void 0),F.set(this,void 0),J.set(this,void 0),X.set(this,void 0),Y.set(this,void 0),Z.set(this,void 0),G.set(this,void 0),Q.set(this,void 0),le.set(this,void 0),ye.set(this,void 0),ne.set(this,void 0),Oe.set(this,0),ae.set(this,void 0),this.init(e,t)}init(e,t){t?(U[0]=U[16]=U[1]=U[2]=U[3]=U[4]=U[5]=U[6]=U[7]=U[8]=U[9]=U[10]=U[11]=U[12]=U[13]=U[14]=U[15]=0,v(this,ce,U,"f")):v(this,ce,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f"),e?(v(this,W,3238371032,"f"),v(this,F,914150663,"f"),v(this,J,812702999,"f"),v(this,X,4144912697,"f"),v(this,Y,4290775857,"f"),v(this,Z,1750603025,"f"),v(this,G,1694076839,"f"),v(this,Q,3204075428,"f")):(v(this,W,1779033703,"f"),v(this,F,3144134277,"f"),v(this,J,1013904242,"f"),v(this,X,2773480762,"f"),v(this,Y,1359893119,"f"),v(this,Z,2600822924,"f"),v(this,G,528734635,"f"),v(this,Q,1541459225,"f")),v(this,se,v(this,ae,v(this,L,v(this,ye,0,"f"),"f"),"f"),"f"),v(this,ge,v(this,le,!1,"f"),"f"),v(this,Ce,!0,"f"),v(this,ne,e,"f")}update(e){if(g(this,ge,"f"))return this;let t;e instanceof ArrayBuffer?t=new Uint8Array(e):t=e;let r=0,s=t.length,n=g(this,ce,"f");for(;r<s;){let i;if(g(this,le,"f")&&(v(this,le,!1,"f"),n[0]=g(this,se,"f"),n[16]=n[1]=n[2]=n[3]=n[4]=n[5]=n[6]=n[7]=n[8]=n[9]=n[10]=n[11]=n[12]=n[13]=n[14]=n[15]=0),typeof t!="string")for(i=g(this,ae,"f");r<s&&i<64;++r)n[i>>2]|=t[r]<<K[i++&3];else for(i=g(this,ae,"f");r<s&&i<64;++r){let u=t.charCodeAt(r);u<128?n[i>>2]|=u<<K[i++&3]:u<2048?(n[i>>2]|=(192|u>>6)<<K[i++&3],n[i>>2]|=(128|u&63)<<K[i++&3]):u<55296||u>=57344?(n[i>>2]|=(224|u>>12)<<K[i++&3],n[i>>2]|=(128|u>>6&63)<<K[i++&3],n[i>>2]|=(128|u&63)<<K[i++&3]):(u=65536+((u&1023)<<10|t.charCodeAt(++r)&1023),n[i>>2]|=(240|u>>18)<<K[i++&3],n[i>>2]|=(128|u>>12&63)<<K[i++&3],n[i>>2]|=(128|u>>6&63)<<K[i++&3],n[i>>2]|=(128|u&63)<<K[i++&3])}v(this,Oe,i,"f"),v(this,L,g(this,L,"f")+(i-g(this,ae,"f")),"f"),i>=64?(v(this,se,n[16],"f"),v(this,ae,i-64,"f"),this.hash(),v(this,le,!0,"f")):v(this,ae,i,"f")}return g(this,L,"f")>4294967295&&(v(this,ye,g(this,ye,"f")+(g(this,L,"f")/4294967296<<0),"f"),v(this,L,g(this,L,"f")%4294967296,"f")),this}finalize(){if(g(this,ge,"f"))return;v(this,ge,!0,"f");let e=g(this,ce,"f"),t=g(this,Oe,"f");e[16]=g(this,se,"f"),e[t>>2]|=Wt[t&3],v(this,se,e[16],"f"),t>=56&&(g(this,le,"f")||this.hash(),e[0]=g(this,se,"f"),e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=g(this,ye,"f")<<3|g(this,L,"f")>>>29,e[15]=g(this,L,"f")<<3,this.hash()}hash(){let e=g(this,W,"f"),t=g(this,F,"f"),r=g(this,J,"f"),s=g(this,X,"f"),n=g(this,Y,"f"),i=g(this,Z,"f"),u=g(this,G,"f"),c=g(this,Q,"f"),h=g(this,ce,"f"),m,_,B,p,E,I,w,S,T,M;for(let O=16;O<64;++O)p=h[O-15],m=(p>>>7|p<<25)^(p>>>18|p<<14)^p>>>3,p=h[O-2],_=(p>>>17|p<<15)^(p>>>19|p<<13)^p>>>10,h[O]=h[O-16]+m+h[O-7]+_<<0;M=t&r;for(let O=0;O<64;O+=4)g(this,Ce,"f")?(g(this,ne,"f")?(w=300032,p=h[0]-1413257819,c=p-150054599<<0,s=p+24177077<<0):(w=704751109,p=h[0]-210244248,c=p-1521486534<<0,s=p+143694565<<0),v(this,Ce,!1,"f")):(m=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),_=(n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7),w=e&t,B=w^e&r^M,I=n&i^~n&u,p=c+_+I+Pe[O]+h[O],E=m+B,c=s+p<<0,s=p+E<<0),m=(s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10),_=(c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7),S=s&e,B=S^s&t^w,I=c&n^~c&i,p=u+_+I+Pe[O+1]+h[O+1],E=m+B,u=r+p<<0,r=p+E<<0,m=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),_=(u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7),T=r&s,B=T^r&e^S,I=u&c^~u&n,p=i+_+I+Pe[O+2]+h[O+2],E=m+B,i=t+p<<0,t=p+E<<0,m=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),_=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),M=t&r,B=M^t&s^T,I=i&u^~i&c,p=n+_+I+Pe[O+3]+h[O+3],E=m+B,n=e+p<<0,e=p+E<<0;v(this,W,g(this,W,"f")+e<<0,"f"),v(this,F,g(this,F,"f")+t<<0,"f"),v(this,J,g(this,J,"f")+r<<0,"f"),v(this,X,g(this,X,"f")+s<<0,"f"),v(this,Y,g(this,Y,"f")+n<<0,"f"),v(this,Z,g(this,Z,"f")+i<<0,"f"),v(this,G,g(this,G,"f")+u<<0,"f"),v(this,Q,g(this,Q,"f")+c<<0,"f")}hex(){this.finalize();let e=g(this,W,"f"),t=g(this,F,"f"),r=g(this,J,"f"),s=g(this,X,"f"),n=g(this,Y,"f"),i=g(this,Z,"f"),u=g(this,G,"f"),c=g(this,Q,"f"),h=x[e>>28&15]+x[e>>24&15]+x[e>>20&15]+x[e>>16&15]+x[e>>12&15]+x[e>>8&15]+x[e>>4&15]+x[e&15]+x[t>>28&15]+x[t>>24&15]+x[t>>20&15]+x[t>>16&15]+x[t>>12&15]+x[t>>8&15]+x[t>>4&15]+x[t&15]+x[r>>28&15]+x[r>>24&15]+x[r>>20&15]+x[r>>16&15]+x[r>>12&15]+x[r>>8&15]+x[r>>4&15]+x[r&15]+x[s>>28&15]+x[s>>24&15]+x[s>>20&15]+x[s>>16&15]+x[s>>12&15]+x[s>>8&15]+x[s>>4&15]+x[s&15]+x[n>>28&15]+x[n>>24&15]+x[n>>20&15]+x[n>>16&15]+x[n>>12&15]+x[n>>8&15]+x[n>>4&15]+x[n&15]+x[i>>28&15]+x[i>>24&15]+x[i>>20&15]+x[i>>16&15]+x[i>>12&15]+x[i>>8&15]+x[i>>4&15]+x[i&15]+x[u>>28&15]+x[u>>24&15]+x[u>>20&15]+x[u>>16&15]+x[u>>12&15]+x[u>>8&15]+x[u>>4&15]+x[u&15];return g(this,ne,"f")||(h+=x[c>>28&15]+x[c>>24&15]+x[c>>20&15]+x[c>>16&15]+x[c>>12&15]+x[c>>8&15]+x[c>>4&15]+x[c&15]),h}toString(){return this.hex()}digest(){this.finalize();let e=g(this,W,"f"),t=g(this,F,"f"),r=g(this,J,"f"),s=g(this,X,"f"),n=g(this,Y,"f"),i=g(this,Z,"f"),u=g(this,G,"f"),c=g(this,Q,"f"),h=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,r>>24&255,r>>16&255,r>>8&255,r&255,s>>24&255,s>>16&255,s>>8&255,s&255,n>>24&255,n>>16&255,n>>8&255,n&255,i>>24&255,i>>16&255,i>>8&255,i&255,u>>24&255,u>>16&255,u>>8&255,u&255];return g(this,ne,"f")||h.push(c>>24&255,c>>16&255,c>>8&255,c&255),h}array(){return this.digest()}arrayBuffer(){this.finalize();let e=new ArrayBuffer(g(this,ne,"f")?28:32),t=new DataView(e);return t.setUint32(0,g(this,W,"f")),t.setUint32(4,g(this,F,"f")),t.setUint32(8,g(this,J,"f")),t.setUint32(12,g(this,X,"f")),t.setUint32(16,g(this,Y,"f")),t.setUint32(20,g(this,Z,"f")),t.setUint32(24,g(this,G,"f")),g(this,ne,"f")||t.setUint32(28,g(this,Q,"f")),e}};se=new WeakMap,ce=new WeakMap,L=new WeakMap,ge=new WeakMap,Ce=new WeakMap,W=new WeakMap,F=new WeakMap,J=new WeakMap,X=new WeakMap,Y=new WeakMap,Z=new WeakMap,G=new WeakMap,Q=new WeakMap,le=new WeakMap,ye=new WeakMap,ne=new WeakMap,Oe=new WeakMap,ae=new WeakMap;Kt=new WeakMap,Lt=new WeakMap,zt=new WeakMap,Vt=new WeakMap;var at="Invalid mnemonic",de="Invalid entropy",Ft="Invalid mnemonic checksum",ot=`A wordlist is required but a default could not be found.
Please pass a 2048 word array explicitly.`;function it(a,e){if(e=e||mt,!e)throw new Error(ot);let t=Yt(a).split(" ");if(t.length%3!==0)throw new Error(at);let r=t.map(m=>{let _=e.indexOf(m);if(_===-1)throw new Error(at);return lt(_.toString(2),"0",11)}).join(""),s=Math.floor(r.length/33)*32,n=r.slice(0,s),i=r.slice(s),u=n.match(/(.{1,8})/g).map(ht);if(u.length<16)throw new Error(de);if(u.length>32)throw new Error(de);if(u.length%4!==0)throw new Error(de);let c=new Uint8Array(u);if(ct(c)!==i)throw new Error(Ft);return y(c)}function Jt(a){let r=new Uint8Array(a);if(a>4294967295)throw new RangeError("requested too many random bytes");if(a>0)if(a>65536)for(let s=0;s<a;s+=65536)crypto.getRandomValues(r.slice(s,s+65536));else crypto.getRandomValues(r);return r}function ut(a,e,t){if(a=a||128,a%32!==0)throw new TypeError(de);return e=e||Jt,Xt(e(a/8),t)}function Xt(a,e){if(e=e||mt,!e)throw new Error(ot);if(a.length<16)throw new TypeError(de);if(a.length>32)throw new TypeError(de);if(a.length%4!==0)throw new TypeError(de);let t=dt(Array.from(a)),r=ct(a),i=(t+r).match(/(.{1,11})/g).map(u=>{let c=ht(u);return e[c]});return e[0]==="\u3042\u3044\u3053\u304F\u3057\u3093"?i.join("\u3000"):i.join(" ")}function ct(a){let t=a.length*8/32,r=new xe().update(a).digest();return dt(Array.from(r)).slice(0,t)}function lt(a,e,t){for(;a.length<t;)a=e+a;return a}function dt(a){return a.map(e=>lt(e.toString(2),"0",8)).join("")}function Yt(a){return(a||"").normalize("NFKD")}function ht(a){return parseInt(a,2)}var mt=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var We=[0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243];typeof Int32Array<"u"&&(We=new Int32Array(We));function pt(a,e=0){let t=~~e;for(let r=0;r<a.length;r++)t=We[(t^a[r])&255]&255;return t}var we={Mainnet:{zeroTime:1596059091e3,zeroSlot:4492800,slotLength:1e3},Preview:{zeroTime:1666656e6,zeroSlot:0,slotLength:1e3},Preprod:{zeroTime:16557696e5,zeroSlot:86400,slotLength:1e3},Custom:{zeroTime:0,zeroSlot:0,slotLength:0}};function ft(a,e){let t=(a-e.zeroSlot)*e.slotLength;return e.zeroTime+t}function gt(a,e){let t=a-e.zeroTime;return Math.floor(t/e.slotLength)+e.zeroSlot}var C=Symbol.for("TypeBox.Kind"),he=Symbol.for("TypeBox.Hint"),H=Symbol.for("TypeBox.Modifier"),Zt=0,Fe=class{ReadonlyOptional(e){return{[H]:"ReadonlyOptional",...e}}Readonly(e){return{[H]:"Readonly",...e}}Optional(e){return{[H]:"Optional",...e}}Any(e={}){return this.Create({...e,[C]:"Any"})}Array(e,t={}){return this.Create({...t,[C]:"Array",type:"array",items:e})}Boolean(e={}){return this.Create({...e,[C]:"Boolean",type:"boolean"})}ConstructorParameters(e,t={}){return this.Tuple([...e.parameters],{...t})}Constructor(e,t,r={}){if(e[C]==="Tuple"){let s=e.items===void 0?[]:e.items;return this.Create({...r,[C]:"Constructor",type:"object",instanceOf:"Constructor",parameters:s,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...r,[C]:"Constructor",type:"object",instanceOf:"Constructor",parameters:e,returns:t});throw new Error("TypeBuilder.Constructor: Invalid parameters")}}Date(e={}){return this.Create({...e,[C]:"Date",type:"object",instanceOf:"Date"})}Enum(e,t={}){let s=Object.keys(e).filter(n=>isNaN(n)).map(n=>e[n]).map(n=>typeof n=="string"?{[C]:"Literal",type:"string",const:n}:{[C]:"Literal",type:"number",const:n});return this.Create({...t,[C]:"Union",[he]:"Enum",anyOf:s})}Function(e,t,r={}){if(e[C]==="Tuple"){let s=e.items===void 0?[]:e.items;return this.Create({...r,[C]:"Function",type:"object",instanceOf:"Function",parameters:s,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...r,[C]:"Function",type:"object",instanceOf:"Function",parameters:e,returns:t});throw new Error("TypeBuilder.Function: Invalid parameters")}}InstanceType(e,t={}){return{...t,...this.Clone(e.returns)}}Integer(e={}){return this.Create({...e,[C]:"Integer",type:"integer"})}Intersect(e,t={}){let r=u=>u[H]&&u[H]==="Optional"||u[H]==="ReadonlyOptional",[s,n]=[new Set,new Set];for(let u of e)for(let[c,h]of Object.entries(u.properties))r(h)&&n.add(c);for(let u of e)for(let c of Object.keys(u.properties))n.has(c)||s.add(c);let i={};for(let u of e)for(let[c,h]of Object.entries(u.properties))i[c]=i[c]===void 0?h:{[C]:"Union",anyOf:[i[c],{...h}]};return s.size>0?this.Create({...t,[C]:"Object",type:"object",properties:i,required:[...s]}):this.Create({...t,[C]:"Object",type:"object",properties:i})}KeyOf(e,t={}){let r=Object.keys(e.properties).map(s=>this.Create({...t,[C]:"Literal",type:"string",const:s}));return this.Create({...t,[C]:"Union",[he]:"KeyOf",anyOf:r})}Literal(e,t={}){return this.Create({...t,[C]:"Literal",const:e,type:typeof e})}Never(e={}){return this.Create({...e,[C]:"Never",allOf:[{type:"boolean",const:!1},{type:"boolean",const:!0}]})}Null(e={}){return this.Create({...e,[C]:"Null",type:"null"})}Number(e={}){return this.Create({...e,[C]:"Number",type:"number"})}Object(e,t={}){let r=Object.keys(e),s=r.filter(i=>{let c=e[i][H];return c&&(c==="Optional"||c==="ReadonlyOptional")}),n=r.filter(i=>!s.includes(i));return n.length>0?this.Create({...t,[C]:"Object",type:"object",properties:e,required:n}):this.Create({...t,[C]:"Object",type:"object",properties:e})}Omit(e,t,r={}){let s=t[C]==="Union"?t.anyOf.map(i=>i.const):t,n={...this.Clone(e),...r,[he]:"Omit"};n.required&&(n.required=n.required.filter(i=>!s.includes(i)),n.required.length===0&&delete n.required);for(let i of Object.keys(n.properties))s.includes(i)&&delete n.properties[i];return this.Create(n)}Parameters(e,t={}){return j.Tuple(e.parameters,{...t})}Partial(e,t={}){let r={...this.Clone(e),...t,[he]:"Partial"};delete r.required;for(let s of Object.keys(r.properties)){let n=r.properties[s];switch(n[H]){case"ReadonlyOptional":n[H]="ReadonlyOptional";break;case"Readonly":n[H]="ReadonlyOptional";break;case"Optional":n[H]="Optional";break;default:n[H]="Optional";break}}return this.Create(r)}Pick(e,t,r={}){let s=t[C]==="Union"?t.anyOf.map(i=>i.const):t,n={...this.Clone(e),...r,[he]:"Pick"};n.required&&(n.required=n.required.filter(i=>s.includes(i)),n.required.length===0&&delete n.required);for(let i of Object.keys(n.properties))s.includes(i)||delete n.properties[i];return this.Create(n)}Promise(e,t={}){return this.Create({...t,[C]:"Promise",type:"object",instanceOf:"Promise",item:e})}Record(e,t,r={}){if(e[C]==="Union")return this.Object(e.anyOf.reduce((n,i)=>({...n,[i.const]:t}),{}),{...r,[he]:"Record"});let s=["Integer","Number"].includes(e[C])?"^(0|[1-9][0-9]*)$":e[C]==="String"&&e.pattern?e.pattern:"^.*$";return this.Create({...r,[C]:"Record",type:"object",patternProperties:{[s]:t},additionalProperties:!1})}Recursive(e,t={}){t.$id===void 0&&(t.$id=`T${Zt++}`);let r=e({[C]:"Self",$ref:`${t.$id}`});return r.$id=t.$id,this.Create({...t,...r})}Ref(e,t={}){if(e.$id===void 0)throw Error("TypeBuilder.Ref: Referenced schema must specify an $id");return this.Create({...t,[C]:"Ref",$ref:e.$id})}RegEx(e,t={}){return this.Create({...t,[C]:"String",type:"string",pattern:e.source})}Required(e,t={}){let r={...this.Clone(e),...t,[he]:"Required"};r.required=Object.keys(r.properties);for(let s of Object.keys(r.properties)){let n=r.properties[s];switch(n[H]){case"ReadonlyOptional":n[H]="Readonly";break;case"Readonly":n[H]="Readonly";break;case"Optional":delete n[H];break;default:delete n[H];break}}return this.Create(r)}ReturnType(e,t={}){return{...t,...this.Clone(e.returns)}}Strict(e){return JSON.parse(JSON.stringify(e))}String(e={}){return this.Create({...e,[C]:"String",type:"string"})}Tuple(e,t={}){let s=e.length,n=e.length,i=e.length>0?{...t,[C]:"Tuple",type:"array",items:e,additionalItems:!1,minItems:s,maxItems:n}:{...t,[C]:"Tuple",type:"array",minItems:s,maxItems:n};return this.Create(i)}Undefined(e={}){return this.Create({...e,[C]:"Undefined",type:"null",typeOf:"Undefined"})}Union(e,t={}){return e.length===0?j.Never({...t}):this.Create({...t,[C]:"Union",anyOf:e})}Uint8Array(e={}){return this.Create({...e,[C]:"Uint8Array",type:"object",instanceOf:"Uint8Array"})}Unknown(e={}){return this.Create({...e,[C]:"Unknown"})}Unsafe(e={}){return this.Create({...e,[C]:e[C]||"Unsafe"})}Void(e={}){return this.Create({...e,[C]:"Void",type:"null",typeOf:"Void"})}Create(e){return e}Clone(e){let t=s=>typeof s=="object"&&s!==null&&!Array.isArray(s),r=s=>typeof s=="object"&&s!==null&&Array.isArray(s);return t(e)?Object.keys(e).reduce((s,n)=>({...s,[n]:this.Clone(e[n])}),Object.getOwnPropertySymbols(e).reduce((s,n)=>({...s,[n]:this.Clone(e[n])}),{})):r(e)?e.map(s=>this.Clone(s)):e}},j=new Fe;var N=class{constructor(e,t){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fields",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.index=e,this.fields=t}},te={Integer:function(a){let e=j.Unsafe({dataType:"integer"});return a&&Object.entries(a).forEach(([t,r])=>{e[t]=r}),e},Bytes:function(a){let e=j.Unsafe({dataType:"bytes"});return a&&Object.entries(a).forEach(([t,r])=>{e[t]=r}),e},Boolean:function(){return j.Unsafe({anyOf:[{title:"False",dataType:"constructor",index:0,fields:[]},{title:"True",dataType:"constructor",index:1,fields:[]}]})},Any:function(){return j.Unsafe({description:"Any Data."})},Array:function(a,e){let t=j.Array(a);return Ie(t,{dataType:"list",items:a}),e&&Object.entries(e).forEach(([r,s])=>{t[r]=s}),t},Map:function(a,e,t){let r=j.Unsafe({dataType:"map",keys:a,values:e});return t&&Object.entries(t).forEach(([s,n])=>{r[s]=n}),r},Object:function(a,e){let t=j.Object(a);return Ie(t,{anyOf:[{dataType:"constructor",index:0,fields:Object.entries(a).map(([r,s])=>({...s,title:r}))}]}),t.anyOf[0].hasConstr=typeof e?.hasConstr>"u"||e.hasConstr,t},Enum:function(a){let e=j.Union(a);return Ie(e,{anyOf:a.map((t,r)=>t.anyOf[0].fields.length===0?{...t.anyOf[0],index:r}:{dataType:"constructor",title:(()=>{let s=t.anyOf[0].fields[0].title;if(s.charAt(0)!==s.charAt(0).toUpperCase())throw new Error(`Enum '${s}' needs to start with an uppercase letter.`);return t.anyOf[0].fields[0].title})(),index:r,fields:t.anyOf[0].fields[0].items||t.anyOf[0].fields[0].anyOf[0].fields})}),e},Tuple:function(a,e){let t=j.Tuple(a);return Ie(t,{dataType:"list",items:a}),e&&Object.entries(e).forEach(([r,s])=>{t[r]=s}),t},Literal:function(a){if(a.charAt(0)!==a.charAt(0).toUpperCase())throw new Error(`Enum '${a}' needs to start with an uppercase letter.`);let e=j.Literal(a);return Ie(e,{anyOf:[{dataType:"constructor",title:a,index:0,fields:[]}]}),e},Nullable:function(a){return j.Unsafe({anyOf:[{title:"Some",description:"An optional value.",dataType:"constructor",index:0,fields:[a]},{title:"None",description:"Nothing.",dataType:"constructor",index:1,fields:[]}]})},to:Gt,from:Qt,fromJson:er,toJson:tr,void:function(){return"d87980"},castFrom:R,castTo:z};function Gt(a,e){function t(s){try{if(typeof s=="bigint")return o.PlutusData.new_integer(o.BigInt.from_str(s.toString()));if(typeof s=="string")return o.PlutusData.new_bytes(d(s));if(s instanceof N){let{index:n,fields:i}=s,u=o.PlutusList.new();return i.forEach(c=>u.add(t(c))),o.PlutusData.new_constr_plutus_data(o.ConstrPlutusData.new(o.BigNum.from_str(n.toString()),u))}else if(s instanceof Array){let n=o.PlutusList.new();return s.forEach(i=>n.add(t(i))),o.PlutusData.new_list(n)}else if(s instanceof Map){let n=o.PlutusMap.new();for(let[i,u]of s.entries())n.insert(t(i),t(u));return o.PlutusData.new_map(n)}throw new Error("Unsupported type")}catch(n){throw new Error("Could not serialize the data: "+n)}}let r=e?z(a,e):a;return y(t(r).to_bytes())}function Qt(a,e){function t(s){if(s.kind()===0){let n=s.as_constr_plutus_data(),i=n.data(),u=[];for(let c=0;c<i.len();c++)u.push(t(i.get(c)));return new N(parseInt(n.alternative().to_str()),u)}else if(s.kind()===1){let n=s.as_map(),i=new Map,u=n.keys();for(let c=0;c<u.len();c++)i.set(t(u.get(c)),t(n.get(u.get(c))));return i}else if(s.kind()===2){let n=s.as_list(),i=[];for(let u=0;u<n.len();u++)i.push(t(n.get(u)));return i}else{if(s.kind()===3)return BigInt(s.as_integer().to_str());if(s.kind()===4)return y(s.as_bytes())}throw new Error("Unsupported type")}let r=t(o.PlutusData.from_bytes(d(a)));return e?R(r,e):r}function er(a){function e(t){if(typeof t=="string")return t.startsWith("0x")?y(d(t.slice(2))):St(t);if(typeof t=="number")return BigInt(t);if(typeof t=="bigint")return t;if(t instanceof Array)return t.map(r=>e(r));if(t instanceof Object){let r=new Map;return Object.entries(t).forEach(([s,n])=>{r.set(e(s),e(n))}),r}throw new Error("Unsupported type")}return e(a)}function tr(a){function e(t){if(typeof t=="bigint"||typeof t=="number"||typeof t=="string"&&!isNaN(parseInt(t))&&t.slice(-1)==="n"){let r=typeof t=="string"?BigInt(t.slice(0,-1)):t;return parseInt(r.toString())}if(typeof t=="string")try{return new TextDecoder(void 0,{fatal:!0}).decode(d(t))}catch{return"0x"+y(d(t))}if(t instanceof Array)return t.map(r=>e(r));if(t instanceof Map){let r={};return t.forEach((s,n)=>{let i=e(n);if(typeof i!="string"&&typeof i!="number")throw new Error("Unsupported type (Note: Only bytes or integers can be keys of a JSON object)");r[i]=e(s)}),r}throw new Error("Unsupported type (Note: Constructor cannot be converted to JSON)")}return e(a)}function R(a,e){let t=e;if(!t)throw new Error("Could not type cast data.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof a!="bigint")throw new Error("Could not type cast to integer.");return yt(a,t),a}case"bytes":{if(typeof a!="string")throw new Error("Could not type cast to bytes.");return xt(a,t),a}case"constructor":{if(kt(t)){if(!(a instanceof N)||a.index!==0||a.fields.length!==0)throw new Error("Could not type cast to void.");return}else if(a instanceof N&&a.index===t.index&&(t.hasConstr||t.hasConstr===void 0)){let s={};if(t.fields.length!==a.fields.length)throw new Error("Could not type cast to object. Fields do not match.");return t.fields.forEach((n,i)=>{let u=n.title||"wrapper";if(/[A-Z]/.test(u[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");s[u]=R(a.fields[i],n)}),s}else if(a instanceof Array&&!t.hasConstr&&t.hasConstr!==void 0){let s={};if(t.fields.length!==a.length)throw new Error("Could not ype cast to object. Fields do not match.");return t.fields.forEach((n,i)=>{let u=n.title||"wrapper";if(/[A-Z]/.test(u[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");s[u]=R(a[i],n)}),s}throw new Error("Could not type cast to object.")}case"enum":{if(t.anyOf.length===1)return R(a,t.anyOf[0]);if(!(a instanceof N))throw new Error("Could not type cast to enum.");let s=t.anyOf.find(n=>n.index===a.index);if(!s||s.fields.length!==a.fields.length)throw new Error("Could not type cast to enum.");if(_t(t)){if(a.fields.length!==0)throw new Error("Could not type cast to boolean.");switch(a.index){case 0:return!1;case 1:return!0}throw new Error("Could not type cast to boolean.")}else if(vt(t)){switch(a.index){case 0:{if(a.fields.length!==1)throw new Error("Could not type cast to nullable object.");return R(a.fields[0],t.anyOf[0].fields[0])}case 1:{if(a.fields.length!==0)throw new Error("Could not type cast to nullable object.");return null}}throw new Error("Could not type cast to nullable object.")}switch(s.dataType){case"constructor":if(s.fields.length===0){if(/[A-Z]/.test(s.title[0]))return s.title;throw new Error("Could not type cast to enum.")}else{if(!/[A-Z]/.test(s.title))throw new Error("Could not type cast to enum. Enums need to start with an uppercase letter.");if(s.fields.length!==a.fields.length)throw new Error("Could not type cast to enum.");let n=s.fields[0].title?Object.fromEntries(s.fields.map((i,u)=>[i.title,R(a.fields[u],i)])):s.fields.map((i,u)=>R(a.fields[u],i));return{[s.title]:n}}}throw new Error("Could not type cast to enum.")}case"list":if(t.items instanceof Array){if(a instanceof N&&a.index===0&&t.hasConstr)return a.fields.map((s,n)=>R(s,t.items[n]));if(a instanceof Array&&!t.hasConstr)return a.map((s,n)=>R(s,t.items[n]));throw new Error("Could not type cast to tuple.")}else{if(!(a instanceof Array))throw new Error("Could not type cast to array.");return wt(a,t),a.map(s=>R(s,t.items))}case"map":{if(!(a instanceof Map))throw new Error("Could not type cast to map.");bt(a,t);let s=new Map;for(let[n,i]of a.entries())s.set(R(n,t.keys),R(i,t.values));return s}case void 0:return a}throw new Error("Could not type cast data.")}function z(a,e){let t=e;if(!t)throw new Error("Could not type cast struct.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof a!="bigint")throw new Error("Could not type cast to integer.");return yt(a,t),a}case"bytes":{if(typeof a!="string")throw new Error("Could not type cast to bytes.");return xt(a,t),a}case"constructor":{if(kt(t)){if(a!==void 0)throw new Error("Could not type cast to void.");return new N(0,[])}else if(typeof a!="object"||a===null||t.fields.length!==Object.keys(a).length)throw new Error("Could not type cast to constructor.");let s=t.fields.map(n=>z(a[n.title||"wrapper"],n));return t.hasConstr||t.hasConstr===void 0?new N(t.index,s):s}case"enum":{if(t.anyOf.length===1)return z(a,t.anyOf[0]);if(_t(t)){if(typeof a!="boolean")throw new Error("Could not type cast to boolean.");return new N(a?1:0,[])}else if(vt(t)){if(a===null)return new N(1,[]);{let s=t.anyOf[0].fields;if(s.length!==1)throw new Error("Could not type cast to nullable object.");return new N(0,[z(a,s[0])])}}switch(typeof a){case"string":{if(!/[A-Z]/.test(a[0]))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let s=t.anyOf.findIndex(n=>n.dataType==="constructor"&&n.fields.length===0&&n.title===a);if(s===-1)throw new Error("Could not type cast to enum.");return new N(s,[])}case"object":{if(a===null)throw new Error("Could not type cast to enum.");let s=Object.keys(a)[0];if(!/[A-Z]/.test(s))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let n=t.anyOf.find(u=>u.dataType==="constructor"&&u.title===s);if(!n)throw new Error("Could not type cast to enum.");let i=a[s];return new N(n.index,i instanceof Array?i.map((u,c)=>z(u,n.fields[c])):n.fields.map(u=>{let[c,h]=Object.entries(i).find(([m])=>m===u.title);return z(h,u)}))}}throw new Error("Could not type cast to enum.")}case"list":{if(!(a instanceof Array))throw new Error("Could not type cast to array/tuple.");if(t.items instanceof Array){let s=a.map((n,i)=>z(n,t.items[i]));return t.hasConstr?new N(0,s):s}else return wt(a,t),a.map(s=>z(s,t.items))}case"map":{if(!(a instanceof Map))throw new Error("Could not type cast to map.");bt(a,t);let s=new Map;for(let[n,i]of a.entries())s.set(z(n,t.keys),z(i,t.values));return s}case void 0:return a}throw new Error("Could not type cast struct.")}function yt(a,e){if(e.minimum&&a<BigInt(e.minimum))throw new Error(`Integer ${a} is below the minimum ${e.minimum}.`);if(e.maximum&&a>BigInt(e.maximum))throw new Error(`Integer ${a} is above the maxiumum ${e.maximum}.`);if(e.exclusiveMinimum&&a<=BigInt(e.exclusiveMinimum))throw new Error(`Integer ${a} is below the exclusive minimum ${e.exclusiveMinimum}.`);if(e.exclusiveMaximum&&a>=BigInt(e.exclusiveMaximum))throw new Error(`Integer ${a} is above the exclusive maximum ${e.exclusiveMaximum}.`)}function xt(a,e){if(e.enum&&!e.enum.some(t=>t===a))throw new Error(`None of the keywords match with '${a}'.`);if(e.minLength&&a.length/2<e.minLength)throw new Error(`Bytes need to have a length of at least ${e.minLength} bytes.`);if(e.maxLength&&a.length/2>e.maxLength)throw new Error(`Bytes can have a length of at most ${e.minLength} bytes.`)}function wt(a,e){if(e.minItems&&a.length<e.minItems)throw new Error(`Array needs to contain at least ${e.minItems} items.`);if(e.maxItems&&a.length>e.maxItems)throw new Error(`Array can contain at most ${e.maxItems} items.`);if(e.uniqueItems&&new Set(a).size!==a.length)throw new Error("Array constains duplicates.")}function bt(a,e){if(e.minItems&&a.size<e.minItems)throw new Error(`Map needs to contain at least ${e.minItems} items.`);if(e.maxItems&&a.size>e.maxItems)throw new Error(`Map can contain at most ${e.maxItems} items.`)}function _t(a){return a.anyOf&&a.anyOf[0]?.title==="False"&&a.anyOf[1]?.title==="True"}function kt(a){return a.index===0&&a.fields.length===0}function vt(a){return a.anyOf&&a.anyOf[0]?.title==="Some"&&a.anyOf[1]?.title==="None"}function Ie(a,e){Object.keys(a).forEach(t=>{delete a[t]}),Object.assign(a,e)}var Ue=class{constructor(e){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e}validatorToAddress(e,t){let r=this.validatorToScriptHash(e);return t?o.BaseAddress.new(oe(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(r)),t.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(t.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):o.EnterpriseAddress.new(oe(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(r))).to_address().to_bech32(void 0)}credentialToAddress(e,t){return t?o.BaseAddress.new(oe(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash)),t.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(t.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):o.EnterpriseAddress.new(oe(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToRewardAddress(e){let t=this.validatorToScriptHash(e);return o.RewardAddress.new(oe(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t))).to_address().to_bech32(void 0)}credentialToRewardAddress(e){return o.RewardAddress.new(oe(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToScriptHash(e){switch(e.type){case"Native":return o.NativeScript.from_bytes(d(e.script)).hash(o.ScriptHashNamespace.NativeScript).to_hex();case"PlutusV1":return o.PlutusScript.from_bytes(d(q(e.script))).hash(o.ScriptHashNamespace.PlutusV1).to_hex();case"PlutusV2":return o.PlutusScript.from_bytes(d(q(e.script))).hash(o.ScriptHashNamespace.PlutusV2).to_hex();default:throw new Error("No variant matched")}}mintingPolicyToId(e){return this.validatorToScriptHash(e)}datumToHash(e){return o.hash_plutus_data(o.PlutusData.from_bytes(d(e))).to_hex()}scriptHashToCredential(e){return{type:"Script",hash:e}}keyHashToCredential(e){return{type:"Key",hash:e}}generatePrivateKey(){return sr()}generateSeedPhrase(){return nr()}unixTimeToSlot(e){return gt(e,we[this.lucid.network])}slotToUnixTime(e){return ft(e,we[this.lucid.network])}getAddressDetails(e){return D(e)}nativeScriptFromJson(e){return ur(e)}paymentCredentialOf(e){return ie(e)}stakeCredentialOf(e){return rr(e)}getMinAdaForOutput(e){let t=o.min_ada_required(e,o.BigNum.from_str(this.lucid.protocolParameters.coinsPerUtxoByte.toString()));return BigInt(t.to_str()).valueOf()}};function Ae(a){try{return o.Address.from_bytes(d(a))}catch{try{return o.Address.from_bech32(a)}catch{throw new Error("Could not deserialize address.")}}}function D(a){try{let e=o.BaseAddress.from_address(Ae(a)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())},r=e.stake_cred().kind()===0?{type:"Key",hash:y(e.stake_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.stake_cred().to_scripthash().to_bytes())};return{type:"Base",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},paymentCredential:t,stakeCredential:r}}catch{}try{let e=o.EnterpriseAddress.from_address(Ae(a)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())};return{type:"Enterprise",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},paymentCredential:t}}catch{}try{let e=o.PointerAddress.from_address(Ae(a)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())};return{type:"Pointer",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},paymentCredential:t}}catch{}try{let e=o.RewardAddress.from_address(Ae(a)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())};return{type:"Reward",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},stakeCredential:t}}catch{}try{let e=(t=>{try{return o.ByronAddress.from_bytes(d(t))}catch{try{return o.ByronAddress.from_base58(t)}catch{throw new Error("Could not deserialize address.")}}})(a);return{type:"Byron",networkId:e.network_id(),address:{bech32:"",hex:y(e.to_address().to_bytes())}}}catch{}throw new Error("No address type matched for: "+a)}function ie(a){let{paymentCredential:e}=D(a);if(!e)throw new Error("The specified address does not contain a payment credential.");return e}function rr(a){let{stakeCredential:e}=D(a);if(!e)throw new Error("The specified address does not contain a stake credential.");return e}function sr(){return o.PrivateKey.generate_ed25519().to_bech32()}function nr(){return ut(256)}function Je(a){let e={};e.lovelace=BigInt(a.coin().to_str());let t=a.multiasset();if(t){let r=t.keys();for(let s=0;s<r.len();s++){let n=r.get(s),i=t.get(n),u=i.keys();for(let c=0;c<u.len();c++){let h=u.get(c),m=i.get(h),_=y(n.to_bytes())+y(h.name());e[_]=BigInt(m.to_str())}}}return e}function me(a){let e=o.MultiAsset.new(),t=a.lovelace,r=Object.keys(a);Array.from(new Set(r.filter(i=>i!=="lovelace").map(i=>i.slice(0,56)))).forEach(i=>{let u=r.filter(h=>h.slice(0,56)===i),c=o.Assets.new();u.forEach(h=>{c.insert(o.AssetName.new(d(h.slice(56))),o.BigNum.from_str(a[h].toString()))}),e.insert(o.ScriptHash.from_bytes(d(i)),c)});let n=o.Value.new(o.BigNum.from_str(t?t.toString():"0"));return(r.length>1||!t)&&n.set_multiasset(e),n}function ar(a){switch(a.get().kind()){case 0:return{type:"Native",script:y(a.get().as_native().to_bytes())};case 1:return{type:"PlutusV1",script:y(a.get().as_plutus_v1().to_bytes())};case 2:return{type:"PlutusV2",script:y(a.get().as_plutus_v2().to_bytes())};default:throw new Error("No variant matched.")}}function Xe(a){switch(a.type){case"Native":return o.ScriptRef.new(o.Script.new_native(o.NativeScript.from_bytes(d(a.script))));case"PlutusV1":return o.ScriptRef.new(o.Script.new_plutus_v1(o.PlutusScript.from_bytes(d(q(a.script)))));case"PlutusV2":return o.ScriptRef.new(o.Script.new_plutus_v2(o.PlutusScript.from_bytes(d(q(a.script)))));default:throw new Error("No variant matched.")}}function ue(a){let e=(()=>{try{return o.Address.from_bech32(a.address)}catch{return o.ByronAddress.from_base58(a.address).to_address()}})(),t=o.TransactionOutput.new(e,me(a.assets));return a.datumHash&&t.set_datum(o.Datum.new_data_hash(o.DataHash.from_bytes(d(a.datumHash)))),!a.datumHash&&a.datum&&t.set_datum(o.Datum.new_data(o.Data.new(o.PlutusData.from_bytes(d(a.datum))))),a.scriptRef&&t.set_script_ref(Xe(a.scriptRef)),o.TransactionUnspentOutput.new(o.TransactionInput.new(o.TransactionHash.from_bytes(d(a.txHash)),o.BigNum.from_str(a.outputIndex.toString())),t)}function He(a){let e=a.output()?.datum()?.as_data()?.get(),t=a.output()?.datum()?.as_data_hash()?.to_hex();return{txHash:y(a.input().transaction_id().to_bytes()),outputIndex:parseInt(a.input().index().to_str()),assets:Je(a.output().amount()),address:a.output().address().as_byron()?a.output().address().as_byron()?.to_base58():a.output().address().to_bech32(void 0),datumHash:e?o.hash_plutus_data(e).to_hex():t,datum:e&&y(e.to_bytes()),scriptRef:a.output()?.script_ref()&&ar(a.output().script_ref())}}function oe(a){switch(a){case"Preview":return 0;case"Preprod":return 0;case"Custom":return 0;case"Mainnet":return 1;default:throw new Error("Network not found")}}function d(a){return nt(a)}function y(a){return st(a)}function Dr(a){return new TextDecoder().decode(Ve(new TextEncoder().encode(a)))}function St(a){return y(new TextEncoder().encode(a))}function Mr(a){return o.PrivateKey.from_bech32(a).to_public().to_bech32()}function Ct(a){return pt(d(a)).toString(16).padStart(2,"0")}function or(a){if(a<0||a>65535)throw new Error(`Label ${a} out of range: min label 1 - max label 65535.`);let e=a.toString(16).padStart(4,"0");return"0"+e+Ct(e)+"0"}function ir(a){if(a.length!==8||!(a[0]==="0"&&a[7]==="0"))return null;let e=a.slice(1,5),t=parseInt(e,16);return a.slice(5,7)===Ct(e)?t:null}function It(a,e,t){let r=Number.isInteger(t)?or(t):"",s=e||"";if((s+r).length>64)throw new Error("Asset name size exceeds 32 bytes.");if(a.length!==56)throw new Error(`Policy id invalid: ${a}.`);return a+r+s}function Ee(a){let e=a.slice(0,56),t=a.slice(56)||null,r=ir(a.slice(56,64)),s=(()=>(Number.isInteger(r)?a.slice(64):a.slice(56))||null)();return{policyId:e,assetName:t,name:s,label:r}}function ur(a){return{type:"Native",script:y(o.encode_json_str_to_native_script(JSON.stringify(a),"",o.ScriptSchema.Node).to_bytes())}}function Rr(a,e,t){let r=t?te.castTo(e,t):e;return y(o.apply_params_to_plutus_script(o.PlutusList.from_bytes(d(te.to(r))),o.PlutusScript.from_bytes(d(q(a)))).to_bytes())}var Et=(a,e)=>{let t=[],r=a.length,s=0;for(;s<r;)t.push(a.slice(s,s+=e));return t};function q(a){try{return o.PlutusScript.from_bytes(o.PlutusScript.from_bytes(d(a)).bytes()),a}catch{return y(o.PlutusScript.new(d(a)).to_bytes())}}function $r(...a){return a.reduce((e,t)=>{for(let r in t)Object.hasOwn(t,r)&&(e[r]=(e[r]||0n)+t[r]);return e},{})}function cr(a,e){if(a.length!==e.length)return!1;for(let t=0;t<e.length;t++)if(a[t]!==e[t])return!1;return!0}function lr(a,e){if(a.length!==e.length)return!1;let t=a.length,r=Math.floor(t/4),s=new Uint32Array(a.buffer,0,r),n=new Uint32Array(e.buffer,0,r);for(let i=r*4;i<t;i++)if(a[i]!==e[i])return!1;for(let i=0;i<s.length;i++)if(s[i]!==n[i])return!1;return!0}function Ne(a,e){return a.length<1e3?cr(a,e):lr(a,e)}function Bt(...a){let e=0;for(let s of a)e+=s.length;let t=new Uint8Array(e),r=0;for(let s of a)t.set(s,r),r+=s.length;return t}var De=class{constructor(e){Object.defineProperty(this,"root",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.root=De.buildRecursively(e.map(t=>je(t)))}static fromHashes(e){return new this(e)}static buildRecursively(e){if(e.length<=0)return null;if(e.length===1)return{node:e[0],left:null,right:null};let t=Math.floor(e.length/2),[r,s]=[e.slice(0,t),e.slice(t)],n=this.buildRecursively(r),i=this.buildRecursively(s);return n===null||i===null?null:{node:Ye(n.node,i.node),left:n,right:i}}rootHash(){if(this.root===null)throw new Error("Merkle tree root hash not found.");return this.root.node}getProof(e){let t=je(e),r=[],s=n=>{if(n&&Ne(n.node,t))return!0;if(n?.right&&s(n.left))return r.push({right:n.right.node}),!0;if(n?.left&&s(n.right))return r.push({left:n.left.node}),!0};return s(this.root),r}size(){let e=t=>t===null?0:1+e(t.left)+e(t.right);return e(this.root)}static verify(e,t,r){let s=je(e),n=(i,u)=>{if(u.length<=0)return Ne(t,i);let[c,h]=[u[0],u.slice(1)];return c.left?n(Ye(c.left,i),h):c.right?n(Ye(i,c.right),h):!1};return n(s,r)}toString(){let e=t=>t===null?null:{node:y(t.node),left:e(t.left),right:e(t.right)};return JSON.stringify(e(this.root),null,2)}};function je(a){return new Uint8Array(new xe().update(a).arrayBuffer())}function Ye(a,e){return je(Bt(a,e))}var Tt={enableChangeSplitting:!0,changeCollateral:"5000000",changeMinUtxo:"100000000",changeNativeAssetChunkSize:20};var Me=class{constructor(e,t){Object.defineProperty(this,"txSigned",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txSigned=t}async submit(){return await(this.lucid.wallet||this.lucid.provider).submitTx(y(this.txSigned.to_bytes()))}toString(){return y(this.txSigned.to_bytes())}toHash(){return o.hash_transaction(this.txSigned.body()).to_hex()}};var be=class{constructor(e,t){Object.defineProperty(this,"txComplete",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"witnessSetBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fee",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exUnits",{enumerable:!0,configurable:!0,writable:!0,value:null}),this.lucid=e,this.txComplete=t,this.witnessSetBuilder=o.TransactionWitnessSetBuilder.new(),this.tasks=[],this.fee=parseInt(t.body().fee().to_str());let r=t.witness_set().redeemers();if(r){let s={cpu:0,mem:0};for(let n=0;n<r.len();n++){let i=r.get(n);s.cpu+=parseInt(i.ex_units().steps().to_str()),s.mem+=parseInt(i.ex_units().mem().to_str())}this.exUnits=s}}sign(){return this.tasks.push(async()=>{let e=await this.lucid.wallet.signTx(this.txComplete);this.witnessSetBuilder.add_existing(e)}),this}signWithPrivateKey(e){let t=o.PrivateKey.from_bech32(e),r=o.make_vkey_witness(o.hash_transaction(this.txComplete.body()),t);return this.witnessSetBuilder.add_vkey(r),this}async partialSign(){let e=await this.lucid.wallet.signTx(this.txComplete);return this.witnessSetBuilder.add_existing(e),y(e.to_bytes())}partialSignWithPrivateKey(e){let t=o.PrivateKey.from_bech32(e),r=o.make_vkey_witness(o.hash_transaction(this.txComplete.body()),t);this.witnessSetBuilder.add_vkey(r);let s=o.TransactionWitnessSetBuilder.new();return s.add_vkey(r),y(s.build().to_bytes())}assemble(e){return e.forEach(t=>{let r=o.TransactionWitnessSet.from_bytes(d(t));this.witnessSetBuilder.add_existing(r)}),this}async complete(){for(let t of this.tasks)await t();this.witnessSetBuilder.add_existing(this.txComplete.witness_set());let e=o.Transaction.new(this.txComplete.body(),this.witnessSetBuilder.build(),this.txComplete.auxiliary_data());return new Me(this.lucid,e)}toString(){return y(this.txComplete.to_bytes())}toHash(){return o.hash_transaction(this.txComplete.body()).to_hex()}};var $e=class{constructor(e){Object.defineProperty(this,"txBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"configuration",{enumerable:!0,configurable:!0,writable:!0,value:Tt}),this.lucid=e,this.txBuilder=o.TransactionBuilder.new(this.lucid.txBuilderConfig),this.tasks=[]}readFrom(e){return this.tasks.push(async t=>{for(let r of e){if(r.datumHash){r.datum=te.to(await t.lucid.datumOf(r));let n=o.PlutusData.from_bytes(d(r.datum));t.txBuilder.add_plutus_data(n)}let s=ue(r);t.txBuilder.add_reference_input(s)}}),this}config(e){return this.configuration={...this.configuration,...e},this}collectFrom(e,t){return this.tasks.push(async r=>{for(let s of e){s.datumHash&&!s.datum&&(s.datum=te.to(await r.lucid.datumOf(s)));let n=ue(s);r.txBuilder.add_input(n,t&&o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),s.datumHash&&s.datum?o.PlutusData.from_bytes(d(s.datum)):void 0,void 0)))}}),this}mintAssets(e,t){return this.tasks.push(r=>{let s=Object.keys(e),n=s[0].slice(0,56),i=o.MintAssets.new();s.forEach(c=>{if(c.slice(0,56)!==n)throw new Error("Only one policy id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different policy ids.");i.insert(o.AssetName.new(d(c.slice(56))),o.Int.from_str(e[c].toString()))});let u=o.ScriptHash.from_bytes(d(n));r.txBuilder.add_mint(u,i,t?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),void 0,void 0)):void 0)}),this}payToAddress(e,t){return this.tasks.push(r=>{let s=o.TransactionOutput.new(_e(e,r.lucid),me(t)),n=r.lucid.utils.getMinAdaForOutput(s);t.lovelace=t.lovelace>n?t.lovelace:n,s=o.TransactionOutput.new(_e(e,r.lucid),me(t)),r.txBuilder.add_output(s)}),this}payToAddressWithData(e,t,r){return this.tasks.push(s=>{if(typeof t=="string"&&(t={asHash:t}),[t.hash,t.asHash,t.inline].filter(c=>c).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let n=(c,h)=>{let m=o.TransactionOutput.new(_e(e,s.lucid),me(c));if(h.hash)m.set_datum(o.Datum.new_data_hash(o.DataHash.from_hex(h.hash)));else if(h.asHash){let B=o.PlutusData.from_bytes(d(h.asHash));m.set_datum(o.Datum.new_data_hash(o.hash_plutus_data(B))),s.txBuilder.add_plutus_data(B)}else if(h.inline){let B=o.PlutusData.from_bytes(d(h.inline));m.set_datum(o.Datum.new_data(o.Data.new(B)))}let _=h.scriptRef;return _&&m.set_script_ref(Xe(_)),m},i=n(r,t),u=this.lucid.utils.getMinAdaForOutput(i);r.lovelace=r.lovelace>u?r.lovelace:u,i=n(r,t),s.txBuilder.add_output(i)}),this}payToContract(e,t,r){if(typeof t=="string"&&(t={asHash:t}),!(t.hash||t.asHash||t.inline))throw new Error("No datum set. Script output becomes unspendable without datum.");return this.payToAddressWithData(e,t,r)}delegateTo(e,t,r){return this.tasks.push(s=>{let n=s.lucid.utils.getAddressDetails(e);if(n.type!=="Reward"||!n.stakeCredential)throw new Error("Not a reward address provided.");let i=n.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(n.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(n.stakeCredential.hash)));s.txBuilder.add_certificate(o.Certificate.new_stake_delegation(o.StakeDelegation.new(i,o.Ed25519KeyHash.from_bech32(t))),r?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(r)),void 0,void 0)):void 0)}),this}registerStake(e){return this.tasks.push(t=>{let r=t.lucid.utils.getAddressDetails(e);if(r.type!=="Reward"||!r.stakeCredential)throw new Error("Not a reward address provided.");let s=r.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(r.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(r.stakeCredential.hash)));t.txBuilder.add_certificate(o.Certificate.new_stake_registration(o.StakeRegistration.new(s)),void 0)}),this}deregisterStake(e,t){return this.tasks.push(r=>{let s=r.lucid.utils.getAddressDetails(e);if(s.type!=="Reward"||!s.stakeCredential)throw new Error("Not a reward address provided.");let n=s.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(s.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(s.stakeCredential.hash)));r.txBuilder.add_certificate(o.Certificate.new_stake_deregistration(o.StakeDeregistration.new(n)),t?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),void 0,void 0)):void 0)}),this}registerPool(e){return this.tasks.push(async t=>{let r=await Pt(e,t.lucid),s=o.Certificate.new_pool_registration(r);t.txBuilder.add_certificate(s,void 0)}),this}updatePool(e){return this.tasks.push(async t=>{let r=await Pt(e,t.lucid);r.set_is_update(!0);let s=o.Certificate.new_pool_registration(r);t.txBuilder.add_certificate(s,void 0)}),this}retirePool(e,t){return this.tasks.push(r=>{let s=o.Certificate.new_pool_retirement(o.PoolRetirement.new(o.Ed25519KeyHash.from_bech32(e),t));r.txBuilder.add_certificate(s,void 0)}),this}withdraw(e,t,r){return this.tasks.push(s=>{s.txBuilder.add_withdrawal(o.RewardAddress.from_address(_e(e,s.lucid)),o.BigNum.from_str(t.toString()),r?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(r)),void 0,void 0)):void 0)}),this}addSigner(e){let t=this.lucid.utils.getAddressDetails(e);if(!t.paymentCredential&&!t.stakeCredential)throw new Error("Not a valid address.");let r=t.type==="Reward"?t.stakeCredential:t.paymentCredential;if(r.type==="Script")throw new Error("Only key hashes are allowed as signers.");return this.addSignerKey(r.hash)}addSignerKey(e){return this.tasks.push(t=>{t.txBuilder.add_required_signer(o.Ed25519KeyHash.from_bytes(d(e)))}),this}validFrom(e){return this.tasks.push(t=>{let r=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_validity_start_interval(o.BigNum.from_str(r.toString()))}),this}validTo(e){return this.tasks.push(t=>{let r=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_ttl(o.BigNum.from_str(r.toString()))}),this}attachMetadata(e,t){return this.tasks.push(r=>{r.txBuilder.add_json_metadatum(o.BigNum.from_str(e.toString()),JSON.stringify(t))}),this}attachMetadataWithConversion(e,t){return this.tasks.push(r=>{r.txBuilder.add_json_metadatum_with_schema(o.BigNum.from_str(e.toString()),JSON.stringify(t),o.MetadataJsonSchema.BasicConversions)}),this}addNetworkId(e){return this.tasks.push(t=>{t.txBuilder.set_network_id(o.NetworkId.from_bytes(d(e.toString(16).padStart(2,"0"))))}),this}attachSpendingValidator(e){return this.tasks.push(t=>{Re(t,e)}),this}attachMintingPolicy(e){return this.tasks.push(t=>{Re(t,e)}),this}attachCertificateValidator(e){return this.tasks.push(t=>{Re(t,e)}),this}attachWithdrawalValidator(e){return this.tasks.push(t=>{Re(t,e)}),this}applyIf(e,t){return e&&this.tasks.push(r=>t(r)),this}apply(e){return this.tasks.push(t=>e(t)),this}compose(e){return e&&(this.tasks=this.tasks.concat(e.tasks)),this}async complete(e){let{enableChangeSplitting:t}=this.configuration;if([e?.change?.outputData?.hash,e?.change?.outputData?.asHash,e?.change?.outputData?.inline].filter(u=>u).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let r=this.tasks.shift();for(;r;)await r(this),r=this.tasks.shift();let s=await this.lucid.wallet.getUtxosCore(),n=await this.lucid.wallet.getCollateralCore(),i=_e(e?.change?.address||await this.lucid.wallet.address(),this.lucid);return(e?.coinSelection||e?.coinSelection===void 0)&&this.txBuilder.add_inputs_from(s,i,Uint32Array.from([200,1e3,1500,800,800,5e3])),t&&await this.splitChange(),this.txBuilder.balance(i,(()=>e?.change?.outputData?.hash?o.Datum.new_data_hash(o.DataHash.from_hex(e.change.outputData.hash)):e?.change?.outputData?.asHash?(this.txBuilder.add_plutus_data(o.PlutusData.from_bytes(d(e.change.outputData.asHash))),o.Datum.new_data_hash(o.hash_plutus_data(o.PlutusData.from_bytes(d(e.change.outputData.asHash))))):e?.change?.outputData?.inline?o.Datum.new_data(o.Data.new(o.PlutusData.from_bytes(d(e.change.outputData.inline)))):void 0)()),new be(this.lucid,await this.txBuilder.construct(n||s,i,e?.nativeUplc===void 0?!0:e?.nativeUplc))}async toString(){let e=this.tasks.shift();for(;e;)await e(this),e=this.tasks.shift();return y(this.txBuilder.to_bytes())}async splitChange(){let{coinsPerUtxoByte:e}=await this.lucid.protocolParameters,{changeNativeAssetChunkSize:t,changeMinUtxo:r}=this.configuration,s=this.txBuilder.mint()?.as_positive_multiasset(),n=s&&o.Value.new_from_assets(s),i=this.txBuilder.mint()?.as_negative_multiasset(),u=i&&o.Value.new_from_assets(i),c=this.txBuilder.get_explicit_input().checked_sub(this.txBuilder.get_explicit_output());n&&(c=c.checked_add(n)),u&&(c=c.checked_sub(u));let h=c.coin(),m=Je(c),_=Object.keys(m).filter(S=>S!=="lovelace").sort((S,T)=>S.localeCompare(T));m=_.reduce((S,T)=>Object.assign(S,{[T]:m[T]}),{});let B=Math.ceil(_.length/t),p=o.Address.from_bech32(await this.lucid.wallet.address()),E=this.txBuilder.outputs();for(let S=0;S<E.len();S++){let T=E.get(S);(!p||T.address().to_bech32(void 0).length>p.to_bech32(void 0).length)&&(p=T.address())}let w=o.min_ada_required(o.TransactionOutput.new(p,me(m)),o.BigNum.from_str(e.toString())).checked_mul(o.BigNum.from_str(B.toString())).compare(h)<0;if(c.multiasset()&&w){let S=Et(_,20),T=S.length;for(let[M,O]of S.entries()){if(M===T-1)continue;let ee=me(O.reduce((Te,Se)=>Object.assign(Te,{[Se]:m[Se]}),{})),ve=o.min_ada_required(o.TransactionOutput.new(o.Address.from_bech32(await this.lucid.wallet.address()),ee),o.BigNum.from_str(e.toString()));ee.set_coin(ve),h=h.checked_sub(ve),this.txBuilder.add_output(o.TransactionOutput.new(o.Address.from_bech32(await this.lucid.wallet.address()),ee))}}for(;h.checked_div(o.BigNum.from_str("2")).compare(o.BigNum.from_str(r))>=0;){let S=h.checked_div(o.BigNum.from_str("2"));h=h.checked_sub(S),this.txBuilder.add_output(o.TransactionOutput.new(o.Address.from_bech32(await this.lucid.wallet.address()),o.Value.new(S)))}}};function Re(a,{type:e,script:t}){if(e==="Native")return a.txBuilder.add_native_script(o.NativeScript.from_bytes(d(t)));if(e==="PlutusV1")return a.txBuilder.add_plutus_script(o.PlutusScript.from_bytes(d(q(t))));if(e==="PlutusV2")return a.txBuilder.add_plutus_v2_script(o.PlutusScript.from_bytes(d(q(t))));throw new Error("No variant matched.")}async function Pt(a,e){let t=o.Ed25519KeyHashes.new();a.owners.forEach(i=>{let{stakeCredential:u}=e.utils.getAddressDetails(i);if(u?.type==="Key")t.add(o.Ed25519KeyHash.from_hex(u.hash));else throw new Error("Only key hashes allowed for pool owners.")});let r=a.metadataUrl?await fetch(a.metadataUrl).then(i=>i.arrayBuffer()):null,s=r?o.PoolMetadataHash.from_bytes(o.hash_blake2b256(new Uint8Array(r))):null,n=o.Relays.new();return a.relays.forEach(i=>{switch(i.type){case"SingleHostIp":{let u=i.ipV4?o.Ipv4.new(new Uint8Array(i.ipV4.split(".").map(h=>parseInt(h)))):void 0,c=i.ipV6?o.Ipv6.new(d(i.ipV6.replaceAll(":",""))):void 0;n.add(o.Relay.new_single_host_addr(o.SingleHostAddr.new(i.port,u,c)));break}case"SingleHostDomainName":{n.add(o.Relay.new_single_host_name(o.SingleHostName.new(i.port,o.DNSRecordAorAAAA.new(i.domainName))));break}case"MultiHost":{n.add(o.Relay.new_multi_host_name(o.MultiHostName.new(o.DNSRecordSRV.new(i.domainName))));break}}}),o.PoolRegistration.new(o.PoolParams.new(o.Ed25519KeyHash.from_bech32(a.poolId),o.VRFKeyHash.from_hex(a.vrfKeyHash),o.BigNum.from_str(a.pledge.toString()),o.BigNum.from_str(a.cost.toString()),o.UnitInterval.from_float(a.margin),o.RewardAddress.from_address(_e(a.rewardAddress,e)),t,n,s?o.PoolMetadata.new(o.Url.new(a.metadataUrl),s):void 0))}function _e(a,e){let{type:t,networkId:r}=e.utils.getAddressDetails(a),s=oe(e.network);if(r!==s)throw new Error(`Invalid address: Expected address with network id ${s}, but got ${r}`);return t==="Byron"?o.ByronAddress.from_base58(a).to_address():o.Address.from_bech32(a)}function Ot(a,e={addressType:"Base",accountIndex:0,network:"Mainnet"}){function t(p){if(typeof p!="number")throw new Error("Type number required here!");return 2147483648+p}let r=it(a),n=o.Bip32PrivateKey.from_bip39_entropy(d(r),e.password?new TextEncoder().encode(e.password):new Uint8Array).derive(t(1852)).derive(t(1815)).derive(t(e.accountIndex)),i=n.derive(0).derive(0).to_raw_key(),u=n.derive(2).derive(0).to_raw_key(),c=i.to_public().hash(),h=u.to_public().hash(),m=e.network==="Mainnet"?1:0,_=e.addressType==="Base"?o.BaseAddress.new(m,o.StakeCredential.from_keyhash(c),o.StakeCredential.from_keyhash(h)).to_address().to_bech32(void 0):o.EnterpriseAddress.new(m,o.StakeCredential.from_keyhash(c)).to_address().to_bech32(void 0),B=e.addressType==="Base"?o.RewardAddress.new(m,o.StakeCredential.from_keyhash(h)).to_address().to_bech32(void 0):null;return{address:_,rewardAddress:B,paymentKey:i.to_bech32(),stakeKey:e.addressType==="Base"?u.to_bech32():null}}function At(a,e,t){let r=[],s=a.body().inputs();for(let p=0;p<s.len();p++){let E=s.get(p),I=y(E.transaction_id().to_bytes()),w=parseInt(E.index().to_str()),S=t.find(T=>T.txHash===I&&T.outputIndex===w);if(S){let{paymentCredential:T}=D(S.address);r.push(T?.hash)}}let n=a.body();function i(p){let E=p.certs();if(E)for(let I=0;I<E.len();I++){let w=E.get(I);if(w.kind()===0)w.as_stake_registration()?.stake_credential()?.kind();else if(w.kind()===1){let S=w.as_stake_deregistration()?.stake_credential();if(S?.kind()===0){let T=y(S.to_keyhash().to_bytes());r.push(T)}}else if(w.kind()===2){let S=w.as_stake_delegation()?.stake_credential();if(S?.kind()===0){let T=y(S.to_keyhash().to_bytes());r.push(T)}}else if(w.kind()===3){let S=w.as_pool_registration()?.pool_params(),T=S?.pool_owners();if(!T)break;for(let O=0;O<T.len();O++){let ke=y(T.get(O).to_bytes());r.push(ke)}let M=S.operator().to_hex();r.push(M)}else if(w.kind()===4){let S=w.as_pool_retirement().pool_keyhash().to_hex();r.push(S)}else if(w.kind()===6){let S=w.as_move_instantaneous_rewards_cert()?.move_instantaneous_reward().as_to_stake_creds()?.keys();if(!S)break;for(let T=0;T<S.len();T++){let M=S.get(T);if(M.kind()===0){let O=y(M.to_keyhash().to_bytes());r.push(O)}}}}}n.certs()&&i(n);let u=n.withdrawals();function c(p){let E=p.keys();for(let I=0;I<E.len();I++){let w=E.get(I).payment_cred();w.kind()===0&&r.push(w.to_keyhash().to_hex())}}u&&c(u);let h=a.witness_set().native_scripts();function m(p){for(let E=0;E<p.len();E++){let I=p.get(E);if(I.kind()===0){let w=y(I.as_script_pubkey().addr_keyhash().to_bytes());r.push(w)}if(I.kind()===1){m(I.as_script_all().native_scripts());return}if(I.kind()===2){m(I.as_script_any().native_scripts());return}if(I.kind()===3){m(I.as_script_n_of_k().native_scripts());return}}}h&&m(h);let _=n.required_signers();if(_)for(let p=0;p<_.len();p++)r.push(y(_.get(p).to_bytes()));let B=n.collateral();if(B)for(let p=0;p<B.len();p++){let E=B.get(p),I=y(E.transaction_id().to_bytes()),w=parseInt(E.index().to_str()),S=t.find(T=>T.txHash===I&&T.outputIndex===w);if(S){let{paymentCredential:T}=D(S.address);r.push(T?.hash)}}return r.filter(p=>e.includes(p))}function Be(a,e,t){let r=P.HeaderMap.new();r.set_algorithm_id(P.Label.from_algorithm_id(P.AlgorithmId.EdDSA)),r.set_header(P.Label.new_text("address"),P.CBORValue.new_bytes(d(a)));let s=P.ProtectedHeaderMap.new(r),n=P.HeaderMap.new(),i=P.Headers.new(s,n),u=P.COSESign1Builder.new(i,d(e),!1),c=u.make_data_to_sign().to_bytes(),h=o.PrivateKey.from_bech32(t),m=h.sign(c).to_bytes(),_=u.build(m),B=P.COSEKey.new(P.Label.from_key_type(P.KeyType.OKP));return B.set_algorithm_id(P.Label.from_algorithm_id(P.AlgorithmId.EdDSA)),B.set_header(P.Label.new_int(P.Int.new_negative(P.BigNum.from_str("1"))),P.CBORValue.new_int(P.Int.new_i32(6))),B.set_header(P.Label.new_int(P.Int.new_negative(P.BigNum.from_str("2"))),P.CBORValue.new_bytes(h.to_public().as_bytes())),{signature:y(_.to_bytes()),key:y(B.to_bytes())}}function Ut(a,e,t,r){let s=P.COSESign1.from_bytes(d(r.signature)),n=P.COSEKey.from_bytes(d(r.key)),i=s.headers().protected().deserialized_headers(),u=(()=>{try{return y(i.header(P.Label.new_text("address"))?.as_bytes())}catch{throw new Error("No address found in signature.")}})(),c=(()=>{try{let w=i.algorithm_id()?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),h=(()=>{try{let w=n.algorithm_id()?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),m=(()=>{try{let w=n.header(P.Label.new_int(P.Int.new_negative(P.BigNum.from_str("1"))))?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Curve.")}})(),_=(()=>{try{let w=n.key_type().as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Key Type.")}})(),B=(()=>{try{return o.PublicKey.from_bytes(n.header(P.Label.new_int(P.Int.new_negative(P.BigNum.from_str("2"))))?.as_bytes())}catch{throw new Error("No public key found.")}})(),p=(()=>{try{return y(s.payload())}catch{throw new Error("No payload found.")}})(),E=o.Ed25519Signature.from_bytes(s.signature()),I=s.signed_data(void 0,void 0).to_bytes();return u!==a||e!==B.hash().to_hex()||c!==h&&c!==P.AlgorithmId.EdDSA||m!==6||_!==1||p!==t?!1:B.verify(I,E)}var qe=class{constructor(e,t,r){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"payload",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.address=t,this.payload=r}sign(){return this.lucid.wallet.signMessage(this.address,this.payload)}signWithPrivateKey(e){let{paymentCredential:t,stakeCredential:r,address:{hex:s}}=this.lucid.utils.getAddressDetails(this.address),n=t?.hash||r?.hash,i=o.PrivateKey.from_bech32(e).to_public().hash().to_hex();if(!n||n!==i)throw new Error(`Cannot sign message for address: ${this.address}.`);return Be(s,this.payload,e)}};var Ke=class{constructor(e,t=tt){Object.defineProperty(this,"ledger",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"mempool",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"chain",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"blockHeight",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"slot",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"time",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"datumTable",{enumerable:!0,configurable:!0,writable:!0,value:{}});let r="00".repeat(32);this.blockHeight=0,this.slot=0,this.time=Date.now(),this.ledger={},e.forEach(({address:s,assets:n,outputData:i},u)=>{if([i?.hash,i?.asHash,i?.inline].filter(c=>c).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");this.ledger[r+u]={utxo:{txHash:r,outputIndex:u,address:s,assets:n,datumHash:i?.asHash?o.hash_plutus_data(o.PlutusData.from_bytes(d(i.asHash))).to_hex():i?.hash,datum:i?.inline,scriptRef:i?.scriptRef},spent:!1}}),this.protocolParameters=t}now(){return this.time}awaitSlot(e=1){this.slot+=e,this.time+=e*1e3;let t=this.blockHeight;if(this.blockHeight=Math.floor(this.slot/20),this.blockHeight>t){for(let[r,{utxo:s,spent:n}]of Object.entries(this.mempool))this.ledger[r]={utxo:s,spent:n};for(let[r,{spent:s}]of Object.entries(this.ledger))s&&delete this.ledger[r];this.mempool={}}}awaitBlock(e=1){this.blockHeight+=e,this.slot+=e*20,this.time+=e*20*1e3;for(let[t,{utxo:r,spent:s}]of Object.entries(this.mempool))this.ledger[t]={utxo:r,spent:s};for(let[t,{spent:r}]of Object.entries(this.ledger))r&&delete this.ledger[t];this.mempool={}}getUtxos(e){let t=Object.values(this.ledger).flatMap(({utxo:r})=>{if(typeof e=="string")return e===r.address?r:[];{let{paymentCredential:s}=D(r.address);return s?.hash===e.hash?r:[]}});return Promise.resolve(t)}getProtocolParameters(){return Promise.resolve(this.protocolParameters)}getDatum(e){return Promise.resolve(this.datumTable[e])}getUtxosWithUnit(e,t){let r=Object.values(this.ledger).flatMap(({utxo:s})=>{if(typeof e=="string")return e===s.address&&s.assets[t]>0n?s:[];{let{paymentCredential:n}=D(s.address);return n?.hash===e.hash&&s.assets[t]>0n?s:[]}});return Promise.resolve(r)}getUtxosByOutRef(e){return Promise.resolve(e.flatMap(t=>this.ledger[t.txHash+t.outputIndex]?.utxo||[]))}getUtxoByUnit(e){let t=Object.values(this.ledger).flatMap(({utxo:r})=>r.assets[e]>0n?r:[]);if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return Promise.resolve(t[0])}getDelegation(e){return Promise.resolve({poolId:this.chain[e]?.delegation?.poolId||null,rewards:this.chain[e]?.delegation?.rewards||0n})}awaitTx(e){return this.mempool[e+0]&&this.awaitBlock(),Promise.resolve(!0)}distributeRewards(e){for(let[t,{registeredStake:r,delegation:s}]of Object.entries(this.chain))r&&s.poolId&&(this.chain[t]={registeredStake:r,delegation:{poolId:s.poolId,rewards:s.rewards+=e}});this.awaitBlock()}submitTx(e){let t=o.Transaction.from_bytes(d(e)),r=t.body(),s=t.witness_set(),n=s.plutus_data(),i=o.hash_transaction(r).to_hex(),u=r.validity_start_interval()?parseInt(r.validity_start_interval().to_str()):null,c=r.ttl()?parseInt(r.ttl().to_str()):null;if(Number.isInteger(u)&&this.slot<u)throw new Error(`Lower bound (${u}) not in slot range (${this.slot}).`);if(Number.isInteger(c)&&this.slot>c)throw new Error(`Upper bound (${c}) not in slot range (${this.slot}).`);let h=(()=>{let l={};for(let f=0;f<(n?.len()||0);f++){let k=n.get(f),b=o.hash_plutus_data(k).to_hex();l[b]=y(k.to_bytes())}return l})(),m=new Set,_=(()=>{let l=[];for(let f=0;f<(s.vkeys()?.len()||0);f++){let k=s.vkeys().get(f),b=k.vkey().public_key(),A=b.hash().to_hex();if(!b.verify(d(i),k.signature()))throw new Error(`Invalid vkey witness. Key hash: ${A}`);l.push(A)}return l})(),B=o.Ed25519KeyHashes.new();_.forEach(l=>B.add(o.Ed25519KeyHash.from_hex(l)));let p=(()=>{let l=[];for(let f=0;f<(s.native_scripts()?.len()||0);f++){let k=s.native_scripts().get(f),b=k.hash(o.ScriptHashNamespace.NativeScript).to_hex();if(!k.verify(Number.isInteger(u)?o.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?o.BigNum.from_str(c.toString()):void 0,B))throw new Error(`Invalid native script witness. Script hash: ${b}`);for(let A=0;A<k.get_required_signers().len();A++){let $=k.get_required_signers().get(A).to_hex();m.add($)}l.push(b)}return l})(),E={},I=[],w=(()=>{let l=[];for(let f=0;f<(s.plutus_scripts()?.len()||0);f++){let b=s.plutus_scripts().get(f).hash(o.ScriptHashNamespace.PlutusV1).to_hex();l.push(b)}for(let f=0;f<(s.plutus_v2_scripts()?.len()||0);f++){let b=s.plutus_v2_scripts().get(f).hash(o.ScriptHashNamespace.PlutusV2).to_hex();l.push(b)}return l})(),S=r.inputs();S.sort();let T=[];for(let l=0;l<S.len();l++){let f=S.get(l),k=f.transaction_id().to_hex()+f.index().to_str(),b=this.ledger[k],{entry:A,type:$}=b?{entry:b,type:"Ledger"}:{entry:this.mempool[k],type:"Mempool"};if(!A||A.spent)throw new Error(`Could not spend UTxO: ${JSON.stringify({txHash:A?.utxo.txHash,outputIndex:A?.utxo.outputIndex})}
It does not exist or was already spent.`);let re=A.utxo.scriptRef;if(re)switch(re.type){case"Native":{let pe=o.NativeScript.from_bytes(d(re.script));E[pe.hash(o.ScriptHashNamespace.NativeScript).to_hex()]=pe;break}case"PlutusV1":{let pe=o.PlutusScript.from_bytes(d(re.script));I.push(pe.hash(o.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{let pe=o.PlutusScript.from_bytes(d(re.script));I.push(pe.hash(o.ScriptHashNamespace.PlutusV2).to_hex());break}}A.utxo.datumHash&&m.add(A.utxo.datumHash),T.push({entry:A,type:$})}for(let l=0;l<(r.reference_inputs()?.len()||0);l++){let f=r.reference_inputs().get(l),k=f.transaction_id().to_hex()+f.index().to_str(),b=this.ledger[k]||this.mempool[k];if(!b||b.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:b?.utxo.txHash,outputIndex:b?.utxo.outputIndex})}
It does not exist or was already spent.`);let A=b.utxo.scriptRef;if(A)switch(A.type){case"Native":{let $=o.NativeScript.from_bytes(d(A.script));E[$.hash(o.ScriptHashNamespace.NativeScript).to_hex()]=$;break}case"PlutusV1":{let $=o.PlutusScript.from_bytes(d(A.script));I.push($.hash(o.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{let $=o.PlutusScript.from_bytes(d(A.script));I.push($.hash(o.ScriptHashNamespace.PlutusV2).to_hex());break}}b.utxo.datumHash&&m.add(b.utxo.datumHash)}let M=(()=>{let l={0:"Spend",1:"Mint",2:"Cert",3:"Reward"},f=[];for(let k=0;k<(s.redeemers()?.len()||0);k++){let b=s.redeemers().get(k);f.push({tag:l[b.tag().kind()],index:parseInt(b.index().to_str())})}return f})();function O(l,f,k){switch(l.type){case"Key":{if(!_.includes(l.hash))throw new Error(`Missing vkey witness. Key hash: ${l.hash}`);m.add(l.hash);break}case"Script":{if(p.includes(l.hash)){m.add(l.hash);break}else if(E[l.hash]){if(!E[l.hash].verify(Number.isInteger(u)?o.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?o.BigNum.from_str(c.toString()):void 0,B))throw new Error(`Invalid native script witness. Script hash: ${l.hash}`);break}else if((w.includes(l.hash)||I.includes(l.hash))&&M.find(b=>b.tag===f&&b.index===k)){m.add(l.hash);break}throw new Error(`Missing script witness. Script hash: ${l.hash}`)}}}for(let l=0;l<(r.collateral()?.len()||0);l++){let f=r.collateral().get(l),k=f.transaction_id().to_hex()+f.index().to_str(),b=this.ledger[k]||this.mempool[k];if(!b||b.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:b?.utxo.txHash,outputIndex:b?.utxo.outputIndex})}
It does not exist or was already spent.`);let{paymentCredential:A}=D(b.utxo.address);if(A?.type==="Script")throw new Error("Collateral inputs can only contain vkeys.");O(A,null,null)}for(let l=0;l<(r.required_signers()?.len()||0);l++){let f=r.required_signers().get(l);O({type:"Key",hash:f.to_hex()},null,null)}for(let l=0;l<(r.mint()?.keys().len()||0);l++){let f=r.mint().keys().get(l).to_hex();O({type:"Script",hash:f},"Mint",l)}let ke=[];for(let l=0;l<(r.withdrawals()?.keys().len()||0);l++){let f=r.withdrawals().keys().get(l),k=BigInt(r.withdrawals().get(f).to_str()),b=f.to_address().to_bech32(void 0),{stakeCredential:A}=D(b);if(O(A,"Reward",l),this.chain[b]?.delegation.rewards!==k)throw new Error("Withdrawal amount doesn't match actual reward balance.");ke.push({rewardAddress:b,withdrawal:k})}let ee=[];for(let l=0;l<(r.certs()?.len()||0);l++){let f=r.certs().get(l);switch(f.kind()){case 0:{let k=f.as_stake_registration(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),k.stake_credential()).to_address().to_bech32(void 0);if(this.chain[b]?.registeredStake)throw new Error(`Stake key is already registered. Reward address: ${b}`);ee.push({type:"Registration",rewardAddress:b});break}case 1:{let k=f.as_stake_deregistration(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),k.stake_credential()).to_address().to_bech32(void 0),{stakeCredential:A}=D(b);if(O(A,"Cert",l),!this.chain[b]?.registeredStake)throw new Error(`Stake key is already deregistered. Reward address: ${b}`);ee.push({type:"Deregistration",rewardAddress:b});break}case 2:{let k=f.as_stake_delegation(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),k.stake_credential()).to_address().to_bech32(void 0),A=k.pool_keyhash().to_bech32("pool"),{stakeCredential:$}=D(b);if(O($,"Cert",l),!this.chain[b]?.registeredStake&&!ee.find(re=>re.type==="Registration"&&re.rewardAddress===b))throw new Error(`Stake key is not registered. Reward address: ${b}`);ee.push({type:"Delegation",rewardAddress:b,poolId:A});break}}}T.forEach(({entry:{utxo:l}},f)=>{let{paymentCredential:k}=D(l.address);O(k,"Spend",f)});let Ze=(()=>{let l=[];for(let f=0;f<r.outputs().len();f++){let k=r.outputs().get(f),b=o.TransactionUnspentOutput.new(o.TransactionInput.new(o.TransactionHash.from_hex(i),o.BigNum.from_str(f.toString())),k),A=He(b);A.datumHash&&m.add(A.datumHash),l.push({utxo:A,spent:!1})}return l})(),[ve]=_.filter(l=>!m.has(l));if(ve)throw new Error(`Extraneous vkey witness. Key hash: ${ve}`);let[Te]=p.filter(l=>!m.has(l));if(Te)throw new Error(`Extraneous native script. Script hash: ${Te}`);let[Se]=w.filter(l=>!m.has(l));if(Se)throw new Error(`Extraneous plutus script. Script hash: ${Se}`);let[Ge]=Object.keys(h).filter(l=>!m.has(l));if(Ge)throw new Error(`Extraneous plutus data. Datum hash: ${Ge}`);T.forEach(({entry:l,type:f})=>{let k=l.utxo.txHash+l.utxo.outputIndex;l.spent=!0,f==="Ledger"?this.ledger[k]=l:f==="Mempool"&&(this.mempool[k]=l)}),ke.forEach(({rewardAddress:l,withdrawal:f})=>{this.chain[l].delegation.rewards-=f}),ee.forEach(({type:l,rewardAddress:f,poolId:k})=>{switch(l){case"Registration":{this.chain[f]?this.chain[f].registeredStake=!0:this.chain[f]={registeredStake:!0,delegation:{poolId:null,rewards:0n}};break}case"Deregistration":{this.chain[f].registeredStake=!1,this.chain[f].delegation.poolId=null;break}case"Delegation":this.chain[f].delegation.poolId=k}}),Ze.forEach(({utxo:l,spent:f})=>{this.mempool[l.txHash+l.outputIndex]={utxo:l,spent:f}});for(let[l,f]of Object.entries(h))this.datumTable[l]=f;return Promise.resolve(i)}log(){function e(s){let n=s==="lovelace"?"1":s,i=0;for(let m=0;m<n.length;m++)i+=n.charCodeAt(m);let u=i*123%256,c=i*321%256,h=i*213%256;return"#"+((1<<24)+(u<<16)+(c<<8)+h).toString(16).slice(1)}let t={},r={};for(let{utxo:s}of Object.values(this.ledger))for(let[n,i]of Object.entries(s.assets))r[s.address]?r[s.address]?.[n]?r[s.address][n]+=i:r[s.address][n]=i:r[s.address]={[n]:i},t[n]?t[n]+=i:t[n]=i;console.log(`
%cBlockchain state`,"color:purple"),console.log(`
    Block height:   %c${this.blockHeight}%c
    Slot:           %c${this.slot}%c
    Unix time:      %c${this.time}
  `,"color:yellow","color:white","color:yellow","color:white","color:yellow"),console.log(`
`);for(let[s,n]of Object.entries(r)){console.log(`Address: %c${s}`,"color:blue",`
`);for(let[i,u]of Object.entries(n)){let c=Math.max(Math.floor(60*(Number(u)/Number(t[i]))),1);console.log(`%c${"\u2586".repeat(c)+" ".repeat(60-c)}`,`color: ${e(i)}`,"",`${i}:`,u,"")}console.log(`
${"\u2581".repeat(60)}
`)}}};var Le=class{constructor(){Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"txBuilderConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"provider",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"network",{enumerable:!0,configurable:!0,writable:!0,value:"Mainnet"}),Object.defineProperty(this,"utils",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}static async new({provider:e,network:t,protocolParameters:r}){let s=new this;if(t&&(s.network=t),r&&(s.protocolParameters=r),e&&(s.provider=e,s.provider instanceof Ke&&(s.network="Custom",we[s.network]={zeroTime:s.provider.now(),zeroSlot:0,slotLength:1e3})),e&&!r){let n=await e.getProtocolParameters();s.protocolParameters=n}if(s.protocolParameters){let n=we[s.network];s.txBuilderConfig=o.TransactionBuilderConfigBuilder.new().coins_per_utxo_byte(o.BigNum.from_str(s.protocolParameters.coinsPerUtxoByte.toString())).fee_algo(o.LinearFee.new(o.BigNum.from_str(s.protocolParameters.minFeeA.toString()),o.BigNum.from_str(s.protocolParameters.minFeeB.toString()))).key_deposit(o.BigNum.from_str(s.protocolParameters.keyDeposit.toString())).pool_deposit(o.BigNum.from_str(s.protocolParameters.poolDeposit.toString())).max_tx_size(s.protocolParameters.maxTxSize).max_value_size(s.protocolParameters.maxValSize).collateral_percentage(s.protocolParameters.collateralPercentage).max_collateral_inputs(s.protocolParameters.maxCollateralInputs).max_tx_ex_units(o.ExUnits.new(o.BigNum.from_str(s.protocolParameters.maxTxExMem.toString()),o.BigNum.from_str(s.protocolParameters.maxTxExSteps.toString()))).ex_unit_prices(o.ExUnitPrices.from_float(s.protocolParameters.priceMem,s.protocolParameters.priceStep)).slot_config(o.BigNum.from_str(n.zeroTime.toString()),o.BigNum.from_str(n.zeroSlot.toString()),n.slotLength).blockfrost(o.Blockfrost.new((e?.url||"")+"/utils/txs/evaluate",e?.projectId||"")).costmdls(et(s.protocolParameters.costModels)).build()}return s.utils=new Ue(s),s}async switchProvider(e,t){if(this.network==="Custom")throw new Error("Cannot switch when on custom network.");let r=await Le.new(e,t);return this.txBuilderConfig=r.txBuilderConfig,this.provider=e||this.provider,this.network=t||this.network,this.wallet=r.wallet,this}newTx(){return new $e(this)}fromTx(e){return new be(this,o.Transaction.from_bytes(d(e)))}newMessage(e,t){return new qe(this,e,t)}verifyMessage(e,t,r){let{paymentCredential:s,stakeCredential:n,address:{hex:i}}=this.utils.getAddressDetails(e),u=s?.hash||n?.hash;if(!u)throw new Error("Not a valid address provided.");return Ut(i,u,t,r)}currentSlot(){return this.utils.unixTimeToSlot(Date.now())}utxosAt(e){return this.provider.getUtxos(e)}utxosAtWithUnit(e,t){return this.provider.getUtxosWithUnit(e,t)}utxoByUnit(e){return this.provider.getUtxoByUnit(e)}utxosByOutRef(e){return this.provider.getUtxosByOutRef(e)}delegationAt(e){return this.provider.getDelegation(e)}awaitTx(e,t=3e3){return this.provider.awaitTx(e,t)}async datumOf(e,t){if(!e.datum){if(!e.datumHash)throw new Error("This UTxO does not have a datum hash.");e.datum=await this.provider.getDatum(e.datumHash)}return te.from(e.datum,t)}async metadataOf(e){let{policyId:t,name:r,label:s}=Ee(e);switch(s){case 222:case 333:case 444:{let n=await this.utxoByUnit(It(t,r,100)),i=await this.datumOf(n);return te.toJson(i.fields[0])}default:throw new Error("No variant matched.")}}selectWalletFromPrivateKey(e){let t=o.PrivateKey.from_bech32(e),r=t.to_public().hash();return this.wallet={address:async()=>o.EnterpriseAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_keyhash(r)).to_address().to_bech32(void 0),rewardAddress:async()=>null,getCollateralCore:()=>{},getUtxos:async()=>await this.utxosAt(ie(await this.wallet.address())),getUtxosCore:async()=>{let s=await this.utxosAt(ie(await this.wallet.address())),n=o.TransactionUnspentOutputs.new();return s.forEach(i=>{n.add(ue(i))}),n},getDelegation:async()=>({poolId:null,rewards:0n}),signTx:async s=>{let n=o.make_vkey_witness(o.hash_transaction(s.body()),t),i=o.TransactionWitnessSetBuilder.new();return i.add_vkey(n),i.build()},signMessage:async(s,n)=>{let{paymentCredential:i,address:{hex:u}}=this.utils.getAddressDetails(s),c=i?.hash,h=r.to_hex();if(!c||c!==h)throw new Error(`Cannot sign message for address: ${s}.`);return Be(u,n,e)},submitTx:async s=>await this.provider.submitTx(s)},this}selectWallet(e){let t=async()=>{let[r]=await e.getUsedAddresses();if(r)return r;let[s]=await e.getUnusedAddresses();return s};return this.wallet={address:async()=>o.Address.from_bytes(d(await t())).to_bech32(void 0),rewardAddress:async()=>{let[r]=await e.getRewardAddresses();return r?o.RewardAddress.from_address(o.Address.from_bytes(d(r))).to_address().to_bech32(void 0):null},getCollateralCore:()=>{},getUtxos:async()=>(await e.getUtxos()||[]).map(s=>{let n=o.TransactionUnspentOutput.from_bytes(d(s));return He(n)}),getUtxosCore:async()=>{let r=o.TransactionUnspentOutputs.new();return(await e.getUtxos()||[]).forEach(s=>{r.add(o.TransactionUnspentOutput.from_bytes(d(s)))}),r},getDelegation:async()=>{let r=await this.wallet.rewardAddress();return r?await this.delegationAt(r):{poolId:null,rewards:0n}},signTx:async r=>{let s=await e.signTx(y(r.to_bytes()),!0);return o.TransactionWitnessSet.from_bytes(d(s))},signMessage:async(r,s)=>{let n=y(o.Address.from_bech32(r).to_bytes());return await e.signData(n,s)},submitTx:async r=>await e.submitTx(r)},this}selectWalletFrom({address:e,utxos:t,rewardAddress:r,collateral:s}){let n=this.utils.getAddressDetails(e);return this.wallet={address:async()=>e,rewardAddress:async()=>(!r&&n.stakeCredential?(()=>n.stakeCredential.type==="Key"?o.RewardAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(n.stakeCredential.hash))).to_address().to_bech32(void 0):o.RewardAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(n.stakeCredential.hash))).to_address().to_bech32(void 0))():r)||null,getCollateralCore:()=>{if(!s||!s.length)return;let i=o.TransactionUnspentOutputs.new();return s.forEach(u=>i.add(ue(u))),i},getUtxos:async()=>t||await this.utxosAt(ie(e)),getUtxosCore:async()=>{let i=o.TransactionUnspentOutputs.new();return(t||await this.utxosAt(ie(e))).forEach(u=>i.add(ue(u))),i},getDelegation:async()=>{let i=await this.wallet.rewardAddress();return i?await this.delegationAt(i):{poolId:null,rewards:0n}},signTx:async()=>{throw new Error("Not implemented")},signMessage:async()=>{throw new Error("Not implemented")},submitTx:async i=>await this.provider.submitTx(i)},this}selectWalletFromSeed(e,t){let{address:r,rewardAddress:s,paymentKey:n,stakeKey:i}=Ot(e,{addressType:t?.addressType||"Base",accountIndex:t?.accountIndex||0,password:t?.password,network:this.network}),u=o.PrivateKey.from_bech32(n).to_public().hash().to_hex(),c=i?o.PrivateKey.from_bech32(i).to_public().hash().to_hex():"",h={[u]:n,[c]:i};return this.wallet={address:async()=>r,rewardAddress:async()=>s||null,getCollateralCore:()=>{},getUtxos:async()=>this.utxosAt(ie(r)),getUtxosCore:async()=>{let m=o.TransactionUnspentOutputs.new();return(await this.utxosAt(ie(r))).forEach(_=>m.add(ue(_))),m},getDelegation:async()=>{let m=await this.wallet.rewardAddress();return m?await this.delegationAt(m):{poolId:null,rewards:0n}},signTx:async m=>{let _=await this.utxosAt(r),p=At(m,[u,c],_),E=o.TransactionWitnessSetBuilder.new();return p.forEach(I=>{let w=o.make_vkey_witness(o.hash_transaction(m.body()),o.PrivateKey.from_bech32(h[I]));E.add_vkey(w)}),E.build()},signMessage:async(m,_)=>{let{paymentCredential:B,stakeCredential:p,address:{hex:E}}=this.utils.getAddressDetails(m),I=B?.hash||p?.hash,w=h[I];if(!w)throw new Error(`Cannot sign message for address: ${m}.`);return Be(E,_,w)},submitTx:async m=>await this.provider.submitTx(m)},this}};var Ht=class{constructor(e,t){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"projectId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=e,this.projectId=t||""}async getProtocolParameters(){let e=await fetch(`${this.url}/epochs/latest/parameters`,{headers:{project_id:this.projectId,lucid:V}}).then(t=>t.json());return{minFeeA:parseInt(e.min_fee_a),minFeeB:parseInt(e.min_fee_b),maxTxSize:parseInt(e.max_tx_size),maxValSize:parseInt(e.max_val_size),keyDeposit:BigInt(e.key_deposit),poolDeposit:BigInt(e.pool_deposit),priceMem:parseFloat(e.price_mem),priceStep:parseFloat(e.price_step),maxTxExMem:BigInt(e.max_tx_ex_mem),maxTxExSteps:BigInt(e.max_tx_ex_steps),coinsPerUtxoByte:BigInt(e.coins_per_utxo_size),collateralPercentage:parseInt(e.collateral_percent),maxCollateralInputs:parseInt(e.max_collateral_inputs),costModels:e.cost_models}}async getUtxos(e){let t=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_vkh"))(),r=[],s=1;for(;;){let n=await fetch(`${this.url}/addresses/${t}/utxos?page=${s}`,{headers:{project_id:this.projectId,lucid:V}}).then(i=>i.json());if(n.error){if(n.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(r=r.concat(n),n.length<=0)break;s++}return this.blockfrostUtxosToUtxos(r)}async getUtxosWithUnit(e,t){let r=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_vkh"))(),s=[],n=1;for(;;){let i=await fetch(`${this.url}/addresses/${r}/utxos/${t}?page=${n}`,{headers:{project_id:this.projectId,lucid:V}}).then(u=>u.json());if(i.error){if(i.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(s=s.concat(i),i.length<=0)break;n++}return this.blockfrostUtxosToUtxos(s)}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:{project_id:this.projectId,lucid:V}}).then(n=>n.json());if(!t||t.error)throw new Error("Unit not found.");if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");let r=t[0].address,s=await this.getUtxosWithUnit(r,e);if(s.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return s[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(s=>s.txHash))];return(await Promise.all(t.map(async s=>{let n=await fetch(`${this.url}/txs/${s}/utxos`,{headers:{project_id:this.projectId,lucid:V}}).then(u=>u.json());if(!n||n.error)return[];let i=n.outputs.map(u=>({...u,tx_hash:s}));return this.blockfrostUtxosToUtxos(i)}))).reduce((s,n)=>s.concat(n),[]).filter(s=>e.some(n=>s.txHash===n.txHash&&s.outputIndex===n.outputIndex))}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:{project_id:this.projectId,lucid:V}}).then(r=>r.json());return!t||t.error?{poolId:null,rewards:0n}:{poolId:t.pool_id||null,rewards:BigInt(t.withdrawable_amount)}}async getDatum(e){let t=await fetch(`${this.url}/scripts/datum/${e}/cbor`,{headers:{project_id:this.projectId,lucid:V}}).then(r=>r.json()).then(r=>r.cbor);if(!t||t.error)throw new Error(`No datum found for datum hash: ${e}`);return t}awaitTx(e,t=3e3){return new Promise(r=>{let s=setInterval(async()=>{let n=await fetch(`${this.url}/txs/${e}`,{headers:{project_id:this.projectId,lucid:V}}).then(i=>i.json());if(n&&!n.error)return clearInterval(s),await new Promise(i=>setTimeout(()=>i(1),1e3)),r(!0)},t)})}async submitTx(e){let t=await fetch(`${this.url}/tx/submit`,{method:"POST",headers:{"Content-Type":"application/cbor",project_id:this.projectId,lucid:V},body:d(e)}).then(r=>r.json());if(!t||t.error)throw t?.status_code===400?new Error(t.message):new Error("Could not submit transaction.");return t}async blockfrostUtxosToUtxos(e){return await Promise.all(e.map(async t=>({txHash:t.tx_hash,outputIndex:t.output_index,assets:Object.fromEntries(t.amount.map(({unit:r,quantity:s})=>[r,BigInt(s)])),address:t.address,datumHash:!t.inline_datum&&t.data_hash||void 0,datum:t.inline_datum||void 0,scriptRef:t.reference_script_hash?await(async()=>{let{type:r}=await fetch(`${this.url}/scripts/${t.reference_script_hash}`,{headers:{project_id:this.projectId,lucid:V}}).then(n=>n.json());if(r==="Native"||r==="native")throw new Error("Native script ref not implemented!");let{cbor:s}=await fetch(`${this.url}/scripts/${t.reference_script_hash}/cbor`,{headers:{project_id:this.projectId,lucid:V}}).then(n=>n.json());return{type:r==="plutusV1"?"PlutusV1":"PlutusV2",script:q(s)}})():void 0})))}};function Vs(a){let e=t=>{if(isNaN(t.int)){if(t.bytes||!isNaN(Number(t.bytes)))return o.PlutusData.new_bytes(d(t.bytes));if(t.map){let r=o.PlutusMap.new();return t.map.forEach(({k:s,v:n})=>{r.insert(e(s),e(n))}),o.PlutusData.new_map(r)}else if(t.list){let r=o.PlutusList.new();return t.list.forEach(s=>{r.add(e(s))}),o.PlutusData.new_list(r)}else if(!isNaN(t.constructor)){let r=o.PlutusList.new();return t.fields.forEach(s=>{r.add(e(s))}),o.PlutusData.new_constr_plutus_data(o.ConstrPlutusData.new(o.BigNum.from_str(t.constructor.toString()),r))}}else return o.PlutusData.new_integer(o.BigInt.from_str(t.int.toString()));throw new Error("Unsupported type")};return y(e(a).to_bytes())}var V=fe.version;var Nt=class{constructor(e,t){Object.defineProperty(this,"kupoUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ogmiosUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.kupoUrl=e,this.ogmiosUrl=t}async getProtocolParameters(){let e=await this.ogmiosWsp("Query",{query:"currentProtocolParameters"});return new Promise((t,r)=>{e.addEventListener("message",s=>{try{let{result:n}=JSON.parse(s.data),i={};Object.keys(n.costModels).forEach(_=>{let p="Plutus"+_.split(":")[1].toUpperCase();i[p]=n.costModels[_]});let[u,c]=n.prices.memory.split("/"),[h,m]=n.prices.steps.split("/");t({minFeeA:parseInt(n.minFeeCoefficient),minFeeB:parseInt(n.minFeeConstant),maxTxSize:parseInt(n.maxTxSize),maxValSize:parseInt(n.maxValueSize),keyDeposit:BigInt(n.stakeKeyDeposit),poolDeposit:BigInt(n.poolDeposit),priceMem:parseInt(u)/parseInt(c),priceStep:parseInt(h)/parseInt(m),maxTxExMem:BigInt(n.maxExecutionUnitsPerTransaction.memory),maxTxExSteps:BigInt(n.maxExecutionUnitsPerTransaction.steps),coinsPerUtxoByte:BigInt(n.coinsPerUtxoByte),collateralPercentage:parseInt(n.collateralPercentage),maxCollateralInputs:parseInt(n.maxCollateralInputs),costModels:i}),e.close()}catch(n){r(n)}},{once:!0})})}async getUtxos(e){let t=typeof e=="string",r=t?e:e.hash,s=await fetch(`${this.kupoUrl}/matches/${r}${t?"":"/*"}?unspent`).then(n=>n.json());return this.kupmiosUtxosToUtxos(s)}async getUtxosWithUnit(e,t){let r=typeof e=="string",s=r?e:e.hash,{policyId:n,assetName:i}=Ee(t),u=await fetch(`${this.kupoUrl}/matches/${s}${r?"":"/*"}?unspent&policy_id=${n}${i?`&asset_name=${i}`:""}`).then(c=>c.json());return this.kupmiosUtxosToUtxos(u)}async getUtxoByUnit(e){let{policyId:t,assetName:r}=Ee(e),s=await fetch(`${this.kupoUrl}/matches/${t}.${r?`${r}`:"*"}?unspent`).then(i=>i.json()),n=await this.kupmiosUtxosToUtxos(s);if(n.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return n[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(s=>s.txHash))];return(await Promise.all(t.map(async s=>{let n=await fetch(`${this.kupoUrl}/matches/*@${s}?unspent`).then(i=>i.json());return this.kupmiosUtxosToUtxos(n)}))).reduce((s,n)=>s.concat(n),[]).filter(s=>e.some(n=>s.txHash===n.txHash&&s.outputIndex===n.outputIndex))}async getDelegation(e){let t=await this.ogmiosWsp("Query",{query:{delegationsAndRewards:[e]}});return new Promise((r,s)=>{t.addEventListener("message",n=>{try{let{result:i}=JSON.parse(n.data),u=i?Object.values(i)[0]:{};r({poolId:u?.delegate||null,rewards:BigInt(u?.rewards||0)}),t.close()}catch(i){s(i)}},{once:!0})})}async getDatum(e){let t=await fetch(`${this.kupoUrl}/datums/${e}`).then(r=>r.json());if(!t||!t.datum)throw new Error(`No datum found for datum hash: ${e}`);return t.datum}awaitTx(e,t=3e3){return new Promise(r=>{let s=setInterval(async()=>{let n=await fetch(`${this.kupoUrl}/matches/*@${e}?unspent`).then(i=>i.json());if(n&&n.length>0)return clearInterval(s),await new Promise(i=>setTimeout(()=>i(1),1e3)),r(!0)},t)})}async submitTx(e){let t=await this.ogmiosWsp("SubmitTx",{submit:e});return new Promise((r,s)=>{t.addEventListener("message",n=>{try{let{result:i}=JSON.parse(n.data);i.SubmitSuccess?r(i.SubmitSuccess.txId):s(i.SubmitFail),t.close()}catch(i){s(i)}},{once:!0})})}kupmiosUtxosToUtxos(e){return Promise.all(e.map(async t=>({txHash:t.transaction_id,outputIndex:parseInt(t.output_index),address:t.address,assets:(()=>{let r={lovelace:BigInt(t.value.coins)};return Object.keys(t.value.assets).forEach(s=>{r[s.replace(".","")]=BigInt(t.value.assets[s])}),r})(),datumHash:t?.datum_type==="hash"?t.datum_hash:null,datum:t?.datum_type==="inline"?await this.getDatum(t.datum_hash):null,scriptRef:t.script_hash&&await(async()=>{let{script:r,language:s}=await fetch(`${this.kupoUrl}/scripts/${t.script_hash}`).then(n=>n.json());if(s==="native")return{type:"Native",script:r};if(s==="plutus:v1")return{type:"PlutusV1",script:y(o.PlutusScript.new(d(r)).to_bytes())};if(s==="plutus:v2")return{type:"PlutusV2",script:y(o.PlutusScript.new(d(r)).to_bytes())}})()})))}async ogmiosWsp(e,t){let r=new WebSocket(this.ogmiosUrl);return await new Promise(s=>{r.addEventListener("open",()=>s(1),{once:!0})}),r.send(JSON.stringify({type:"jsonwsp/request",version:"1.0",servicename:"ogmios",methodname:e,args:t})),r}};var jt=class{constructor({network:e,apiKey:t,turboSubmit:r=!1}){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"turboSubmit",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=`https://${e}.gomaestro-api.org/v1`,this.apiKey=t,this.turboSubmit=r}async getProtocolParameters(){let t=(await fetch(`${this.url}/protocol-params`,{headers:this.commonHeaders()}).then(n=>n.json())).data,r=n=>{let i=n.indexOf("/");return parseInt(n.slice(0,i))/parseInt(n.slice(i+1))},s=(n,i)=>{let u=Object.keys(n).sort().map(c=>({[i[c]||c]:Object.fromEntries(Object.entries(n[c]).sort(([m,_],[B,p])=>m.localeCompare(B)))}));return Object.assign({},...u)};return{minFeeA:parseInt(t.min_fee_coefficient),minFeeB:parseInt(t.min_fee_constant),maxTxSize:parseInt(t.max_tx_size),maxValSize:parseInt(t.max_value_size),keyDeposit:BigInt(t.stake_key_deposit),poolDeposit:BigInt(t.pool_deposit),priceMem:r(t.prices.memory),priceStep:r(t.prices.steps),maxTxExMem:BigInt(t.max_execution_units_per_transaction.memory),maxTxExSteps:BigInt(t.max_execution_units_per_transaction.steps),coinsPerUtxoByte:BigInt(t.coins_per_utxo_byte),collateralPercentage:parseInt(t.collateral_percentage),maxCollateralInputs:parseInt(t.max_collateral_inputs),costModels:s(t.cost_models,{"plutus:v1":"PlutusV1","plutus:v2":"PlutusV2"})}}async getUtxosInternal(e,t){let r=(()=>{if(typeof e=="string")return"/addresses/"+e;let i="/addresses/cred/";return i+=e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_shared_vkh"),i})(),s=new URLSearchParams({count:"100",...t&&{asset:t}});return(await this.getAllPagesData(async i=>await fetch(i,{headers:this.commonHeaders()}),`${this.url}${r}/utxos`,s,"Location: getUtxosInternal. Error: Could not fetch UTxOs from Maestro")).map(this.maestroUtxoToUtxo)}getUtxos(e){return this.getUtxosInternal(e)}getUtxosWithUnit(e,t){return this.getUtxosInternal(e,t)}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:this.commonHeaders()}),r=await t.json();if(!t.ok)throw r.message?new Error(r.message):new Error("Location: getUtxoByUnit. Error: Couldn't perform query. Received status code: "+t.status);let s=r.data;if(s.length===0)throw new Error("Location: getUtxoByUnit. Error: Unit not found.");if(s.length>1)throw new Error("Location: getUtxoByUnit. Error: Unit needs to be an NFT or only held by one address.");let n=s[0].address,i=await this.getUtxosWithUnit(n,e);if(i.length>1)throw new Error("Location: getUtxoByUnit. Error: Unit needs to be an NFT or only held by one address.");return i[0]}async getUtxosByOutRef(e){let t=`${this.url}/transactions/outputs`,r=JSON.stringify(e.map(({txHash:n,outputIndex:i})=>`${n}#${i}`));return(await this.getAllPagesData(async n=>await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",...this.commonHeaders()},body:r}),t,new URLSearchParams({}),"Location: getUtxosByOutRef. Error: Could not fetch UTxOs by references from Maestro")).map(this.maestroUtxoToUtxo)}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:this.commonHeaders()});if(!t.ok)return{poolId:null,rewards:0n};let s=(await t.json()).data;return{poolId:s.delegated_pool||null,rewards:BigInt(s.rewards_available)}}async getDatum(e){let t=await fetch(`${this.url}/datum/${e}`,{headers:this.commonHeaders()});if(!t.ok)throw t.status===404?new Error(`No datum found for datum hash: ${e}`):new Error("Location: getDatum. Error: Couldn't successfully perform query. Received status code: "+t.status);return(await t.json()).data.bytes}awaitTx(e,t=3e3){return new Promise(r=>{let s=setInterval(async()=>{let n=await fetch(`${this.url}/transactions/${e}/cbor`,{headers:this.commonHeaders()});if(n.ok)return await n.json(),clearInterval(s),await new Promise(i=>setTimeout(()=>i(1),1e3)),r(!0)},t)})}async submitTx(e){let t=`${this.url}/txmanager`;t+=this.turboSubmit?"/turbosubmit":"";let r=await fetch(t,{method:"POST",headers:{"Content-Type":"application/cbor",Accept:"text/plain",...this.commonHeaders()},body:d(e)}),s=await r.text();if(!r.ok)throw r.status===400?new Error(s):new Error("Could not submit transaction. Received status code: "+r.status);return s}commonHeaders(){return{"api-key":this.apiKey,lucid:dr}}maestroUtxoToUtxo(e){return{txHash:e.tx_hash,outputIndex:e.index,assets:(()=>{let t={};return e.assets.forEach(r=>{t[r.unit]=BigInt(r.amount)}),t})(),address:e.address,datumHash:e.datum?e.datum.type=="inline"?void 0:e.datum.hash:void 0,datum:e.datum?.bytes,scriptRef:e.reference_script?e.reference_script.type=="native"?void 0:{type:e.reference_script.type=="plutusv1"?"PlutusV1":"PlutusV2",script:q(e.reference_script.bytes)}:void 0}}async getAllPagesData(e,t,r,s){let n=null,i=[];for(;;){n!==null&&r.set("cursor",n);let u=await e(`${t}?`+r),c=await u.json();if(!u.ok)throw new Error(`${s}. Received status code: ${u.status}`);if(n=c.next_cursor,i=i.concat(c.data),n==null)break}return i}},dr=fe.version;export{Ht as Blockfrost,o as C,N as Constr,te as Data,Ke as Emulator,Nt as Kupmios,Le as Lucid,P as M,jt as Maestro,De as MerkleTree,tt as PROTOCOL_PARAMETERS_DEFAULT,we as SLOT_CONFIG_NETWORK,$e as Tx,be as TxComplete,Me as TxSigned,Ue as Utils,$r as addAssets,q as applyDoubleCborEncoding,Rr as applyParamsToScript,me as assetsToValue,Et as chunk,Ye as combineHash,Bt as concat,He as coreToUtxo,et as createCostModels,Vs as datumJsonToCbor,Ne as equals,d as fromHex,ir as fromLabel,ar as fromScriptRef,St as fromText,Ee as fromUnit,sr as generatePrivateKey,nr as generateSeedPhrase,D as getAddressDetails,ur as nativeScriptFromJson,oe as networkToId,ie as paymentCredentialOf,je as sha256,ft as slotToBeginUnixTime,rr as stakeCredentialOf,y as toHex,or as toLabel,Mr as toPublicKey,Xe as toScriptRef,Dr as toText,It as toUnit,gt as unixTimeToEnclosingSlot,ue as utxoToCore,Je as valueToAssets};
