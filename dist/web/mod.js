Object.hasOwn||Object.defineProperty(Object,"hasOwn",{value:function(n,e){if(n==null)throw new TypeError("Cannot convert undefined or null to object");return Object.prototype.hasOwnProperty.call(Object(n),e)},configurable:!0,enumerable:!1,writable:!0});import*as o from"../esm/src/core/libs/cardano_multiplatform_lib/cardano_multiplatform_lib.generated.js";import*as T from"../esm/src/core/libs/cardano_message_signing/cardano_message_signing.generated.js";var ge={name:"@jpg-store/lucid-cardano",version:"0.10.10",license:"MIT",description:"This is a fork of the original Lucid repo compiled into CommonJS. For more information check https://github.com/spacebudz/lucid",repository:"https://github.com/jpg-store/lucid",module:"./dist/esm/mod.js",main:"./dist/esm/mod.js",types:"./dist/types/mod.d.ts",engines:{node:">=14"},dependencies:{"node-fetch":"^3.2.3","@peculiar/webcrypto":"^1.4.0",ws:"^8.10.0"},type:"module",exports:{".":{import:"./dist/esm/mod.js",types:"./dist/types/mod.d.ts"}}};async function Ze(n,e){try{await n.instantiate({url:new URL(e,`https://deno.land/x/lucid@${ge.version}/src/core/libs/`)})}catch{}}await Promise.all([Ze(o,"cardano_multiplatform_lib/cardano_multiplatform_lib_bg.wasm"),Ze(T,"cardano_message_signing/cardano_message_signing_bg.wasm")]);function Qe(n){let e=o.Costmdls.new(),t=o.CostModel.new();Object.values(n.PlutusV1).forEach((r,a)=>{t.set(a,o.Int.new(o.BigNum.from_str(r.toString())))}),e.insert(o.Language.new_plutus_v1(),t);let s=o.CostModel.new_plutus_v2();return Object.values(n.PlutusV2||[]).forEach((r,a)=>{s.set(a,o.Int.new(o.BigNum.from_str(r.toString())))}),e.insert(o.Language.new_plutus_v2(),s),e}var et={minFeeA:44,minFeeB:155381,maxTxSize:16384,maxValSize:5e3,keyDeposit:2000000n,poolDeposit:500000000n,priceMem:.0577,priceStep:721e-7,maxTxExMem:14000000n,maxTxExSteps:10000000000n,coinsPerUtxoByte:4310n,collateralPercentage:150,maxCollateralInputs:3,costModels:{PlutusV1:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEd25519Signature-cpu-arguments-intercept":9462713,"verifyEd25519Signature-cpu-arguments-slope":1021,"verifyEd25519Signature-memory-arguments":10},PlutusV2:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"serialiseData-cpu-arguments-intercept":1159724,"serialiseData-cpu-arguments-slope":392670,"serialiseData-memory-arguments-intercept":0,"serialiseData-memory-arguments-slope":2,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEcdsaSecp256k1Signature-cpu-arguments":35892428,"verifyEcdsaSecp256k1Signature-memory-arguments":10,"verifyEd25519Signature-cpu-arguments-intercept":57996947,"verifyEd25519Signature-cpu-arguments-slope":18975,"verifyEd25519Signature-memory-arguments":10,"verifySchnorrSecp256k1Signature-cpu-arguments-intercept":38887044,"verifySchnorrSecp256k1Signature-cpu-arguments-slope":32947,"verifySchnorrSecp256k1Signature-memory-arguments":10}}};var tt=new TextEncoder().encode("0123456789abcdef");function Dt(n){return new Error("encoding/hex: invalid byte: "+new TextDecoder().decode(new Uint8Array([n])))}function Mt(){return new Error("encoding/hex: odd length hex string")}function qe(n){if(48<=n&&n<=57)return n-48;if(97<=n&&n<=102)return n-97+10;if(65<=n&&n<=70)return n-65+10;throw Dt(n)}function Rt(n){return n*2}function $t(n){let e=new Uint8Array(Rt(n.length));for(let t=0;t<e.length;t++){let s=n[t];e[t*2]=tt[s>>4],e[t*2+1]=tt[s&15]}return e}function rt(n){return new TextDecoder().decode($t(n))}function Ke(n){let e=new Uint8Array(qt(n.length));for(let t=0;t<e.length;t++){let s=qe(n[t*2]),r=qe(n[t*2+1]);e[t]=s<<4|r}if(n.length%2==1)throw qe(n[e.length*2]),Mt();return e}function qt(n){return n>>>1}function st(n){return Ke(new TextEncoder().encode(n))}var v=function(n,e,t,s,r){if(s==="m")throw new TypeError("Private method is not writable");if(s==="a"&&!r)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?n!==e||!r:!e.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return s==="a"?r.call(n,t):r?r.value=t:e.set(n,t),t},g=function(n,e,t,s){if(t==="a"&&!s)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?n!==e||!s:!e.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?s:t==="a"?s.call(n):s?s.value:e.get(n)},se,ce,L,ye,ve,W,F,J,X,G,Y,Z,Q,le,xe,ne,Be,ae,Kt,Lt,zt,Vt,x="0123456789abcdef".split(""),Wt=[-2147483648,8388608,32768,128],K=[24,16,8,0],Ee=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],H=[],we=class{constructor(e=!1,t=!1){se.set(this,void 0),ce.set(this,void 0),L.set(this,void 0),ye.set(this,void 0),ve.set(this,void 0),W.set(this,void 0),F.set(this,void 0),J.set(this,void 0),X.set(this,void 0),G.set(this,void 0),Y.set(this,void 0),Z.set(this,void 0),Q.set(this,void 0),le.set(this,void 0),xe.set(this,void 0),ne.set(this,void 0),Be.set(this,0),ae.set(this,void 0),this.init(e,t)}init(e,t){t?(H[0]=H[16]=H[1]=H[2]=H[3]=H[4]=H[5]=H[6]=H[7]=H[8]=H[9]=H[10]=H[11]=H[12]=H[13]=H[14]=H[15]=0,v(this,ce,H,"f")):v(this,ce,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f"),e?(v(this,W,3238371032,"f"),v(this,F,914150663,"f"),v(this,J,812702999,"f"),v(this,X,4144912697,"f"),v(this,G,4290775857,"f"),v(this,Y,1750603025,"f"),v(this,Z,1694076839,"f"),v(this,Q,3204075428,"f")):(v(this,W,1779033703,"f"),v(this,F,3144134277,"f"),v(this,J,1013904242,"f"),v(this,X,2773480762,"f"),v(this,G,1359893119,"f"),v(this,Y,2600822924,"f"),v(this,Z,528734635,"f"),v(this,Q,1541459225,"f")),v(this,se,v(this,ae,v(this,L,v(this,xe,0,"f"),"f"),"f"),"f"),v(this,ye,v(this,le,!1,"f"),"f"),v(this,ve,!0,"f"),v(this,ne,e,"f")}update(e){if(g(this,ye,"f"))return this;let t;e instanceof ArrayBuffer?t=new Uint8Array(e):t=e;let s=0,r=t.length,a=g(this,ce,"f");for(;s<r;){let i;if(g(this,le,"f")&&(v(this,le,!1,"f"),a[0]=g(this,se,"f"),a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),typeof t!="string")for(i=g(this,ae,"f");s<r&&i<64;++s)a[i>>2]|=t[s]<<K[i++&3];else for(i=g(this,ae,"f");s<r&&i<64;++s){let u=t.charCodeAt(s);u<128?a[i>>2]|=u<<K[i++&3]:u<2048?(a[i>>2]|=(192|u>>6)<<K[i++&3],a[i>>2]|=(128|u&63)<<K[i++&3]):u<55296||u>=57344?(a[i>>2]|=(224|u>>12)<<K[i++&3],a[i>>2]|=(128|u>>6&63)<<K[i++&3],a[i>>2]|=(128|u&63)<<K[i++&3]):(u=65536+((u&1023)<<10|t.charCodeAt(++s)&1023),a[i>>2]|=(240|u>>18)<<K[i++&3],a[i>>2]|=(128|u>>12&63)<<K[i++&3],a[i>>2]|=(128|u>>6&63)<<K[i++&3],a[i>>2]|=(128|u&63)<<K[i++&3])}v(this,Be,i,"f"),v(this,L,g(this,L,"f")+(i-g(this,ae,"f")),"f"),i>=64?(v(this,se,a[16],"f"),v(this,ae,i-64,"f"),this.hash(),v(this,le,!0,"f")):v(this,ae,i,"f")}return g(this,L,"f")>4294967295&&(v(this,xe,g(this,xe,"f")+(g(this,L,"f")/4294967296<<0),"f"),v(this,L,g(this,L,"f")%4294967296,"f")),this}finalize(){if(g(this,ye,"f"))return;v(this,ye,!0,"f");let e=g(this,ce,"f"),t=g(this,Be,"f");e[16]=g(this,se,"f"),e[t>>2]|=Wt[t&3],v(this,se,e[16],"f"),t>=56&&(g(this,le,"f")||this.hash(),e[0]=g(this,se,"f"),e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=g(this,xe,"f")<<3|g(this,L,"f")>>>29,e[15]=g(this,L,"f")<<3,this.hash()}hash(){let e=g(this,W,"f"),t=g(this,F,"f"),s=g(this,J,"f"),r=g(this,X,"f"),a=g(this,G,"f"),i=g(this,Y,"f"),u=g(this,Z,"f"),c=g(this,Q,"f"),m=g(this,ce,"f"),p,C,E,h,_,I,w,A,O,R;for(let B=16;B<64;++B)h=m[B-15],p=(h>>>7|h<<25)^(h>>>18|h<<14)^h>>>3,h=m[B-2],C=(h>>>17|h<<15)^(h>>>19|h<<13)^h>>>10,m[B]=m[B-16]+p+m[B-7]+C<<0;R=t&s;for(let B=0;B<64;B+=4)g(this,ve,"f")?(g(this,ne,"f")?(w=300032,h=m[0]-1413257819,c=h-150054599<<0,r=h+24177077<<0):(w=704751109,h=m[0]-210244248,c=h-1521486534<<0,r=h+143694565<<0),v(this,ve,!1,"f")):(p=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),C=(a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7),w=e&t,E=w^e&s^R,I=a&i^~a&u,h=c+C+I+Ee[B]+m[B],_=p+E,c=r+h<<0,r=h+_<<0),p=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),C=(c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7),A=r&e,E=A^r&t^w,I=c&a^~c&i,h=u+C+I+Ee[B+1]+m[B+1],_=p+E,u=s+h<<0,s=h+_<<0,p=(s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10),C=(u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7),O=s&r,E=O^s&e^A,I=u&c^~u&a,h=i+C+I+Ee[B+2]+m[B+2],_=p+E,i=t+h<<0,t=h+_<<0,p=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),C=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),R=t&s,E=R^t&r^O,I=i&u^~i&c,h=a+C+I+Ee[B+3]+m[B+3],_=p+E,a=e+h<<0,e=h+_<<0;v(this,W,g(this,W,"f")+e<<0,"f"),v(this,F,g(this,F,"f")+t<<0,"f"),v(this,J,g(this,J,"f")+s<<0,"f"),v(this,X,g(this,X,"f")+r<<0,"f"),v(this,G,g(this,G,"f")+a<<0,"f"),v(this,Y,g(this,Y,"f")+i<<0,"f"),v(this,Z,g(this,Z,"f")+u<<0,"f"),v(this,Q,g(this,Q,"f")+c<<0,"f")}hex(){this.finalize();let e=g(this,W,"f"),t=g(this,F,"f"),s=g(this,J,"f"),r=g(this,X,"f"),a=g(this,G,"f"),i=g(this,Y,"f"),u=g(this,Z,"f"),c=g(this,Q,"f"),m=x[e>>28&15]+x[e>>24&15]+x[e>>20&15]+x[e>>16&15]+x[e>>12&15]+x[e>>8&15]+x[e>>4&15]+x[e&15]+x[t>>28&15]+x[t>>24&15]+x[t>>20&15]+x[t>>16&15]+x[t>>12&15]+x[t>>8&15]+x[t>>4&15]+x[t&15]+x[s>>28&15]+x[s>>24&15]+x[s>>20&15]+x[s>>16&15]+x[s>>12&15]+x[s>>8&15]+x[s>>4&15]+x[s&15]+x[r>>28&15]+x[r>>24&15]+x[r>>20&15]+x[r>>16&15]+x[r>>12&15]+x[r>>8&15]+x[r>>4&15]+x[r&15]+x[a>>28&15]+x[a>>24&15]+x[a>>20&15]+x[a>>16&15]+x[a>>12&15]+x[a>>8&15]+x[a>>4&15]+x[a&15]+x[i>>28&15]+x[i>>24&15]+x[i>>20&15]+x[i>>16&15]+x[i>>12&15]+x[i>>8&15]+x[i>>4&15]+x[i&15]+x[u>>28&15]+x[u>>24&15]+x[u>>20&15]+x[u>>16&15]+x[u>>12&15]+x[u>>8&15]+x[u>>4&15]+x[u&15];return g(this,ne,"f")||(m+=x[c>>28&15]+x[c>>24&15]+x[c>>20&15]+x[c>>16&15]+x[c>>12&15]+x[c>>8&15]+x[c>>4&15]+x[c&15]),m}toString(){return this.hex()}digest(){this.finalize();let e=g(this,W,"f"),t=g(this,F,"f"),s=g(this,J,"f"),r=g(this,X,"f"),a=g(this,G,"f"),i=g(this,Y,"f"),u=g(this,Z,"f"),c=g(this,Q,"f"),m=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,s>>24&255,s>>16&255,s>>8&255,s&255,r>>24&255,r>>16&255,r>>8&255,r&255,a>>24&255,a>>16&255,a>>8&255,a&255,i>>24&255,i>>16&255,i>>8&255,i&255,u>>24&255,u>>16&255,u>>8&255,u&255];return g(this,ne,"f")||m.push(c>>24&255,c>>16&255,c>>8&255,c&255),m}array(){return this.digest()}arrayBuffer(){this.finalize();let e=new ArrayBuffer(g(this,ne,"f")?28:32),t=new DataView(e);return t.setUint32(0,g(this,W,"f")),t.setUint32(4,g(this,F,"f")),t.setUint32(8,g(this,J,"f")),t.setUint32(12,g(this,X,"f")),t.setUint32(16,g(this,G,"f")),t.setUint32(20,g(this,Y,"f")),t.setUint32(24,g(this,Z,"f")),g(this,ne,"f")||t.setUint32(28,g(this,Q,"f")),e}};se=new WeakMap,ce=new WeakMap,L=new WeakMap,ye=new WeakMap,ve=new WeakMap,W=new WeakMap,F=new WeakMap,J=new WeakMap,X=new WeakMap,G=new WeakMap,Y=new WeakMap,Z=new WeakMap,Q=new WeakMap,le=new WeakMap,xe=new WeakMap,ne=new WeakMap,Be=new WeakMap,ae=new WeakMap;Kt=new WeakMap,Lt=new WeakMap,zt=new WeakMap,Vt=new WeakMap;var nt="Invalid mnemonic",de="Invalid entropy",Ft="Invalid mnemonic checksum",at=`A wordlist is required but a default could not be found.
Please pass a 2048 word array explicitly.`;function ot(n,e){if(e=e||ht,!e)throw new Error(at);let t=Gt(n).split(" ");if(t.length%3!==0)throw new Error(nt);let s=t.map(p=>{let C=e.indexOf(p);if(C===-1)throw new Error(nt);return ct(C.toString(2),"0",11)}).join(""),r=Math.floor(s.length/33)*32,a=s.slice(0,r),i=s.slice(r),u=a.match(/(.{1,8})/g).map(dt);if(u.length<16)throw new Error(de);if(u.length>32)throw new Error(de);if(u.length%4!==0)throw new Error(de);let c=new Uint8Array(u);if(ut(c)!==i)throw new Error(Ft);return y(c)}function Jt(n){let s=new Uint8Array(n);if(n>4294967295)throw new RangeError("requested too many random bytes");if(n>0)if(n>65536)for(let r=0;r<n;r+=65536)crypto.getRandomValues(s.slice(r,r+65536));else crypto.getRandomValues(s);return s}function it(n,e,t){if(n=n||128,n%32!==0)throw new TypeError(de);return e=e||Jt,Xt(e(n/8),t)}function Xt(n,e){if(e=e||ht,!e)throw new Error(at);if(n.length<16)throw new TypeError(de);if(n.length>32)throw new TypeError(de);if(n.length%4!==0)throw new TypeError(de);let t=lt(Array.from(n)),s=ut(n),i=(t+s).match(/(.{1,11})/g).map(u=>{let c=dt(u);return e[c]});return e[0]==="\u3042\u3044\u3053\u304F\u3057\u3093"?i.join("\u3000"):i.join(" ")}function ut(n){let t=n.length*8/32,s=new we().update(n).digest();return lt(Array.from(s)).slice(0,t)}function ct(n,e,t){for(;n.length<t;)n=e+n;return n}function lt(n){return n.map(e=>ct(e.toString(2),"0",8)).join("")}function Gt(n){return(n||"").normalize("NFKD")}function dt(n){return parseInt(n,2)}var ht=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var Le=[0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243];typeof Int32Array<"u"&&(Le=new Int32Array(Le));function mt(n,e=0){let t=~~e;for(let s=0;s<n.length;s++)t=Le[(t^n[s])&255]&255;return t}var be={Mainnet:{zeroTime:1596059091e3,zeroSlot:4492800,slotLength:1e3},Preview:{zeroTime:1666656e6,zeroSlot:0,slotLength:1e3},Preprod:{zeroTime:16557696e5,zeroSlot:86400,slotLength:1e3},Custom:{zeroTime:0,zeroSlot:0,slotLength:0}};function pt(n,e){let t=(n-e.zeroSlot)*e.slotLength;return e.zeroTime+t}function ft(n,e){let t=n-e.zeroTime;return Math.floor(t/e.slotLength)+e.zeroSlot}var S=Symbol.for("TypeBox.Kind"),he=Symbol.for("TypeBox.Hint"),U=Symbol.for("TypeBox.Modifier"),Yt=0,ze=class{ReadonlyOptional(e){return{[U]:"ReadonlyOptional",...e}}Readonly(e){return{[U]:"Readonly",...e}}Optional(e){return{[U]:"Optional",...e}}Any(e={}){return this.Create({...e,[S]:"Any"})}Array(e,t={}){return this.Create({...t,[S]:"Array",type:"array",items:e})}Boolean(e={}){return this.Create({...e,[S]:"Boolean",type:"boolean"})}ConstructorParameters(e,t={}){return this.Tuple([...e.parameters],{...t})}Constructor(e,t,s={}){if(e[S]==="Tuple"){let r=e.items===void 0?[]:e.items;return this.Create({...s,[S]:"Constructor",type:"object",instanceOf:"Constructor",parameters:r,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...s,[S]:"Constructor",type:"object",instanceOf:"Constructor",parameters:e,returns:t});throw new Error("TypeBuilder.Constructor: Invalid parameters")}}Date(e={}){return this.Create({...e,[S]:"Date",type:"object",instanceOf:"Date"})}Enum(e,t={}){let r=Object.keys(e).filter(a=>isNaN(a)).map(a=>e[a]).map(a=>typeof a=="string"?{[S]:"Literal",type:"string",const:a}:{[S]:"Literal",type:"number",const:a});return this.Create({...t,[S]:"Union",[he]:"Enum",anyOf:r})}Function(e,t,s={}){if(e[S]==="Tuple"){let r=e.items===void 0?[]:e.items;return this.Create({...s,[S]:"Function",type:"object",instanceOf:"Function",parameters:r,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...s,[S]:"Function",type:"object",instanceOf:"Function",parameters:e,returns:t});throw new Error("TypeBuilder.Function: Invalid parameters")}}InstanceType(e,t={}){return{...t,...this.Clone(e.returns)}}Integer(e={}){return this.Create({...e,[S]:"Integer",type:"integer"})}Intersect(e,t={}){let s=u=>u[U]&&u[U]==="Optional"||u[U]==="ReadonlyOptional",[r,a]=[new Set,new Set];for(let u of e)for(let[c,m]of Object.entries(u.properties))s(m)&&a.add(c);for(let u of e)for(let c of Object.keys(u.properties))a.has(c)||r.add(c);let i={};for(let u of e)for(let[c,m]of Object.entries(u.properties))i[c]=i[c]===void 0?m:{[S]:"Union",anyOf:[i[c],{...m}]};return r.size>0?this.Create({...t,[S]:"Object",type:"object",properties:i,required:[...r]}):this.Create({...t,[S]:"Object",type:"object",properties:i})}KeyOf(e,t={}){let s=Object.keys(e.properties).map(r=>this.Create({...t,[S]:"Literal",type:"string",const:r}));return this.Create({...t,[S]:"Union",[he]:"KeyOf",anyOf:s})}Literal(e,t={}){return this.Create({...t,[S]:"Literal",const:e,type:typeof e})}Never(e={}){return this.Create({...e,[S]:"Never",allOf:[{type:"boolean",const:!1},{type:"boolean",const:!0}]})}Null(e={}){return this.Create({...e,[S]:"Null",type:"null"})}Number(e={}){return this.Create({...e,[S]:"Number",type:"number"})}Object(e,t={}){let s=Object.keys(e),r=s.filter(i=>{let c=e[i][U];return c&&(c==="Optional"||c==="ReadonlyOptional")}),a=s.filter(i=>!r.includes(i));return a.length>0?this.Create({...t,[S]:"Object",type:"object",properties:e,required:a}):this.Create({...t,[S]:"Object",type:"object",properties:e})}Omit(e,t,s={}){let r=t[S]==="Union"?t.anyOf.map(i=>i.const):t,a={...this.Clone(e),...s,[he]:"Omit"};a.required&&(a.required=a.required.filter(i=>!r.includes(i)),a.required.length===0&&delete a.required);for(let i of Object.keys(a.properties))r.includes(i)&&delete a.properties[i];return this.Create(a)}Parameters(e,t={}){return N.Tuple(e.parameters,{...t})}Partial(e,t={}){let s={...this.Clone(e),...t,[he]:"Partial"};delete s.required;for(let r of Object.keys(s.properties)){let a=s.properties[r];switch(a[U]){case"ReadonlyOptional":a[U]="ReadonlyOptional";break;case"Readonly":a[U]="ReadonlyOptional";break;case"Optional":a[U]="Optional";break;default:a[U]="Optional";break}}return this.Create(s)}Pick(e,t,s={}){let r=t[S]==="Union"?t.anyOf.map(i=>i.const):t,a={...this.Clone(e),...s,[he]:"Pick"};a.required&&(a.required=a.required.filter(i=>r.includes(i)),a.required.length===0&&delete a.required);for(let i of Object.keys(a.properties))r.includes(i)||delete a.properties[i];return this.Create(a)}Promise(e,t={}){return this.Create({...t,[S]:"Promise",type:"object",instanceOf:"Promise",item:e})}Record(e,t,s={}){if(e[S]==="Union")return this.Object(e.anyOf.reduce((a,i)=>({...a,[i.const]:t}),{}),{...s,[he]:"Record"});let r=["Integer","Number"].includes(e[S])?"^(0|[1-9][0-9]*)$":e[S]==="String"&&e.pattern?e.pattern:"^.*$";return this.Create({...s,[S]:"Record",type:"object",patternProperties:{[r]:t},additionalProperties:!1})}Recursive(e,t={}){t.$id===void 0&&(t.$id=`T${Yt++}`);let s=e({[S]:"Self",$ref:`${t.$id}`});return s.$id=t.$id,this.Create({...t,...s})}Ref(e,t={}){if(e.$id===void 0)throw Error("TypeBuilder.Ref: Referenced schema must specify an $id");return this.Create({...t,[S]:"Ref",$ref:e.$id})}RegEx(e,t={}){return this.Create({...t,[S]:"String",type:"string",pattern:e.source})}Required(e,t={}){let s={...this.Clone(e),...t,[he]:"Required"};s.required=Object.keys(s.properties);for(let r of Object.keys(s.properties)){let a=s.properties[r];switch(a[U]){case"ReadonlyOptional":a[U]="Readonly";break;case"Readonly":a[U]="Readonly";break;case"Optional":delete a[U];break;default:delete a[U];break}}return this.Create(s)}ReturnType(e,t={}){return{...t,...this.Clone(e.returns)}}Strict(e){return JSON.parse(JSON.stringify(e))}String(e={}){return this.Create({...e,[S]:"String",type:"string"})}Tuple(e,t={}){let r=e.length,a=e.length,i=e.length>0?{...t,[S]:"Tuple",type:"array",items:e,additionalItems:!1,minItems:r,maxItems:a}:{...t,[S]:"Tuple",type:"array",minItems:r,maxItems:a};return this.Create(i)}Undefined(e={}){return this.Create({...e,[S]:"Undefined",type:"null",typeOf:"Undefined"})}Union(e,t={}){return e.length===0?N.Never({...t}):this.Create({...t,[S]:"Union",anyOf:e})}Uint8Array(e={}){return this.Create({...e,[S]:"Uint8Array",type:"object",instanceOf:"Uint8Array"})}Unknown(e={}){return this.Create({...e,[S]:"Unknown"})}Unsafe(e={}){return this.Create({...e,[S]:e[S]||"Unsafe"})}Void(e={}){return this.Create({...e,[S]:"Void",type:"null",typeOf:"Void"})}Create(e){return e}Clone(e){let t=r=>typeof r=="object"&&r!==null&&!Array.isArray(r),s=r=>typeof r=="object"&&r!==null&&Array.isArray(r);return t(e)?Object.keys(e).reduce((r,a)=>({...r,[a]:this.Clone(e[a])}),Object.getOwnPropertySymbols(e).reduce((r,a)=>({...r,[a]:this.Clone(e[a])}),{})):s(e)?e.map(r=>this.Clone(r)):e}},N=new ze;var j=class{constructor(e,t){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fields",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.index=e,this.fields=t}},ee={Integer:function(n){let e=N.Unsafe({dataType:"integer"});return n&&Object.entries(n).forEach(([t,s])=>{e[t]=s}),e},Bytes:function(n){let e=N.Unsafe({dataType:"bytes"});return n&&Object.entries(n).forEach(([t,s])=>{e[t]=s}),e},Boolean:function(){return N.Unsafe({anyOf:[{title:"False",dataType:"constructor",index:0,fields:[]},{title:"True",dataType:"constructor",index:1,fields:[]}]})},Any:function(){return N.Unsafe({description:"Any Data."})},Array:function(n,e){let t=N.Array(n);return Se(t,{dataType:"list",items:n}),e&&Object.entries(e).forEach(([s,r])=>{t[s]=r}),t},Map:function(n,e,t){let s=N.Unsafe({dataType:"map",keys:n,values:e});return t&&Object.entries(t).forEach(([r,a])=>{s[r]=a}),s},Object:function(n,e){let t=N.Object(n);return Se(t,{anyOf:[{dataType:"constructor",index:0,fields:Object.entries(n).map(([s,r])=>({...r,title:s}))}]}),t.anyOf[0].hasConstr=typeof e?.hasConstr>"u"||e.hasConstr,t},Enum:function(n){let e=N.Union(n);return Se(e,{anyOf:n.map((t,s)=>t.anyOf[0].fields.length===0?{...t.anyOf[0],index:s}:{dataType:"constructor",title:(()=>{let r=t.anyOf[0].fields[0].title;if(r.charAt(0)!==r.charAt(0).toUpperCase())throw new Error(`Enum '${r}' needs to start with an uppercase letter.`);return t.anyOf[0].fields[0].title})(),index:s,fields:t.anyOf[0].fields[0].items||t.anyOf[0].fields[0].anyOf[0].fields})}),e},Tuple:function(n,e){let t=N.Tuple(n);return Se(t,{dataType:"list",items:n}),e&&Object.entries(e).forEach(([s,r])=>{t[s]=r}),t},Literal:function(n){if(n.charAt(0)!==n.charAt(0).toUpperCase())throw new Error(`Enum '${n}' needs to start with an uppercase letter.`);let e=N.Literal(n);return Se(e,{anyOf:[{dataType:"constructor",title:n,index:0,fields:[]}]}),e},Nullable:function(n){return N.Unsafe({anyOf:[{title:"Some",description:"An optional value.",dataType:"constructor",index:0,fields:[n]},{title:"None",description:"Nothing.",dataType:"constructor",index:1,fields:[]}]})},to:Zt,from:Qt,fromJson:er,toJson:tr,void:function(){return"d87980"},castFrom:M,castTo:z};function Zt(n,e){function t(r){try{if(typeof r=="bigint")return o.PlutusData.new_integer(o.BigInt.from_str(r.toString()));if(typeof r=="string")return o.PlutusData.new_bytes(d(r));if(r instanceof j){let{index:a,fields:i}=r,u=o.PlutusList.new();return i.forEach(c=>u.add(t(c))),o.PlutusData.new_constr_plutus_data(o.ConstrPlutusData.new(o.BigNum.from_str(a.toString()),u))}else if(r instanceof Array){let a=o.PlutusList.new();return r.forEach(i=>a.add(t(i))),o.PlutusData.new_list(a)}else if(r instanceof Map){let a=o.PlutusMap.new();for(let[i,u]of r.entries())a.insert(t(i),t(u));return o.PlutusData.new_map(a)}throw new Error("Unsupported type")}catch(a){throw new Error("Could not serialize the data: "+a)}}let s=e?z(n,e):n;return y(t(s).to_bytes())}function Qt(n,e){function t(r){if(r.kind()===0){let a=r.as_constr_plutus_data(),i=a.data(),u=[];for(let c=0;c<i.len();c++)u.push(t(i.get(c)));return new j(parseInt(a.alternative().to_str()),u)}else if(r.kind()===1){let a=r.as_map(),i=new Map,u=a.keys();for(let c=0;c<u.len();c++)i.set(t(u.get(c)),t(a.get(u.get(c))));return i}else if(r.kind()===2){let a=r.as_list(),i=[];for(let u=0;u<a.len();u++)i.push(t(a.get(u)));return i}else{if(r.kind()===3)return BigInt(r.as_integer().to_str());if(r.kind()===4)return y(r.as_bytes())}throw new Error("Unsupported type")}let s=t(o.PlutusData.from_bytes(d(n)));return e?M(s,e):s}function er(n){function e(t){if(typeof t=="string")return t.startsWith("0x")?y(d(t.slice(2))):vt(t);if(typeof t=="number")return BigInt(t);if(typeof t=="bigint")return t;if(t instanceof Array)return t.map(s=>e(s));if(t instanceof Object){let s=new Map;return Object.entries(t).forEach(([r,a])=>{s.set(e(r),e(a))}),s}throw new Error("Unsupported type")}return e(n)}function tr(n){function e(t){if(typeof t=="bigint"||typeof t=="number"||typeof t=="string"&&!isNaN(parseInt(t))&&t.slice(-1)==="n"){let s=typeof t=="string"?BigInt(t.slice(0,-1)):t;return parseInt(s.toString())}if(typeof t=="string")try{return new TextDecoder(void 0,{fatal:!0}).decode(d(t))}catch{return"0x"+y(d(t))}if(t instanceof Array)return t.map(s=>e(s));if(t instanceof Map){let s={};return t.forEach((r,a)=>{let i=e(a);if(typeof i!="string"&&typeof i!="number")throw new Error("Unsupported type (Note: Only bytes or integers can be keys of a JSON object)");s[i]=e(r)}),s}throw new Error("Unsupported type (Note: Constructor cannot be converted to JSON)")}return e(n)}function M(n,e){let t=e;if(!t)throw new Error("Could not type cast data.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof n!="bigint")throw new Error("Could not type cast to integer.");return gt(n,t),n}case"bytes":{if(typeof n!="string")throw new Error("Could not type cast to bytes.");return yt(n,t),n}case"constructor":{if(_t(t)){if(!(n instanceof j)||n.index!==0||n.fields.length!==0)throw new Error("Could not type cast to void.");return}else if(n instanceof j&&n.index===t.index&&(t.hasConstr||t.hasConstr===void 0)){let r={};if(t.fields.length!==n.fields.length)throw new Error("Could not type cast to object. Fields do not match.");return t.fields.forEach((a,i)=>{let u=a.title||"wrapper";if(/[A-Z]/.test(u[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");r[u]=M(n.fields[i],a)}),r}else if(n instanceof Array&&!t.hasConstr&&t.hasConstr!==void 0){let r={};if(t.fields.length!==n.length)throw new Error("Could not ype cast to object. Fields do not match.");return t.fields.forEach((a,i)=>{let u=a.title||"wrapper";if(/[A-Z]/.test(u[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");r[u]=M(n[i],a)}),r}throw new Error("Could not type cast to object.")}case"enum":{if(t.anyOf.length===1)return M(n,t.anyOf[0]);if(!(n instanceof j))throw new Error("Could not type cast to enum.");let r=t.anyOf.find(a=>a.index===n.index);if(!r||r.fields.length!==n.fields.length)throw new Error("Could not type cast to enum.");if(bt(t)){if(n.fields.length!==0)throw new Error("Could not type cast to boolean.");switch(n.index){case 0:return!1;case 1:return!0}throw new Error("Could not type cast to boolean.")}else if(kt(t)){switch(n.index){case 0:{if(n.fields.length!==1)throw new Error("Could not type cast to nullable object.");return M(n.fields[0],t.anyOf[0].fields[0])}case 1:{if(n.fields.length!==0)throw new Error("Could not type cast to nullable object.");return null}}throw new Error("Could not type cast to nullable object.")}switch(r.dataType){case"constructor":if(r.fields.length===0){if(/[A-Z]/.test(r.title[0]))return r.title;throw new Error("Could not type cast to enum.")}else{if(!/[A-Z]/.test(r.title))throw new Error("Could not type cast to enum. Enums need to start with an uppercase letter.");if(r.fields.length!==n.fields.length)throw new Error("Could not type cast to enum.");let a=r.fields[0].title?Object.fromEntries(r.fields.map((i,u)=>[i.title,M(n.fields[u],i)])):r.fields.map((i,u)=>M(n.fields[u],i));return{[r.title]:a}}}throw new Error("Could not type cast to enum.")}case"list":if(t.items instanceof Array){if(n instanceof j&&n.index===0&&t.hasConstr)return n.fields.map((r,a)=>M(r,t.items[a]));if(n instanceof Array&&!t.hasConstr)return n.map((r,a)=>M(r,t.items[a]));throw new Error("Could not type cast to tuple.")}else{if(!(n instanceof Array))throw new Error("Could not type cast to array.");return xt(n,t),n.map(r=>M(r,t.items))}case"map":{if(!(n instanceof Map))throw new Error("Could not type cast to map.");wt(n,t);let r=new Map;for(let[a,i]of n.entries())r.set(M(a,t.keys),M(i,t.values));return r}case void 0:return n}throw new Error("Could not type cast data.")}function z(n,e){let t=e;if(!t)throw new Error("Could not type cast struct.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof n!="bigint")throw new Error("Could not type cast to integer.");return gt(n,t),n}case"bytes":{if(typeof n!="string")throw new Error("Could not type cast to bytes.");return yt(n,t),n}case"constructor":{if(_t(t)){if(n!==void 0)throw new Error("Could not type cast to void.");return new j(0,[])}else if(typeof n!="object"||n===null||t.fields.length!==Object.keys(n).length)throw new Error("Could not type cast to constructor.");let r=t.fields.map(a=>z(n[a.title||"wrapper"],a));return t.hasConstr||t.hasConstr===void 0?new j(t.index,r):r}case"enum":{if(t.anyOf.length===1)return z(n,t.anyOf[0]);if(bt(t)){if(typeof n!="boolean")throw new Error("Could not type cast to boolean.");return new j(n?1:0,[])}else if(kt(t)){if(n===null)return new j(1,[]);{let r=t.anyOf[0].fields;if(r.length!==1)throw new Error("Could not type cast to nullable object.");return new j(0,[z(n,r[0])])}}switch(typeof n){case"string":{if(!/[A-Z]/.test(n[0]))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let r=t.anyOf.findIndex(a=>a.dataType==="constructor"&&a.fields.length===0&&a.title===n);if(r===-1)throw new Error("Could not type cast to enum.");return new j(r,[])}case"object":{if(n===null)throw new Error("Could not type cast to enum.");let r=Object.keys(n)[0];if(!/[A-Z]/.test(r))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let a=t.anyOf.find(u=>u.dataType==="constructor"&&u.title===r);if(!a)throw new Error("Could not type cast to enum.");let i=n[r];return new j(a.index,i instanceof Array?i.map((u,c)=>z(u,a.fields[c])):a.fields.map(u=>{let[c,m]=Object.entries(i).find(([p])=>p===u.title);return z(m,u)}))}}throw new Error("Could not type cast to enum.")}case"list":{if(!(n instanceof Array))throw new Error("Could not type cast to array/tuple.");if(t.items instanceof Array){let r=n.map((a,i)=>z(a,t.items[i]));return t.hasConstr?new j(0,r):r}else return xt(n,t),n.map(r=>z(r,t.items))}case"map":{if(!(n instanceof Map))throw new Error("Could not type cast to map.");wt(n,t);let r=new Map;for(let[a,i]of n.entries())r.set(z(a,t.keys),z(i,t.values));return r}case void 0:return n}throw new Error("Could not type cast struct.")}function gt(n,e){if(e.minimum&&n<BigInt(e.minimum))throw new Error(`Integer ${n} is below the minimum ${e.minimum}.`);if(e.maximum&&n>BigInt(e.maximum))throw new Error(`Integer ${n} is above the maxiumum ${e.maximum}.`);if(e.exclusiveMinimum&&n<=BigInt(e.exclusiveMinimum))throw new Error(`Integer ${n} is below the exclusive minimum ${e.exclusiveMinimum}.`);if(e.exclusiveMaximum&&n>=BigInt(e.exclusiveMaximum))throw new Error(`Integer ${n} is above the exclusive maximum ${e.exclusiveMaximum}.`)}function yt(n,e){if(e.enum&&!e.enum.some(t=>t===n))throw new Error(`None of the keywords match with '${n}'.`);if(e.minLength&&n.length/2<e.minLength)throw new Error(`Bytes need to have a length of at least ${e.minLength} bytes.`);if(e.maxLength&&n.length/2>e.maxLength)throw new Error(`Bytes can have a length of at most ${e.minLength} bytes.`)}function xt(n,e){if(e.minItems&&n.length<e.minItems)throw new Error(`Array needs to contain at least ${e.minItems} items.`);if(e.maxItems&&n.length>e.maxItems)throw new Error(`Array can contain at most ${e.maxItems} items.`);if(e.uniqueItems&&new Set(n).size!==n.length)throw new Error("Array constains duplicates.")}function wt(n,e){if(e.minItems&&n.size<e.minItems)throw new Error(`Map needs to contain at least ${e.minItems} items.`);if(e.maxItems&&n.size>e.maxItems)throw new Error(`Map can contain at most ${e.maxItems} items.`)}function bt(n){return n.anyOf&&n.anyOf[0]?.title==="False"&&n.anyOf[1]?.title==="True"}function _t(n){return n.index===0&&n.fields.length===0}function kt(n){return n.anyOf&&n.anyOf[0]?.title==="Some"&&n.anyOf[1]?.title==="None"}function Se(n,e){Object.keys(n).forEach(t=>{delete n[t]}),Object.assign(n,e)}var Pe=class{constructor(e){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e}validatorToAddress(e,t){let s=this.validatorToScriptHash(e);return t?o.BaseAddress.new(oe(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(s)),t.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(t.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):o.EnterpriseAddress.new(oe(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(s))).to_address().to_bech32(void 0)}credentialToAddress(e,t){return t?o.BaseAddress.new(oe(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash)),t.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(t.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):o.EnterpriseAddress.new(oe(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToRewardAddress(e){let t=this.validatorToScriptHash(e);return o.RewardAddress.new(oe(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t))).to_address().to_bech32(void 0)}credentialToRewardAddress(e){return o.RewardAddress.new(oe(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToScriptHash(e){switch(e.type){case"Native":return o.NativeScript.from_bytes(d(e.script)).hash(o.ScriptHashNamespace.NativeScript).to_hex();case"PlutusV1":return o.PlutusScript.from_bytes(d(q(e.script))).hash(o.ScriptHashNamespace.PlutusV1).to_hex();case"PlutusV2":return o.PlutusScript.from_bytes(d(q(e.script))).hash(o.ScriptHashNamespace.PlutusV2).to_hex();default:throw new Error("No variant matched")}}mintingPolicyToId(e){return this.validatorToScriptHash(e)}datumToHash(e){return o.hash_plutus_data(o.PlutusData.from_bytes(d(e))).to_hex()}scriptHashToCredential(e){return{type:"Script",hash:e}}keyHashToCredential(e){return{type:"Key",hash:e}}generatePrivateKey(){return sr()}generateSeedPhrase(){return nr()}unixTimeToSlot(e){return ft(e,be[this.lucid.network])}slotToUnixTime(e){return pt(e,be[this.lucid.network])}getAddressDetails(e){return D(e)}nativeScriptFromJson(e){return ur(e)}paymentCredentialOf(e){return ie(e)}stakeCredentialOf(e){return rr(e)}getMinAdaForOutput(e){let t=o.min_ada_required(e,o.BigNum.from_str(this.lucid.protocolParameters.coinsPerUtxoByte.toString()));return BigInt(t.to_str()).valueOf()}};function Te(n){try{return o.Address.from_bytes(d(n))}catch{try{return o.Address.from_bech32(n)}catch{throw new Error("Could not deserialize address.")}}}function D(n){try{let e=o.BaseAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())},s=e.stake_cred().kind()===0?{type:"Key",hash:y(e.stake_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.stake_cred().to_scripthash().to_bytes())};return{type:"Base",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},paymentCredential:t,stakeCredential:s}}catch{}try{let e=o.EnterpriseAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())};return{type:"Enterprise",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},paymentCredential:t}}catch{}try{let e=o.PointerAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())};return{type:"Pointer",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},paymentCredential:t}}catch{}try{let e=o.RewardAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:y(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:y(e.payment_cred().to_scripthash().to_bytes())};return{type:"Reward",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:y(e.to_address().to_bytes())},stakeCredential:t}}catch{}try{let e=(t=>{try{return o.ByronAddress.from_bytes(d(t))}catch{try{return o.ByronAddress.from_base58(t)}catch{throw new Error("Could not deserialize address.")}}})(n);return{type:"Byron",networkId:e.network_id(),address:{bech32:"",hex:y(e.to_address().to_bytes())}}}catch{}throw new Error("No address type matched for: "+n)}function ie(n){let{paymentCredential:e}=D(n);if(!e)throw new Error("The specified address does not contain a payment credential.");return e}function rr(n){let{stakeCredential:e}=D(n);if(!e)throw new Error("The specified address does not contain a stake credential.");return e}function sr(){return o.PrivateKey.generate_ed25519().to_bech32()}function nr(){return it(256)}function Ve(n){let e={};e.lovelace=BigInt(n.coin().to_str());let t=n.multiasset();if(t){let s=t.keys();for(let r=0;r<s.len();r++){let a=s.get(r),i=t.get(a),u=i.keys();for(let c=0;c<u.len();c++){let m=u.get(c),p=i.get(m),C=y(a.to_bytes())+y(m.name());e[C]=BigInt(p.to_str())}}}return e}function me(n){let e=o.MultiAsset.new(),t=n.lovelace,s=Object.keys(n);Array.from(new Set(s.filter(i=>i!=="lovelace").map(i=>i.slice(0,56)))).forEach(i=>{let u=s.filter(m=>m.slice(0,56)===i),c=o.Assets.new();u.forEach(m=>{c.insert(o.AssetName.new(d(m.slice(56))),o.BigNum.from_str(n[m].toString()))}),e.insert(o.ScriptHash.from_bytes(d(i)),c)});let a=o.Value.new(o.BigNum.from_str(t?t.toString():"0"));return(s.length>1||!t)&&a.set_multiasset(e),a}function ar(n){switch(n.get().kind()){case 0:return{type:"Native",script:y(n.get().as_native().to_bytes())};case 1:return{type:"PlutusV1",script:y(n.get().as_plutus_v1().to_bytes())};case 2:return{type:"PlutusV2",script:y(n.get().as_plutus_v2().to_bytes())};default:throw new Error("No variant matched.")}}function We(n){switch(n.type){case"Native":return o.ScriptRef.new(o.Script.new_native(o.NativeScript.from_bytes(d(n.script))));case"PlutusV1":return o.ScriptRef.new(o.Script.new_plutus_v1(o.PlutusScript.from_bytes(d(q(n.script)))));case"PlutusV2":return o.ScriptRef.new(o.Script.new_plutus_v2(o.PlutusScript.from_bytes(d(q(n.script)))));default:throw new Error("No variant matched.")}}function ue(n){let e=(()=>{try{return o.Address.from_bech32(n.address)}catch{return o.ByronAddress.from_base58(n.address).to_address()}})(),t=o.TransactionOutput.new(e,me(n.assets));return n.datumHash&&t.set_datum(o.Datum.new_data_hash(o.DataHash.from_bytes(d(n.datumHash)))),!n.datumHash&&n.datum&&t.set_datum(o.Datum.new_data(o.Data.new(o.PlutusData.from_bytes(d(n.datum))))),n.scriptRef&&t.set_script_ref(We(n.scriptRef)),o.TransactionUnspentOutput.new(o.TransactionInput.new(o.TransactionHash.from_bytes(d(n.txHash)),o.BigNum.from_str(n.outputIndex.toString())),t)}function Oe(n){let e=n.output()?.datum()?.as_data()?.get(),t=n.output()?.datum()?.as_data_hash()?.to_hex();return{txHash:y(n.input().transaction_id().to_bytes()),outputIndex:parseInt(n.input().index().to_str()),assets:Ve(n.output().amount()),address:n.output().address().as_byron()?n.output().address().as_byron()?.to_base58():n.output().address().to_bech32(void 0),datumHash:e?o.hash_plutus_data(e).to_hex():t,datum:e&&y(e.to_bytes()),scriptRef:n.output()?.script_ref()&&ar(n.output().script_ref())}}function oe(n){switch(n){case"Preview":return 0;case"Preprod":return 0;case"Custom":return 0;case"Mainnet":return 1;default:throw new Error("Network not found")}}function d(n){return st(n)}function y(n){return rt(n)}function Dr(n){return new TextDecoder().decode(Ke(new TextEncoder().encode(n)))}function vt(n){return y(new TextEncoder().encode(n))}function Mr(n){return o.PrivateKey.from_bech32(n).to_public().to_bech32()}function St(n){return mt(d(n)).toString(16).padStart(2,"0")}function or(n){if(n<0||n>65535)throw new Error(`Label ${n} out of range: min label 1 - max label 65535.`);let e=n.toString(16).padStart(4,"0");return"0"+e+St(e)+"0"}function ir(n){if(n.length!==8||!(n[0]==="0"&&n[7]==="0"))return null;let e=n.slice(1,5),t=parseInt(e,16);return n.slice(5,7)===St(e)?t:null}function Ct(n,e,t){let s=Number.isInteger(t)?or(t):"",r=e||"";if((r+s).length>64)throw new Error("Asset name size exceeds 32 bytes.");if(n.length!==56)throw new Error(`Policy id invalid: ${n}.`);return n+s+r}function Ce(n){let e=n.slice(0,56),t=n.slice(56)||null,s=ir(n.slice(56,64)),r=(()=>(Number.isInteger(s)?n.slice(64):n.slice(56))||null)();return{policyId:e,assetName:t,name:r,label:s}}function ur(n){return{type:"Native",script:y(o.encode_json_str_to_native_script(JSON.stringify(n),"",o.ScriptSchema.Node).to_bytes())}}function Rr(n,e,t){let s=t?ee.castTo(e,t):e;return y(o.apply_params_to_plutus_script(o.PlutusList.from_bytes(d(ee.to(s))),o.PlutusScript.from_bytes(d(q(n)))).to_bytes())}var It=(n,e)=>{let t=[],s=n.length,r=0;for(;r<s;)t.push(n.slice(r,r+=e));return t};function q(n){try{return o.PlutusScript.from_bytes(o.PlutusScript.from_bytes(d(n)).bytes()),n}catch{return y(o.PlutusScript.new(d(n)).to_bytes())}}function $r(...n){return n.reduce((e,t)=>{for(let s in t)Object.hasOwn(t,s)&&(e[s]=(e[s]||0n)+t[s]);return e},{})}function cr(n,e){if(n.length!==e.length)return!1;for(let t=0;t<e.length;t++)if(n[t]!==e[t])return!1;return!0}function lr(n,e){if(n.length!==e.length)return!1;let t=n.length,s=Math.floor(t/4),r=new Uint32Array(n.buffer,0,s),a=new Uint32Array(e.buffer,0,s);for(let i=s*4;i<t;i++)if(n[i]!==e[i])return!1;for(let i=0;i<r.length;i++)if(r[i]!==a[i])return!1;return!0}function Ae(n,e){return n.length<1e3?cr(n,e):lr(n,e)}function Et(...n){let e=0;for(let r of n)e+=r.length;let t=new Uint8Array(e),s=0;for(let r of n)t.set(r,s),s+=r.length;return t}var Ue=class{constructor(e){Object.defineProperty(this,"root",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.root=Ue.buildRecursively(e.map(t=>He(t)))}static fromHashes(e){return new this(e)}static buildRecursively(e){if(e.length<=0)return null;if(e.length===1)return{node:e[0],left:null,right:null};let t=Math.floor(e.length/2),[s,r]=[e.slice(0,t),e.slice(t)],a=this.buildRecursively(s),i=this.buildRecursively(r);return a===null||i===null?null:{node:Fe(a.node,i.node),left:a,right:i}}rootHash(){if(this.root===null)throw new Error("Merkle tree root hash not found.");return this.root.node}getProof(e){let t=He(e),s=[],r=a=>{if(a&&Ae(a.node,t))return!0;if(a?.right&&r(a.left))return s.push({right:a.right.node}),!0;if(a?.left&&r(a.right))return s.push({left:a.left.node}),!0};return r(this.root),s}size(){let e=t=>t===null?0:1+e(t.left)+e(t.right);return e(this.root)}static verify(e,t,s){let r=He(e),a=(i,u)=>{if(u.length<=0)return Ae(t,i);let[c,m]=[u[0],u.slice(1)];return c.left?a(Fe(c.left,i),m):c.right?a(Fe(i,c.right),m):!1};return a(r,s)}toString(){let e=t=>t===null?null:{node:y(t.node),left:e(t.left),right:e(t.right)};return JSON.stringify(e(this.root),null,2)}};function He(n){return new Uint8Array(new we().update(n).arrayBuffer())}function Fe(n,e){return He(Et(n,e))}var Bt={enableChangeSplitting:!0,changeCollateral:"5000000",changeMinUtxo:"100000000",changeNativeAssetChunkSize:20};var je=class{constructor(e,t){Object.defineProperty(this,"txSigned",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txSigned=t}async submit(){return await(this.lucid.wallet||this.lucid.provider).submitTx(y(this.txSigned.to_bytes()))}toString(){return y(this.txSigned.to_bytes())}toHash(){return o.hash_transaction(this.txSigned.body()).to_hex()}};var _e=class{constructor(e,t){Object.defineProperty(this,"txComplete",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"witnessSetBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fee",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exUnits",{enumerable:!0,configurable:!0,writable:!0,value:null}),this.lucid=e,this.txComplete=t,this.witnessSetBuilder=o.TransactionWitnessSetBuilder.new(),this.tasks=[],this.fee=parseInt(t.body().fee().to_str());let s=t.witness_set().redeemers();if(s){let r={cpu:0,mem:0};for(let a=0;a<s.len();a++){let i=s.get(a);r.cpu+=parseInt(i.ex_units().steps().to_str()),r.mem+=parseInt(i.ex_units().mem().to_str())}this.exUnits=r}}sign(){return this.tasks.push(async()=>{let e=await this.lucid.wallet.signTx(this.txComplete);this.witnessSetBuilder.add_existing(e)}),this}signWithPrivateKey(e){let t=o.PrivateKey.from_bech32(e),s=o.make_vkey_witness(o.hash_transaction(this.txComplete.body()),t);return this.witnessSetBuilder.add_vkey(s),this}async partialSign(){let e=await this.lucid.wallet.signTx(this.txComplete);return this.witnessSetBuilder.add_existing(e),y(e.to_bytes())}partialSignWithPrivateKey(e){let t=o.PrivateKey.from_bech32(e),s=o.make_vkey_witness(o.hash_transaction(this.txComplete.body()),t);this.witnessSetBuilder.add_vkey(s);let r=o.TransactionWitnessSetBuilder.new();return r.add_vkey(s),y(r.build().to_bytes())}assemble(e){return e.forEach(t=>{let s=o.TransactionWitnessSet.from_bytes(d(t));this.witnessSetBuilder.add_existing(s)}),this}async complete(){for(let t of this.tasks)await t();this.witnessSetBuilder.add_existing(this.txComplete.witness_set());let e=o.Transaction.new(this.txComplete.body(),this.witnessSetBuilder.build(),this.txComplete.auxiliary_data());return new je(this.lucid,e)}toString(){return y(this.txComplete.to_bytes())}toHash(){return o.hash_transaction(this.txComplete.body()).to_hex()}};var De=class{constructor(e){Object.defineProperty(this,"txBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"configuration",{enumerable:!0,configurable:!0,writable:!0,value:Bt}),this.lucid=e,this.txBuilder=o.TransactionBuilder.new(this.lucid.txBuilderConfig),this.tasks=[]}readFrom(e){return this.tasks.push(async t=>{for(let s of e){if(s.datumHash){s.datum=ee.to(await t.lucid.datumOf(s));let a=o.PlutusData.from_bytes(d(s.datum));t.txBuilder.add_plutus_data(a)}let r=ue(s);t.txBuilder.add_reference_input(r)}}),this}config(e){return this.configuration={...this.configuration,...e},this}collectFrom(e,t){return this.tasks.push(async s=>{for(let r of e){r.datumHash&&!r.datum&&(r.datum=ee.to(await s.lucid.datumOf(r)));let a=ue(r);s.txBuilder.add_input(a,t&&o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),r.datumHash&&r.datum?o.PlutusData.from_bytes(d(r.datum)):void 0,void 0)))}}),this}mintAssets(e,t){return this.tasks.push(s=>{let r=Object.keys(e),a=r[0].slice(0,56),i=o.MintAssets.new();r.forEach(c=>{if(c.slice(0,56)!==a)throw new Error("Only one policy id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different policy ids.");i.insert(o.AssetName.new(d(c.slice(56))),o.Int.from_str(e[c].toString()))});let u=o.ScriptHash.from_bytes(d(a));s.txBuilder.add_mint(u,i,t?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),void 0,void 0)):void 0)}),this}payToAddress(e,t){return this.tasks.push(s=>{let r=o.TransactionOutput.new(ke(e,s.lucid),me(t)),a=s.lucid.utils.getMinAdaForOutput(r);t.lovelace=t.lovelace>a?t.lovelace:a,r=o.TransactionOutput.new(ke(e,s.lucid),me(t)),s.txBuilder.add_output(r)}),this}payToAddressWithData(e,t,s){return this.tasks.push(r=>{if(typeof t=="string"&&(t={asHash:t}),[t.hash,t.asHash,t.inline].filter(c=>c).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let a=(c,m)=>{let p=o.TransactionOutput.new(ke(e,r.lucid),me(c));if(m.hash)p.set_datum(o.Datum.new_data_hash(o.DataHash.from_hex(m.hash)));else if(m.asHash){let E=o.PlutusData.from_bytes(d(m.asHash));p.set_datum(o.Datum.new_data_hash(o.hash_plutus_data(E))),r.txBuilder.add_plutus_data(E)}else if(m.inline){let E=o.PlutusData.from_bytes(d(m.inline));p.set_datum(o.Datum.new_data(o.Data.new(E)))}let C=m.scriptRef;return C&&p.set_script_ref(We(C)),p},i=a(s,t),u=this.lucid.utils.getMinAdaForOutput(i);s.lovelace=s.lovelace>u?s.lovelace:u,i=a(s,t),r.txBuilder.add_output(i)}),this}payToContract(e,t,s){if(typeof t=="string"&&(t={asHash:t}),!(t.hash||t.asHash||t.inline))throw new Error("No datum set. Script output becomes unspendable without datum.");return this.payToAddressWithData(e,t,s)}delegateTo(e,t,s){return this.tasks.push(r=>{let a=r.lucid.utils.getAddressDetails(e);if(a.type!=="Reward"||!a.stakeCredential)throw new Error("Not a reward address provided.");let i=a.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(a.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(a.stakeCredential.hash)));r.txBuilder.add_certificate(o.Certificate.new_stake_delegation(o.StakeDelegation.new(i,o.Ed25519KeyHash.from_bech32(t))),s?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(s)),void 0,void 0)):void 0)}),this}registerStake(e){return this.tasks.push(t=>{let s=t.lucid.utils.getAddressDetails(e);if(s.type!=="Reward"||!s.stakeCredential)throw new Error("Not a reward address provided.");let r=s.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(s.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(s.stakeCredential.hash)));t.txBuilder.add_certificate(o.Certificate.new_stake_registration(o.StakeRegistration.new(r)),void 0)}),this}deregisterStake(e,t){return this.tasks.push(s=>{let r=s.lucid.utils.getAddressDetails(e);if(r.type!=="Reward"||!r.stakeCredential)throw new Error("Not a reward address provided.");let a=r.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(r.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(r.stakeCredential.hash)));s.txBuilder.add_certificate(o.Certificate.new_stake_deregistration(o.StakeDeregistration.new(a)),t?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),void 0,void 0)):void 0)}),this}registerPool(e){return this.tasks.push(async t=>{let s=await Tt(e,t.lucid),r=o.Certificate.new_pool_registration(s);t.txBuilder.add_certificate(r,void 0)}),this}updatePool(e){return this.tasks.push(async t=>{let s=await Tt(e,t.lucid);s.set_is_update(!0);let r=o.Certificate.new_pool_registration(s);t.txBuilder.add_certificate(r,void 0)}),this}retirePool(e,t){return this.tasks.push(s=>{let r=o.Certificate.new_pool_retirement(o.PoolRetirement.new(o.Ed25519KeyHash.from_bech32(e),t));s.txBuilder.add_certificate(r,void 0)}),this}withdraw(e,t,s){return this.tasks.push(r=>{r.txBuilder.add_withdrawal(o.RewardAddress.from_address(ke(e,r.lucid)),o.BigNum.from_str(t.toString()),s?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(s)),void 0,void 0)):void 0)}),this}addSigner(e){let t=this.lucid.utils.getAddressDetails(e);if(!t.paymentCredential&&!t.stakeCredential)throw new Error("Not a valid address.");let s=t.type==="Reward"?t.stakeCredential:t.paymentCredential;if(s.type==="Script")throw new Error("Only key hashes are allowed as signers.");return this.addSignerKey(s.hash)}addSignerKey(e){return this.tasks.push(t=>{t.txBuilder.add_required_signer(o.Ed25519KeyHash.from_bytes(d(e)))}),this}validFrom(e){return this.tasks.push(t=>{let s=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_validity_start_interval(o.BigNum.from_str(s.toString()))}),this}validTo(e){return this.tasks.push(t=>{let s=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_ttl(o.BigNum.from_str(s.toString()))}),this}attachMetadata(e,t){return this.tasks.push(s=>{s.txBuilder.add_json_metadatum(o.BigNum.from_str(e.toString()),JSON.stringify(t))}),this}attachMetadataWithConversion(e,t){return this.tasks.push(s=>{s.txBuilder.add_json_metadatum_with_schema(o.BigNum.from_str(e.toString()),JSON.stringify(t),o.MetadataJsonSchema.BasicConversions)}),this}addNetworkId(e){return this.tasks.push(t=>{t.txBuilder.set_network_id(o.NetworkId.from_bytes(d(e.toString(16).padStart(2,"0"))))}),this}attachSpendingValidator(e){return this.tasks.push(t=>{Ne(t,e)}),this}attachMintingPolicy(e){return this.tasks.push(t=>{Ne(t,e)}),this}attachCertificateValidator(e){return this.tasks.push(t=>{Ne(t,e)}),this}attachWithdrawalValidator(e){return this.tasks.push(t=>{Ne(t,e)}),this}applyIf(e,t){return e&&this.tasks.push(s=>t(s)),this}apply(e){return this.tasks.push(t=>e(t)),this}compose(e){return e&&(this.tasks=this.tasks.concat(e.tasks)),this}async complete(e){let{enableChangeSplitting:t}=this.configuration;if([e?.change?.outputData?.hash,e?.change?.outputData?.asHash,e?.change?.outputData?.inline].filter(u=>u).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let s=this.tasks.shift();for(;s;)await s(this),s=this.tasks.shift();let r=await this.lucid.wallet.getUtxosCore(),a=await this.lucid.wallet.getCollateralCore(),i=ke(e?.change?.address||await this.lucid.wallet.address(),this.lucid);return(e?.coinSelection||e?.coinSelection===void 0)&&this.txBuilder.add_inputs_from(r,i,Uint32Array.from([200,1e3,1500,800,800,5e3])),t&&await this.splitChange(),this.txBuilder.balance(i,(()=>e?.change?.outputData?.hash?o.Datum.new_data_hash(o.DataHash.from_hex(e.change.outputData.hash)):e?.change?.outputData?.asHash?(this.txBuilder.add_plutus_data(o.PlutusData.from_bytes(d(e.change.outputData.asHash))),o.Datum.new_data_hash(o.hash_plutus_data(o.PlutusData.from_bytes(d(e.change.outputData.asHash))))):e?.change?.outputData?.inline?o.Datum.new_data(o.Data.new(o.PlutusData.from_bytes(d(e.change.outputData.inline)))):void 0)()),new _e(this.lucid,await this.txBuilder.construct(a||r,i,e?.nativeUplc===void 0?!0:e?.nativeUplc))}async toString(){let e=this.tasks.shift();for(;e;)await e(this),e=this.tasks.shift();return y(this.txBuilder.to_bytes())}async splitChange(){let{coinsPerUtxoByte:e}=await this.lucid.protocolParameters,{changeNativeAssetChunkSize:t,changeMinUtxo:s}=this.configuration,r=this.txBuilder.get_explicit_input().checked_sub(this.txBuilder.get_explicit_output()),a=r.coin(),i=Ve(r),u=Object.keys(i).filter(h=>h!=="lovelace").sort((h,_)=>h.localeCompare(_));i=u.reduce((h,_)=>Object.assign(h,{[_]:i[_]}),{});let c=Math.ceil(u.length/t),m=o.Address.from_bech32(await this.lucid.wallet.address()),p=this.txBuilder.outputs();for(let h=0;h<p.len();h++){let _=p.get(h);(!m||_.address().to_bech32(void 0).length>m.to_bech32(void 0).length)&&(m=_.address())}let E=o.min_ada_required(o.TransactionOutput.new(m,me(i)),o.BigNum.from_str(e.toString())).checked_mul(o.BigNum.from_str(c.toString())).compare(a)<0;if(r.multiasset()&&E){let h=It(u,20),_=h.length;for(let[I,w]of h.entries()){if(I===_-1)continue;let O=me(w.reduce((pe,te)=>Object.assign(pe,{[te]:i[te]}),{})),B=o.min_ada_required(o.TransactionOutput.new(o.Address.from_bech32(await this.lucid.wallet.address()),O),o.BigNum.from_str(e.toString()));O.set_coin(B),a=a.checked_sub(B),this.txBuilder.add_output(o.TransactionOutput.new(o.Address.from_bech32(await this.lucid.wallet.address()),O))}}for(;a.checked_div(o.BigNum.from_str("2")).compare(o.BigNum.from_str(s))>=0;){let h=a.checked_div(o.BigNum.from_str("2"));a=a.checked_sub(h),this.txBuilder.add_output(o.TransactionOutput.new(o.Address.from_bech32(await this.lucid.wallet.address()),o.Value.new(h)))}}};function Ne(n,{type:e,script:t}){if(e==="Native")return n.txBuilder.add_native_script(o.NativeScript.from_bytes(d(t)));if(e==="PlutusV1")return n.txBuilder.add_plutus_script(o.PlutusScript.from_bytes(d(q(t))));if(e==="PlutusV2")return n.txBuilder.add_plutus_v2_script(o.PlutusScript.from_bytes(d(q(t))));throw new Error("No variant matched.")}async function Tt(n,e){let t=o.Ed25519KeyHashes.new();n.owners.forEach(i=>{let{stakeCredential:u}=e.utils.getAddressDetails(i);if(u?.type==="Key")t.add(o.Ed25519KeyHash.from_hex(u.hash));else throw new Error("Only key hashes allowed for pool owners.")});let s=n.metadataUrl?await fetch(n.metadataUrl).then(i=>i.arrayBuffer()):null,r=s?o.PoolMetadataHash.from_bytes(o.hash_blake2b256(new Uint8Array(s))):null,a=o.Relays.new();return n.relays.forEach(i=>{switch(i.type){case"SingleHostIp":{let u=i.ipV4?o.Ipv4.new(new Uint8Array(i.ipV4.split(".").map(m=>parseInt(m)))):void 0,c=i.ipV6?o.Ipv6.new(d(i.ipV6.replaceAll(":",""))):void 0;a.add(o.Relay.new_single_host_addr(o.SingleHostAddr.new(i.port,u,c)));break}case"SingleHostDomainName":{a.add(o.Relay.new_single_host_name(o.SingleHostName.new(i.port,o.DNSRecordAorAAAA.new(i.domainName))));break}case"MultiHost":{a.add(o.Relay.new_multi_host_name(o.MultiHostName.new(o.DNSRecordSRV.new(i.domainName))));break}}}),o.PoolRegistration.new(o.PoolParams.new(o.Ed25519KeyHash.from_bech32(n.poolId),o.VRFKeyHash.from_hex(n.vrfKeyHash),o.BigNum.from_str(n.pledge.toString()),o.BigNum.from_str(n.cost.toString()),o.UnitInterval.from_float(n.margin),o.RewardAddress.from_address(ke(n.rewardAddress,e)),t,a,r?o.PoolMetadata.new(o.Url.new(n.metadataUrl),r):void 0))}function ke(n,e){let{type:t,networkId:s}=e.utils.getAddressDetails(n),r=oe(e.network);if(s!==r)throw new Error(`Invalid address: Expected address with network id ${r}, but got ${s}`);return t==="Byron"?o.ByronAddress.from_base58(n).to_address():o.Address.from_bech32(n)}function Pt(n,e={addressType:"Base",accountIndex:0,network:"Mainnet"}){function t(h){if(typeof h!="number")throw new Error("Type number required here!");return 2147483648+h}let s=ot(n),a=o.Bip32PrivateKey.from_bip39_entropy(d(s),e.password?new TextEncoder().encode(e.password):new Uint8Array).derive(t(1852)).derive(t(1815)).derive(t(e.accountIndex)),i=a.derive(0).derive(0).to_raw_key(),u=a.derive(2).derive(0).to_raw_key(),c=i.to_public().hash(),m=u.to_public().hash(),p=e.network==="Mainnet"?1:0,C=e.addressType==="Base"?o.BaseAddress.new(p,o.StakeCredential.from_keyhash(c),o.StakeCredential.from_keyhash(m)).to_address().to_bech32(void 0):o.EnterpriseAddress.new(p,o.StakeCredential.from_keyhash(c)).to_address().to_bech32(void 0),E=e.addressType==="Base"?o.RewardAddress.new(p,o.StakeCredential.from_keyhash(m)).to_address().to_bech32(void 0):null;return{address:C,rewardAddress:E,paymentKey:i.to_bech32(),stakeKey:e.addressType==="Base"?u.to_bech32():null}}function Ot(n,e,t){let s=[],r=n.body().inputs();for(let h=0;h<r.len();h++){let _=r.get(h),I=y(_.transaction_id().to_bytes()),w=parseInt(_.index().to_str()),A=t.find(O=>O.txHash===I&&O.outputIndex===w);if(A){let{paymentCredential:O}=D(A.address);s.push(O?.hash)}}let a=n.body();function i(h){let _=h.certs();if(_)for(let I=0;I<_.len();I++){let w=_.get(I);if(w.kind()===0)w.as_stake_registration()?.stake_credential()?.kind();else if(w.kind()===1){let A=w.as_stake_deregistration()?.stake_credential();if(A?.kind()===0){let O=y(A.to_keyhash().to_bytes());s.push(O)}}else if(w.kind()===2){let A=w.as_stake_delegation()?.stake_credential();if(A?.kind()===0){let O=y(A.to_keyhash().to_bytes());s.push(O)}}else if(w.kind()===3){let A=w.as_pool_registration()?.pool_params(),O=A?.pool_owners();if(!O)break;for(let B=0;B<O.len();B++){let pe=y(O.get(B).to_bytes());s.push(pe)}let R=A.operator().to_hex();s.push(R)}else if(w.kind()===4){let A=w.as_pool_retirement().pool_keyhash().to_hex();s.push(A)}else if(w.kind()===6){let A=w.as_move_instantaneous_rewards_cert()?.move_instantaneous_reward().as_to_stake_creds()?.keys();if(!A)break;for(let O=0;O<A.len();O++){let R=A.get(O);if(R.kind()===0){let B=y(R.to_keyhash().to_bytes());s.push(B)}}}}}a.certs()&&i(a);let u=a.withdrawals();function c(h){let _=h.keys();for(let I=0;I<_.len();I++){let w=_.get(I).payment_cred();w.kind()===0&&s.push(w.to_keyhash().to_hex())}}u&&c(u);let m=n.witness_set().native_scripts();function p(h){for(let _=0;_<h.len();_++){let I=h.get(_);if(I.kind()===0){let w=y(I.as_script_pubkey().addr_keyhash().to_bytes());s.push(w)}if(I.kind()===1){p(I.as_script_all().native_scripts());return}if(I.kind()===2){p(I.as_script_any().native_scripts());return}if(I.kind()===3){p(I.as_script_n_of_k().native_scripts());return}}}m&&p(m);let C=a.required_signers();if(C)for(let h=0;h<C.len();h++)s.push(y(C.get(h).to_bytes()));let E=a.collateral();if(E)for(let h=0;h<E.len();h++){let _=E.get(h),I=y(_.transaction_id().to_bytes()),w=parseInt(_.index().to_str()),A=t.find(O=>O.txHash===I&&O.outputIndex===w);if(A){let{paymentCredential:O}=D(A.address);s.push(O?.hash)}}return s.filter(h=>e.includes(h))}function Ie(n,e,t){let s=T.HeaderMap.new();s.set_algorithm_id(T.Label.from_algorithm_id(T.AlgorithmId.EdDSA)),s.set_header(T.Label.new_text("address"),T.CBORValue.new_bytes(d(n)));let r=T.ProtectedHeaderMap.new(s),a=T.HeaderMap.new(),i=T.Headers.new(r,a),u=T.COSESign1Builder.new(i,d(e),!1),c=u.make_data_to_sign().to_bytes(),m=o.PrivateKey.from_bech32(t),p=m.sign(c).to_bytes(),C=u.build(p),E=T.COSEKey.new(T.Label.from_key_type(T.KeyType.OKP));return E.set_algorithm_id(T.Label.from_algorithm_id(T.AlgorithmId.EdDSA)),E.set_header(T.Label.new_int(T.Int.new_negative(T.BigNum.from_str("1"))),T.CBORValue.new_int(T.Int.new_i32(6))),E.set_header(T.Label.new_int(T.Int.new_negative(T.BigNum.from_str("2"))),T.CBORValue.new_bytes(m.to_public().as_bytes())),{signature:y(C.to_bytes()),key:y(E.to_bytes())}}function At(n,e,t,s){let r=T.COSESign1.from_bytes(d(s.signature)),a=T.COSEKey.from_bytes(d(s.key)),i=r.headers().protected().deserialized_headers(),u=(()=>{try{return y(i.header(T.Label.new_text("address"))?.as_bytes())}catch{throw new Error("No address found in signature.")}})(),c=(()=>{try{let w=i.algorithm_id()?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),m=(()=>{try{let w=a.algorithm_id()?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),p=(()=>{try{let w=a.header(T.Label.new_int(T.Int.new_negative(T.BigNum.from_str("1"))))?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Curve.")}})(),C=(()=>{try{let w=a.key_type().as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Key Type.")}})(),E=(()=>{try{return o.PublicKey.from_bytes(a.header(T.Label.new_int(T.Int.new_negative(T.BigNum.from_str("2"))))?.as_bytes())}catch{throw new Error("No public key found.")}})(),h=(()=>{try{return y(r.payload())}catch{throw new Error("No payload found.")}})(),_=o.Ed25519Signature.from_bytes(r.signature()),I=r.signed_data(void 0,void 0).to_bytes();return u!==n||e!==E.hash().to_hex()||c!==m&&c!==T.AlgorithmId.EdDSA||p!==6||C!==1||h!==t?!1:E.verify(I,_)}var Me=class{constructor(e,t,s){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"payload",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.address=t,this.payload=s}sign(){return this.lucid.wallet.signMessage(this.address,this.payload)}signWithPrivateKey(e){let{paymentCredential:t,stakeCredential:s,address:{hex:r}}=this.lucid.utils.getAddressDetails(this.address),a=t?.hash||s?.hash,i=o.PrivateKey.from_bech32(e).to_public().hash().to_hex();if(!a||a!==i)throw new Error(`Cannot sign message for address: ${this.address}.`);return Ie(r,this.payload,e)}};var Re=class{constructor(e,t=et){Object.defineProperty(this,"ledger",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"mempool",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"chain",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"blockHeight",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"slot",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"time",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"datumTable",{enumerable:!0,configurable:!0,writable:!0,value:{}});let s="00".repeat(32);this.blockHeight=0,this.slot=0,this.time=Date.now(),this.ledger={},e.forEach(({address:r,assets:a},i)=>{this.ledger[s+i]={utxo:{txHash:s,outputIndex:i,address:r,assets:a},spent:!1}}),this.protocolParameters=t}now(){return this.time}awaitSlot(e=1){this.slot+=e,this.time+=e*1e3;let t=this.blockHeight;if(this.blockHeight=Math.floor(this.slot/20),this.blockHeight>t){for(let[s,{utxo:r,spent:a}]of Object.entries(this.mempool))this.ledger[s]={utxo:r,spent:a};for(let[s,{spent:r}]of Object.entries(this.ledger))r&&delete this.ledger[s];this.mempool={}}}awaitBlock(e=1){this.blockHeight+=e,this.slot+=e*20,this.time+=e*20*1e3;for(let[t,{utxo:s,spent:r}]of Object.entries(this.mempool))this.ledger[t]={utxo:s,spent:r};for(let[t,{spent:s}]of Object.entries(this.ledger))s&&delete this.ledger[t];this.mempool={}}getUtxos(e){let t=Object.values(this.ledger).flatMap(({utxo:s})=>{if(typeof e=="string")return e===s.address?s:[];{let{paymentCredential:r}=D(s.address);return r?.hash===e.hash?s:[]}});return Promise.resolve(t)}getProtocolParameters(){return Promise.resolve(this.protocolParameters)}getDatum(e){return Promise.resolve(this.datumTable[e])}getUtxosWithUnit(e,t){let s=Object.values(this.ledger).flatMap(({utxo:r})=>{if(typeof e=="string")return e===r.address&&r.assets[t]>0n?r:[];{let{paymentCredential:a}=D(r.address);return a?.hash===e.hash&&r.assets[t]>0n?r:[]}});return Promise.resolve(s)}getUtxosByOutRef(e){return Promise.resolve(e.flatMap(t=>this.ledger[t.txHash+t.outputIndex]?.utxo||[]))}getUtxoByUnit(e){let t=Object.values(this.ledger).flatMap(({utxo:s})=>s.assets[e]>0n?s:[]);if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return Promise.resolve(t[0])}getDelegation(e){return Promise.resolve({poolId:this.chain[e]?.delegation?.poolId||null,rewards:this.chain[e]?.delegation?.rewards||0n})}awaitTx(e){return this.mempool[e+0]&&this.awaitBlock(),Promise.resolve(!0)}distributeRewards(e){for(let[t,{registeredStake:s,delegation:r}]of Object.entries(this.chain))s&&r.poolId&&(this.chain[t]={registeredStake:s,delegation:{poolId:r.poolId,rewards:r.rewards+=e}});this.awaitBlock()}submitTx(e){let t=o.Transaction.from_bytes(d(e)),s=t.body(),r=t.witness_set(),a=r.plutus_data(),i=o.hash_transaction(s).to_hex(),u=s.validity_start_interval()?parseInt(s.validity_start_interval().to_str()):null,c=s.ttl()?parseInt(s.ttl().to_str()):null;if(Number.isInteger(u)&&this.slot<u)throw new Error(`Lower bound (${u}) not in slot range (${this.slot}).`);if(Number.isInteger(c)&&this.slot>c)throw new Error(`Upper bound (${c}) not in slot range (${this.slot}).`);let m=(()=>{let l={};for(let f=0;f<(a?.len()||0);f++){let k=a.get(f),b=o.hash_plutus_data(k).to_hex();l[b]=y(k.to_bytes())}return l})(),p=new Set,C=(()=>{let l=[];for(let f=0;f<(r.vkeys()?.len()||0);f++){let k=r.vkeys().get(f),b=k.vkey().public_key(),P=b.hash().to_hex();if(!b.verify(d(i),k.signature()))throw new Error(`Invalid vkey witness. Key hash: ${P}`);l.push(P)}return l})(),E=o.Ed25519KeyHashes.new();C.forEach(l=>E.add(o.Ed25519KeyHash.from_hex(l)));let h=(()=>{let l=[];for(let f=0;f<(r.native_scripts()?.len()||0);f++){let k=r.native_scripts().get(f),b=k.hash(o.ScriptHashNamespace.NativeScript).to_hex();if(!k.verify(Number.isInteger(u)?o.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?o.BigNum.from_str(c.toString()):void 0,E))throw new Error(`Invalid native script witness. Script hash: ${b}`);for(let P=0;P<k.get_required_signers().len();P++){let $=k.get_required_signers().get(P).to_hex();p.add($)}l.push(b)}return l})(),_={},I=[],w=(()=>{let l=[];for(let f=0;f<(r.plutus_scripts()?.len()||0);f++){let b=r.plutus_scripts().get(f).hash(o.ScriptHashNamespace.PlutusV1).to_hex();l.push(b)}for(let f=0;f<(r.plutus_v2_scripts()?.len()||0);f++){let b=r.plutus_v2_scripts().get(f).hash(o.ScriptHashNamespace.PlutusV2).to_hex();l.push(b)}return l})(),A=s.inputs();A.sort();let O=[];for(let l=0;l<A.len();l++){let f=A.get(l),k=f.transaction_id().to_hex()+f.index().to_str(),b=this.ledger[k],{entry:P,type:$}=b?{entry:b,type:"Ledger"}:{entry:this.mempool[k],type:"Mempool"};if(!P||P.spent)throw new Error(`Could not spend UTxO: ${JSON.stringify({txHash:P?.utxo.txHash,outputIndex:P?.utxo.outputIndex})}
It does not exist or was already spent.`);let re=P.utxo.scriptRef;if(re)switch(re.type){case"Native":{let fe=o.NativeScript.from_bytes(d(re.script));_[fe.hash(o.ScriptHashNamespace.NativeScript).to_hex()]=fe;break}case"PlutusV1":{let fe=o.PlutusScript.from_bytes(d(re.script));I.push(fe.hash(o.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{let fe=o.PlutusScript.from_bytes(d(re.script));I.push(fe.hash(o.ScriptHashNamespace.PlutusV2).to_hex());break}}P.utxo.datumHash&&p.add(P.utxo.datumHash),O.push({entry:P,type:$})}for(let l=0;l<(s.reference_inputs()?.len()||0);l++){let f=s.reference_inputs().get(l),k=f.transaction_id().to_hex()+f.index().to_str(),b=this.ledger[k]||this.mempool[k];if(!b||b.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:b?.utxo.txHash,outputIndex:b?.utxo.outputIndex})}
It does not exist or was already spent.`);let P=b.utxo.scriptRef;if(P)switch(P.type){case"Native":{let $=o.NativeScript.from_bytes(d(P.script));_[$.hash(o.ScriptHashNamespace.NativeScript).to_hex()]=$;break}case"PlutusV1":{let $=o.PlutusScript.from_bytes(d(P.script));I.push($.hash(o.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{let $=o.PlutusScript.from_bytes(d(P.script));I.push($.hash(o.ScriptHashNamespace.PlutusV2).to_hex());break}}b.utxo.datumHash&&p.add(b.utxo.datumHash)}let R=(()=>{let l={0:"Spend",1:"Mint",2:"Cert",3:"Reward"},f=[];for(let k=0;k<(r.redeemers()?.len()||0);k++){let b=r.redeemers().get(k);f.push({tag:l[b.tag().kind()],index:parseInt(b.index().to_str())})}return f})();function B(l,f,k){switch(l.type){case"Key":{if(!C.includes(l.hash))throw new Error(`Missing vkey witness. Key hash: ${l.hash}`);p.add(l.hash);break}case"Script":{if(h.includes(l.hash)){p.add(l.hash);break}else if(_[l.hash]){if(!_[l.hash].verify(Number.isInteger(u)?o.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?o.BigNum.from_str(c.toString()):void 0,E))throw new Error(`Invalid native script witness. Script hash: ${l.hash}`);break}else if((w.includes(l.hash)||I.includes(l.hash))&&R.find(b=>b.tag===f&&b.index===k)){p.add(l.hash);break}throw new Error(`Missing script witness. Script hash: ${l.hash}`)}}}for(let l=0;l<(s.collateral()?.len()||0);l++){let f=s.collateral().get(l),k=f.transaction_id().to_hex()+f.index().to_str(),b=this.ledger[k]||this.mempool[k];if(!b||b.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:b?.utxo.txHash,outputIndex:b?.utxo.outputIndex})}
It does not exist or was already spent.`);let{paymentCredential:P}=D(b.utxo.address);if(P?.type==="Script")throw new Error("Collateral inputs can only contain vkeys.");B(P,null,null)}for(let l=0;l<(s.required_signers()?.len()||0);l++){let f=s.required_signers().get(l);B({type:"Key",hash:f.to_hex()},null,null)}for(let l=0;l<(s.mint()?.keys().len()||0);l++){let f=s.mint().keys().get(l).to_hex();B({type:"Script",hash:f},"Mint",l)}let pe=[];for(let l=0;l<(s.withdrawals()?.keys().len()||0);l++){let f=s.withdrawals().keys().get(l),k=BigInt(s.withdrawals().get(f).to_str()),b=f.to_address().to_bech32(void 0),{stakeCredential:P}=D(b);if(B(P,"Reward",l),this.chain[b]?.delegation.rewards!==k)throw new Error("Withdrawal amount doesn't match actual reward balance.");pe.push({rewardAddress:b,withdrawal:k})}let te=[];for(let l=0;l<(s.certs()?.len()||0);l++){let f=s.certs().get(l);switch(f.kind()){case 0:{let k=f.as_stake_registration(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),k.stake_credential()).to_address().to_bech32(void 0);if(this.chain[b]?.registeredStake)throw new Error(`Stake key is already registered. Reward address: ${b}`);te.push({type:"Registration",rewardAddress:b});break}case 1:{let k=f.as_stake_deregistration(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),k.stake_credential()).to_address().to_bech32(void 0),{stakeCredential:P}=D(b);if(B(P,"Cert",l),!this.chain[b]?.registeredStake)throw new Error(`Stake key is already deregistered. Reward address: ${b}`);te.push({type:"Deregistration",rewardAddress:b});break}case 2:{let k=f.as_stake_delegation(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),k.stake_credential()).to_address().to_bech32(void 0),P=k.pool_keyhash().to_bech32("pool"),{stakeCredential:$}=D(b);if(B($,"Cert",l),!this.chain[b]?.registeredStake&&!te.find(re=>re.type==="Registration"&&re.rewardAddress===b))throw new Error(`Stake key is not registered. Reward address: ${b}`);te.push({type:"Delegation",rewardAddress:b,poolId:P});break}}}O.forEach(({entry:{utxo:l}},f)=>{let{paymentCredential:k}=D(l.address);B(k,"Spend",f)});let Nt=(()=>{let l=[];for(let f=0;f<s.outputs().len();f++){let k=s.outputs().get(f),b=o.TransactionUnspentOutput.new(o.TransactionInput.new(o.TransactionHash.from_hex(i),o.BigNum.from_str(f.toString())),k),P=Oe(b);P.datumHash&&p.add(P.datumHash),l.push({utxo:P,spent:!1})}return l})(),[Je]=C.filter(l=>!p.has(l));if(Je)throw new Error(`Extraneous vkey witness. Key hash: ${Je}`);let[Xe]=h.filter(l=>!p.has(l));if(Xe)throw new Error(`Extraneous native script. Script hash: ${Xe}`);let[Ge]=w.filter(l=>!p.has(l));if(Ge)throw new Error(`Extraneous plutus script. Script hash: ${Ge}`);let[Ye]=Object.keys(m).filter(l=>!p.has(l));if(Ye)throw new Error(`Extraneous plutus data. Datum hash: ${Ye}`);O.forEach(({entry:l,type:f})=>{let k=l.utxo.txHash+l.utxo.outputIndex;l.spent=!0,f==="Ledger"?this.ledger[k]=l:f==="Mempool"&&(this.mempool[k]=l)}),pe.forEach(({rewardAddress:l,withdrawal:f})=>{this.chain[l].delegation.rewards-=f}),te.forEach(({type:l,rewardAddress:f,poolId:k})=>{switch(l){case"Registration":{this.chain[f]?this.chain[f].registeredStake=!0:this.chain[f]={registeredStake:!0,delegation:{poolId:null,rewards:0n}};break}case"Deregistration":{this.chain[f].registeredStake=!1,this.chain[f].delegation.poolId=null;break}case"Delegation":this.chain[f].delegation.poolId=k}}),Nt.forEach(({utxo:l,spent:f})=>{this.mempool[l.txHash+l.outputIndex]={utxo:l,spent:f}});for(let[l,f]of Object.entries(m))this.datumTable[l]=f;return Promise.resolve(i)}log(){function e(r){let a=r==="lovelace"?"1":r,i=0;for(let p=0;p<a.length;p++)i+=a.charCodeAt(p);let u=i*123%256,c=i*321%256,m=i*213%256;return"#"+((1<<24)+(u<<16)+(c<<8)+m).toString(16).slice(1)}let t={},s={};for(let{utxo:r}of Object.values(this.ledger))for(let[a,i]of Object.entries(r.assets))s[r.address]?s[r.address]?.[a]?s[r.address][a]+=i:s[r.address][a]=i:s[r.address]={[a]:i},t[a]?t[a]+=i:t[a]=i;console.log(`
%cBlockchain state`,"color:purple"),console.log(`
    Block height:   %c${this.blockHeight}%c
    Slot:           %c${this.slot}%c
    Unix time:      %c${this.time}
  `,"color:yellow","color:white","color:yellow","color:white","color:yellow"),console.log(`
`);for(let[r,a]of Object.entries(s)){console.log(`Address: %c${r}`,"color:blue",`
`);for(let[i,u]of Object.entries(a)){let c=Math.max(Math.floor(60*(Number(u)/Number(t[i]))),1);console.log(`%c${"\u2586".repeat(c)+" ".repeat(60-c)}`,`color: ${e(i)}`,"",`${i}:`,u,"")}console.log(`
${"\u2581".repeat(60)}
`)}}};var $e=class{constructor(){Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"txBuilderConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"provider",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"network",{enumerable:!0,configurable:!0,writable:!0,value:"Mainnet"}),Object.defineProperty(this,"utils",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}static async new({provider:e,network:t,protocolParameters:s}){let r=new this;if(t&&(r.network=t),s&&(r.protocolParameters=s),e&&(r.provider=e),e&&!s){let a=await e.getProtocolParameters();r.protocolParameters=a,r.provider instanceof Re&&(r.network="Custom",be[r.network]={zeroTime:r.provider.now(),zeroSlot:0,slotLength:1e3})}if(r.protocolParameters){let a=be[r.network];r.txBuilderConfig=o.TransactionBuilderConfigBuilder.new().coins_per_utxo_byte(o.BigNum.from_str(r.protocolParameters.coinsPerUtxoByte.toString())).fee_algo(o.LinearFee.new(o.BigNum.from_str(r.protocolParameters.minFeeA.toString()),o.BigNum.from_str(r.protocolParameters.minFeeB.toString()))).key_deposit(o.BigNum.from_str(r.protocolParameters.keyDeposit.toString())).pool_deposit(o.BigNum.from_str(r.protocolParameters.poolDeposit.toString())).max_tx_size(r.protocolParameters.maxTxSize).max_value_size(r.protocolParameters.maxValSize).collateral_percentage(r.protocolParameters.collateralPercentage).max_collateral_inputs(r.protocolParameters.maxCollateralInputs).max_tx_ex_units(o.ExUnits.new(o.BigNum.from_str(r.protocolParameters.maxTxExMem.toString()),o.BigNum.from_str(r.protocolParameters.maxTxExSteps.toString()))).ex_unit_prices(o.ExUnitPrices.from_float(r.protocolParameters.priceMem,r.protocolParameters.priceStep)).slot_config(o.BigNum.from_str(a.zeroTime.toString()),o.BigNum.from_str(a.zeroSlot.toString()),a.slotLength).blockfrost(o.Blockfrost.new((e?.url||"")+"/utils/txs/evaluate",e?.projectId||"")).costmdls(Qe(r.protocolParameters.costModels)).build()}return r.utils=new Pe(r),r}async switchProvider(e,t){if(this.network==="Custom")throw new Error("Cannot switch when on custom network.");let s=await $e.new(e,t);return this.txBuilderConfig=s.txBuilderConfig,this.provider=e||this.provider,this.network=t||this.network,this.wallet=s.wallet,this}newTx(){return new De(this)}fromTx(e){return new _e(this,o.Transaction.from_bytes(d(e)))}newMessage(e,t){return new Me(this,e,t)}verifyMessage(e,t,s){let{paymentCredential:r,stakeCredential:a,address:{hex:i}}=this.utils.getAddressDetails(e),u=r?.hash||a?.hash;if(!u)throw new Error("Not a valid address provided.");return At(i,u,t,s)}currentSlot(){return this.utils.unixTimeToSlot(Date.now())}utxosAt(e){return this.provider.getUtxos(e)}utxosAtWithUnit(e,t){return this.provider.getUtxosWithUnit(e,t)}utxoByUnit(e){return this.provider.getUtxoByUnit(e)}utxosByOutRef(e){return this.provider.getUtxosByOutRef(e)}delegationAt(e){return this.provider.getDelegation(e)}awaitTx(e,t=3e3){return this.provider.awaitTx(e,t)}async datumOf(e,t){if(!e.datum){if(!e.datumHash)throw new Error("This UTxO does not have a datum hash.");e.datum=await this.provider.getDatum(e.datumHash)}return ee.from(e.datum,t)}async metadataOf(e){let{policyId:t,name:s,label:r}=Ce(e);switch(r){case 222:case 333:case 444:{let a=await this.utxoByUnit(Ct(t,s,100)),i=await this.datumOf(a);return ee.toJson(i.fields[0])}default:throw new Error("No variant matched.")}}selectWalletFromPrivateKey(e){let t=o.PrivateKey.from_bech32(e),s=t.to_public().hash();return this.wallet={address:async()=>o.EnterpriseAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_keyhash(s)).to_address().to_bech32(void 0),rewardAddress:async()=>null,getCollateralCore:()=>{},getUtxos:async()=>await this.utxosAt(ie(await this.wallet.address())),getUtxosCore:async()=>{let r=await this.utxosAt(ie(await this.wallet.address())),a=o.TransactionUnspentOutputs.new();return r.forEach(i=>{a.add(ue(i))}),a},getDelegation:async()=>({poolId:null,rewards:0n}),signTx:async r=>{let a=o.make_vkey_witness(o.hash_transaction(r.body()),t),i=o.TransactionWitnessSetBuilder.new();return i.add_vkey(a),i.build()},signMessage:async(r,a)=>{let{paymentCredential:i,address:{hex:u}}=this.utils.getAddressDetails(r),c=i?.hash,m=s.to_hex();if(!c||c!==m)throw new Error(`Cannot sign message for address: ${r}.`);return Ie(u,a,e)},submitTx:async r=>await this.provider.submitTx(r)},this}selectWallet(e){let t=async()=>{let[s]=await e.getUsedAddresses();if(s)return s;let[r]=await e.getUnusedAddresses();return r};return this.wallet={address:async()=>o.Address.from_bytes(d(await t())).to_bech32(void 0),rewardAddress:async()=>{let[s]=await e.getRewardAddresses();return s?o.RewardAddress.from_address(o.Address.from_bytes(d(s))).to_address().to_bech32(void 0):null},getCollateralCore:()=>{},getUtxos:async()=>(await e.getUtxos()||[]).map(r=>{let a=o.TransactionUnspentOutput.from_bytes(d(r));return Oe(a)}),getUtxosCore:async()=>{let s=o.TransactionUnspentOutputs.new();return(await e.getUtxos()||[]).forEach(r=>{s.add(o.TransactionUnspentOutput.from_bytes(d(r)))}),s},getDelegation:async()=>{let s=await this.wallet.rewardAddress();return s?await this.delegationAt(s):{poolId:null,rewards:0n}},signTx:async s=>{let r=await e.signTx(y(s.to_bytes()),!0);return o.TransactionWitnessSet.from_bytes(d(r))},signMessage:async(s,r)=>{let a=y(o.Address.from_bech32(s).to_bytes());return await e.signData(a,r)},submitTx:async s=>await e.submitTx(s)},this}selectWalletFrom({address:e,utxos:t,rewardAddress:s,collateral:r}){let a=this.utils.getAddressDetails(e);return this.wallet={address:async()=>e,rewardAddress:async()=>(!s&&a.stakeCredential?(()=>a.stakeCredential.type==="Key"?o.RewardAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(a.stakeCredential.hash))).to_address().to_bech32(void 0):o.RewardAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(a.stakeCredential.hash))).to_address().to_bech32(void 0))():s)||null,getCollateralCore:()=>{if(!r||!r.length)return;let i=o.TransactionUnspentOutputs.new();return r.forEach(u=>i.add(ue(u))),i},getUtxos:async()=>t||await this.utxosAt(ie(e)),getUtxosCore:async()=>{let i=o.TransactionUnspentOutputs.new();return(t||await this.utxosAt(ie(e))).forEach(u=>i.add(ue(u))),i},getDelegation:async()=>{let i=await this.wallet.rewardAddress();return i?await this.delegationAt(i):{poolId:null,rewards:0n}},signTx:async()=>{throw new Error("Not implemented")},signMessage:async()=>{throw new Error("Not implemented")},submitTx:async i=>await this.provider.submitTx(i)},this}selectWalletFromSeed(e,t){let{address:s,rewardAddress:r,paymentKey:a,stakeKey:i}=Pt(e,{addressType:t?.addressType||"Base",accountIndex:t?.accountIndex||0,password:t?.password,network:this.network}),u=o.PrivateKey.from_bech32(a).to_public().hash().to_hex(),c=i?o.PrivateKey.from_bech32(i).to_public().hash().to_hex():"",m={[u]:a,[c]:i};return this.wallet={address:async()=>s,rewardAddress:async()=>r||null,getCollateralCore:()=>{},getUtxos:async()=>this.utxosAt(ie(s)),getUtxosCore:async()=>{let p=o.TransactionUnspentOutputs.new();return(await this.utxosAt(ie(s))).forEach(C=>p.add(ue(C))),p},getDelegation:async()=>{let p=await this.wallet.rewardAddress();return p?await this.delegationAt(p):{poolId:null,rewards:0n}},signTx:async p=>{let C=await this.utxosAt(s),h=Ot(p,[u,c],C),_=o.TransactionWitnessSetBuilder.new();return h.forEach(I=>{let w=o.make_vkey_witness(o.hash_transaction(p.body()),o.PrivateKey.from_bech32(m[I]));_.add_vkey(w)}),_.build()},signMessage:async(p,C)=>{let{paymentCredential:E,stakeCredential:h,address:{hex:_}}=this.utils.getAddressDetails(p),I=E?.hash||h?.hash,w=m[I];if(!w)throw new Error(`Cannot sign message for address: ${p}.`);return Ie(_,C,w)},submitTx:async p=>await this.provider.submitTx(p)},this}};var Ht=class{constructor(e,t){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"projectId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=e,this.projectId=t||""}async getProtocolParameters(){let e=await fetch(`${this.url}/epochs/latest/parameters`,{headers:{project_id:this.projectId,lucid:V}}).then(t=>t.json());return{minFeeA:parseInt(e.min_fee_a),minFeeB:parseInt(e.min_fee_b),maxTxSize:parseInt(e.max_tx_size),maxValSize:parseInt(e.max_val_size),keyDeposit:BigInt(e.key_deposit),poolDeposit:BigInt(e.pool_deposit),priceMem:parseFloat(e.price_mem),priceStep:parseFloat(e.price_step),maxTxExMem:BigInt(e.max_tx_ex_mem),maxTxExSteps:BigInt(e.max_tx_ex_steps),coinsPerUtxoByte:BigInt(e.coins_per_utxo_size),collateralPercentage:parseInt(e.collateral_percent),maxCollateralInputs:parseInt(e.max_collateral_inputs),costModels:e.cost_models}}async getUtxos(e){let t=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_vkh"))(),s=[],r=1;for(;;){let a=await fetch(`${this.url}/addresses/${t}/utxos?page=${r}`,{headers:{project_id:this.projectId,lucid:V}}).then(i=>i.json());if(a.error){if(a.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(s=s.concat(a),a.length<=0)break;r++}return this.blockfrostUtxosToUtxos(s)}async getUtxosWithUnit(e,t){let s=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_vkh"))(),r=[],a=1;for(;;){let i=await fetch(`${this.url}/addresses/${s}/utxos/${t}?page=${a}`,{headers:{project_id:this.projectId,lucid:V}}).then(u=>u.json());if(i.error){if(i.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(r=r.concat(i),i.length<=0)break;a++}return this.blockfrostUtxosToUtxos(r)}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:{project_id:this.projectId,lucid:V}}).then(a=>a.json());if(!t||t.error)throw new Error("Unit not found.");if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");let s=t[0].address,r=await this.getUtxosWithUnit(s,e);if(r.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return r[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(r=>r.txHash))];return(await Promise.all(t.map(async r=>{let a=await fetch(`${this.url}/txs/${r}/utxos`,{headers:{project_id:this.projectId,lucid:V}}).then(u=>u.json());if(!a||a.error)return[];let i=a.outputs.map(u=>({...u,tx_hash:r}));return this.blockfrostUtxosToUtxos(i)}))).reduce((r,a)=>r.concat(a),[]).filter(r=>e.some(a=>r.txHash===a.txHash&&r.outputIndex===a.outputIndex))}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:{project_id:this.projectId,lucid:V}}).then(s=>s.json());return!t||t.error?{poolId:null,rewards:0n}:{poolId:t.pool_id||null,rewards:BigInt(t.withdrawable_amount)}}async getDatum(e){let t=await fetch(`${this.url}/scripts/datum/${e}/cbor`,{headers:{project_id:this.projectId,lucid:V}}).then(s=>s.json()).then(s=>s.cbor);if(!t||t.error)throw new Error(`No datum found for datum hash: ${e}`);return t}awaitTx(e,t=3e3){return new Promise(s=>{let r=setInterval(async()=>{let a=await fetch(`${this.url}/txs/${e}`,{headers:{project_id:this.projectId,lucid:V}}).then(i=>i.json());if(a&&!a.error)return clearInterval(r),await new Promise(i=>setTimeout(()=>i(1),1e3)),s(!0)},t)})}async submitTx(e){let t=await fetch(`${this.url}/tx/submit`,{method:"POST",headers:{"Content-Type":"application/cbor",project_id:this.projectId,lucid:V},body:d(e)}).then(s=>s.json());if(!t||t.error)throw t?.status_code===400?new Error(t.message):new Error("Could not submit transaction.");return t}async blockfrostUtxosToUtxos(e){return await Promise.all(e.map(async t=>({txHash:t.tx_hash,outputIndex:t.output_index,assets:Object.fromEntries(t.amount.map(({unit:s,quantity:r})=>[s,BigInt(r)])),address:t.address,datumHash:!t.inline_datum&&t.data_hash||void 0,datum:t.inline_datum||void 0,scriptRef:t.reference_script_hash?await(async()=>{let{type:s}=await fetch(`${this.url}/scripts/${t.reference_script_hash}`,{headers:{project_id:this.projectId,lucid:V}}).then(a=>a.json());if(s==="Native"||s==="native")throw new Error("Native script ref not implemented!");let{cbor:r}=await fetch(`${this.url}/scripts/${t.reference_script_hash}/cbor`,{headers:{project_id:this.projectId,lucid:V}}).then(a=>a.json());return{type:s==="plutusV1"?"PlutusV1":"PlutusV2",script:q(r)}})():void 0})))}};function Vs(n){let e=t=>{if(isNaN(t.int)){if(t.bytes||!isNaN(Number(t.bytes)))return o.PlutusData.new_bytes(d(t.bytes));if(t.map){let s=o.PlutusMap.new();return t.map.forEach(({k:r,v:a})=>{s.insert(e(r),e(a))}),o.PlutusData.new_map(s)}else if(t.list){let s=o.PlutusList.new();return t.list.forEach(r=>{s.add(e(r))}),o.PlutusData.new_list(s)}else if(!isNaN(t.constructor)){let s=o.PlutusList.new();return t.fields.forEach(r=>{s.add(e(r))}),o.PlutusData.new_constr_plutus_data(o.ConstrPlutusData.new(o.BigNum.from_str(t.constructor.toString()),s))}}else return o.PlutusData.new_integer(o.BigInt.from_str(t.int.toString()));throw new Error("Unsupported type")};return y(e(n).to_bytes())}var V=ge.version;var Ut=class{constructor(e,t){Object.defineProperty(this,"kupoUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ogmiosUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.kupoUrl=e,this.ogmiosUrl=t}async getProtocolParameters(){let e=await this.ogmiosWsp("Query",{query:"currentProtocolParameters"});return new Promise((t,s)=>{e.addEventListener("message",r=>{try{let{result:a}=JSON.parse(r.data),i={};Object.keys(a.costModels).forEach(C=>{let h="Plutus"+C.split(":")[1].toUpperCase();i[h]=a.costModels[C]});let[u,c]=a.prices.memory.split("/"),[m,p]=a.prices.steps.split("/");t({minFeeA:parseInt(a.minFeeCoefficient),minFeeB:parseInt(a.minFeeConstant),maxTxSize:parseInt(a.maxTxSize),maxValSize:parseInt(a.maxValueSize),keyDeposit:BigInt(a.stakeKeyDeposit),poolDeposit:BigInt(a.poolDeposit),priceMem:parseInt(u)/parseInt(c),priceStep:parseInt(m)/parseInt(p),maxTxExMem:BigInt(a.maxExecutionUnitsPerTransaction.memory),maxTxExSteps:BigInt(a.maxExecutionUnitsPerTransaction.steps),coinsPerUtxoByte:BigInt(a.coinsPerUtxoByte),collateralPercentage:parseInt(a.collateralPercentage),maxCollateralInputs:parseInt(a.maxCollateralInputs),costModels:i}),e.close()}catch(a){s(a)}},{once:!0})})}async getUtxos(e){let t=typeof e=="string",s=t?e:e.hash,r=await fetch(`${this.kupoUrl}/matches/${s}${t?"":"/*"}?unspent`).then(a=>a.json());return this.kupmiosUtxosToUtxos(r)}async getUtxosWithUnit(e,t){let s=typeof e=="string",r=s?e:e.hash,{policyId:a,assetName:i}=Ce(t),u=await fetch(`${this.kupoUrl}/matches/${r}${s?"":"/*"}?unspent&policy_id=${a}${i?`&asset_name=${i}`:""}`).then(c=>c.json());return this.kupmiosUtxosToUtxos(u)}async getUtxoByUnit(e){let{policyId:t,assetName:s}=Ce(e),r=await fetch(`${this.kupoUrl}/matches/${t}.${s?`${s}`:"*"}?unspent`).then(i=>i.json()),a=await this.kupmiosUtxosToUtxos(r);if(a.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return a[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(r=>r.txHash))];return(await Promise.all(t.map(async r=>{let a=await fetch(`${this.kupoUrl}/matches/*@${r}?unspent`).then(i=>i.json());return this.kupmiosUtxosToUtxos(a)}))).reduce((r,a)=>r.concat(a),[]).filter(r=>e.some(a=>r.txHash===a.txHash&&r.outputIndex===a.outputIndex))}async getDelegation(e){let t=await this.ogmiosWsp("Query",{query:{delegationsAndRewards:[e]}});return new Promise((s,r)=>{t.addEventListener("message",a=>{try{let{result:i}=JSON.parse(a.data),u=i?Object.values(i)[0]:{};s({poolId:u?.delegate||null,rewards:BigInt(u?.rewards||0)}),t.close()}catch(i){r(i)}},{once:!0})})}async getDatum(e){let t=await fetch(`${this.kupoUrl}/datums/${e}`).then(s=>s.json());if(!t||!t.datum)throw new Error(`No datum found for datum hash: ${e}`);return t.datum}awaitTx(e,t=3e3){return new Promise(s=>{let r=setInterval(async()=>{let a=await fetch(`${this.kupoUrl}/matches/*@${e}?unspent`).then(i=>i.json());if(a&&a.length>0)return clearInterval(r),await new Promise(i=>setTimeout(()=>i(1),1e3)),s(!0)},t)})}async submitTx(e){let t=await this.ogmiosWsp("SubmitTx",{submit:e});return new Promise((s,r)=>{t.addEventListener("message",a=>{try{let{result:i}=JSON.parse(a.data);i.SubmitSuccess?s(i.SubmitSuccess.txId):r(i.SubmitFail),t.close()}catch(i){r(i)}},{once:!0})})}kupmiosUtxosToUtxos(e){return Promise.all(e.map(async t=>({txHash:t.transaction_id,outputIndex:parseInt(t.output_index),address:t.address,assets:(()=>{let s={lovelace:BigInt(t.value.coins)};return Object.keys(t.value.assets).forEach(r=>{s[r.replace(".","")]=BigInt(t.value.assets[r])}),s})(),datumHash:t?.datum_type==="hash"?t.datum_hash:null,datum:t?.datum_type==="inline"?await this.getDatum(t.datum_hash):null,scriptRef:t.script_hash&&await(async()=>{let{script:s,language:r}=await fetch(`${this.kupoUrl}/scripts/${t.script_hash}`).then(a=>a.json());if(r==="native")return{type:"Native",script:s};if(r==="plutus:v1")return{type:"PlutusV1",script:y(o.PlutusScript.new(d(s)).to_bytes())};if(r==="plutus:v2")return{type:"PlutusV2",script:y(o.PlutusScript.new(d(s)).to_bytes())}})()})))}async ogmiosWsp(e,t){let s=new WebSocket(this.ogmiosUrl);return await new Promise(r=>{s.addEventListener("open",()=>r(1),{once:!0})}),s.send(JSON.stringify({type:"jsonwsp/request",version:"1.0",servicename:"ogmios",methodname:e,args:t})),s}};var jt=class{constructor(e,t=""){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=e.slice(-1)==="/"?e.slice(0,-1):e,this.apiKey=t}async getProtocolParameters(){let e=await fetch(`${this.url}/protocol-params`,{headers:this.commonHeaders()}).then(r=>r.json()),t=r=>{let a=r.indexOf("/");return parseInt(r.slice(0,a))/parseInt(r.slice(a+1))},s=(r,a)=>{let i=Object.keys(r).map(u=>({[a[u]||u]:Object.fromEntries(Object.entries(r[u]).sort(([m,p],[C,E])=>m.localeCompare(C)))}));return Object.assign({},...i)};return{minFeeA:parseInt(e.min_fee_coefficient),minFeeB:parseInt(e.min_fee_constant),maxTxSize:parseInt(e.max_tx_size),maxValSize:parseInt(e.max_value_size),keyDeposit:BigInt(e.stake_key_deposit),poolDeposit:BigInt(e.pool_deposit),priceMem:t(e.prices.memory),priceStep:t(e.prices.steps),maxTxExMem:BigInt(e.max_execution_units_per_transaction.memory),maxTxExSteps:BigInt(e.max_execution_units_per_transaction.steps),coinsPerUtxoByte:BigInt(e.coins_per_utxo_byte),collateralPercentage:parseInt(e.collateral_percentage),maxCollateralInputs:parseInt(e.max_collateral_inputs),costModels:s(e.cost_models,{"plutus:v1":"PlutusV1","plutus:v2":"PlutusV2"})}}async getUtxos(e){let t=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("script"))(),s=[],r=1;for(;;){let a=await fetch(`${this.url}/addresses/${t}/utxos?page=${r}`,{headers:this.commonHeaders()}),i=await a.json();if(!a.ok)throw new Error("Could not fetch UTxOs from Maestro. Try again.");if(s=s.concat(i),i.length<=0)break;r++}return s.map(this.maestroUtxoToUtxo)}async getUtxosWithUnit(e,t){return(await this.getUtxos(e)).filter(r=>r.assets[t])}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:this.commonHeaders()}).then(a=>a.json());if(t.length===0)throw new Error("Unit not found.");if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");let s=t[0],r=await this.getUtxosWithUnit(s,e);if(r.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return r[0]}async getUtxosByOutRef(e){return(await Promise.all(e.map(async s=>{let r=await fetch(`${this.url}/transactions/${s.txHash}/outputs/${s.outputIndex}/utxo`,{headers:this.commonHeaders()}).then(a=>a.json());return!r||r.message?[]:[this.maestroUtxoToUtxo(r)]}))).reduce((s,r)=>s.concat(r),[])}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:this.commonHeaders()}).then(s=>s.json());return!t||t.message?{poolId:null,rewards:0n}:{poolId:t.delegated_pool||null,rewards:BigInt(t.rewards_available)}}async getDatum(e){let t=await fetch(`${this.url}/datum/${e}`,{headers:this.commonHeaders()}).then(s=>s.json());if(!t||t.message)throw new Error(`No datum found for datum hash: ${e}`);return t.bytes}awaitTx(e,t=3e3){return new Promise(s=>{let r=setInterval(async()=>{let a=await fetch(`${this.url}/transactions/${e}/cbor`,{headers:this.commonHeaders()}).then(i=>i.json());if(a&&!a.message)return clearInterval(r),await new Promise(i=>setTimeout(()=>i(1),1e3)),s(!0)},t)})}async submitTx(e){let t=await fetch(`${this.url}/txmanager`,{method:"POST",headers:{"Content-Type":"application/cbor",...this.commonHeaders()},body:d(e)}),s=await t.text();if(!t.ok)throw t.status===400?new Error(s):new Error("Could not submit transaction.");return s}commonHeaders(){return{"api-key":this.apiKey,lucid:dr}}maestroUtxoToUtxo(e){return{txHash:e.tx_hash,outputIndex:e.index,assets:(()=>{let t={};return e.assets.forEach(s=>{t[s.unit.replace("#","")]=BigInt(s.quantity)}),t})(),address:e.address,datumHash:e.datum?e.datum.type=="inline"?void 0:e.datum.hash:void 0,datum:e.datum?.bytes,scriptRef:e.reference_script?e.reference_script.type=="native"?void 0:{type:e.reference_script.type=="plutusv1"?"PlutusV1":"PlutusV2",script:q(e.reference_script.bytes)}:void 0}}},dr=ge.version;export{Ht as Blockfrost,o as C,j as Constr,ee as Data,Re as Emulator,Ut as Kupmios,$e as Lucid,T as M,jt as Maestro,Ue as MerkleTree,et as PROTOCOL_PARAMETERS_DEFAULT,be as SLOT_CONFIG_NETWORK,De as Tx,_e as TxComplete,je as TxSigned,Pe as Utils,$r as addAssets,q as applyDoubleCborEncoding,Rr as applyParamsToScript,me as assetsToValue,It as chunk,Fe as combineHash,Et as concat,Oe as coreToUtxo,Qe as createCostModels,Vs as datumJsonToCbor,Ae as equals,d as fromHex,ir as fromLabel,ar as fromScriptRef,vt as fromText,Ce as fromUnit,sr as generatePrivateKey,nr as generateSeedPhrase,D as getAddressDetails,ur as nativeScriptFromJson,oe as networkToId,ie as paymentCredentialOf,He as sha256,pt as slotToBeginUnixTime,rr as stakeCredentialOf,y as toHex,or as toLabel,Mr as toPublicKey,We as toScriptRef,Dr as toText,Ct as toUnit,ft as unixTimeToEnclosingSlot,ue as utxoToCore,Ve as valueToAssets};
